<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>gracefullight.dev Blog</title>
        <link>https://gracefullight.dev/en/</link>
        <description>gracefullight.dev Blog</description>
        <lastBuildDate>Sun, 30 Jun 2024 12:17:37 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[IaC, 코드형 인프라스트럭처]]></title>
            <link>https://gracefullight.dev/en/pe/architecture/IaC/</link>
            <guid>https://gracefullight.dev/en/pe/architecture/IaC/</guid>
            <pubDate>Sun, 30 Jun 2024 12:17:37 GMT</pubDate>
            <description><![CDATA[Infrastructure as Code]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_O5py" id="iac의-개념">IaC의 개념<a class="hash-link" aria-label="Direct link to heading" title="Direct link to heading" href="https://gracefullight.dev/en/pe/architecture/IaC/#iac%EC%9D%98-%EA%B0%9C%EB%85%90">​</a></h2>
<ul>
<li>인프라 구성 및 제어를 수동으로 관리하는 대신 코드로 정의하고 관리하는 기법</li>
<li>휴먼에러 방지, 자동화, 일관성, 버전 관리</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_O5py" id="iac의-구성도-구성요소-장점">IaC의 구성도, 구성요소, 장점<a class="hash-link" aria-label="Direct link to heading" title="Direct link to heading" href="https://gracefullight.dev/en/pe/architecture/IaC/#iac%EC%9D%98-%EA%B5%AC%EC%84%B1%EB%8F%84-%EA%B5%AC%EC%84%B1%EC%9A%94%EC%86%8C-%EC%9E%A5%EC%A0%90">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_O5py" id="iac의-구성도">IaC의 구성도<a class="hash-link" aria-label="Direct link to heading" title="Direct link to heading" href="https://gracefullight.dev/en/pe/architecture/IaC/#iac%EC%9D%98-%EA%B5%AC%EC%84%B1%EB%8F%84">​</a></h3>
<!-- -->
<h3 class="anchor anchorWithStickyNavbar_O5py" id="iac의-구성요소">IaC의 구성요소<a class="hash-link" aria-label="Direct link to heading" title="Direct link to heading" href="https://gracefullight.dev/en/pe/architecture/IaC/#iac%EC%9D%98-%EA%B5%AC%EC%84%B1%EC%9A%94%EC%86%8C">​</a></h3>
<table><thead><tr><th>구분</th><th>내용</th><th>비고</th></tr></thead><tbody><tr><td>버전관리시스템</td><td>코드 변경사항 추적 및 관리</td><td>Git</td></tr><tr><td>파이프라인</td><td>코드 통합, 테스트, 배포 자동화</td><td>ArgoCD</td></tr><tr><td>프로비저닝</td><td>인프라를 코드로 정의, 배포</td><td>Ansible, Terraform</td></tr><tr><td>부트스트랩</td><td>어플리케이션 배포에 필요한 설정 관리</td><td>Docker, Helm</td></tr></tbody></table>
<h3 class="anchor anchorWithStickyNavbar_O5py" id="iac의-장점">IaC의 장점<a class="hash-link" aria-label="Direct link to heading" title="Direct link to heading" href="https://gracefullight.dev/en/pe/architecture/IaC/#iac%EC%9D%98-%EC%9E%A5%EC%A0%90">​</a></h3>
<table><thead><tr><th>구분</th><th>장점</th><th>비고</th></tr></thead><tbody><tr><td>비용효율측면</td><td>작업시간 단축</td><td>반복작업 자동화</td></tr><tr><td>-</td><td>예방비용 감소</td><td>인프라 단위 테스트</td></tr><tr><td>에러관리 측면</td><td>휴먼에러 감소</td><td>코드리뷰, 실수방지</td></tr><tr><td>-</td><td>빠른 롤백</td><td>구성 실패시 이전버전 롤백</td></tr></tbody></table>
<ul>
<li>개발 환경 구축과 배포 프로세스를 자동화하여 DevOps, GitOps 기술 요구사항 충족</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_O5py" id="iac-고려사항">IaC 고려사항<a class="hash-link" aria-label="Direct link to heading" title="Direct link to heading" href="https://gracefullight.dev/en/pe/architecture/IaC/#iac-%EA%B3%A0%EB%A0%A4%EC%82%AC%ED%95%AD">​</a></h2>
<ul>
<li>보안 관련 정보 추가시 파이프라인 내부 Secret Variable로 관리 필요</li>
</ul>]]></content:encoded>
            <category>pe</category>
            <category>pe/ca</category>
        </item>
        <item>
            <title><![CDATA[노코드]]></title>
            <link>https://gracefullight.dev/en/pe/architecture/no-code/</link>
            <guid>https://gracefullight.dev/en/pe/architecture/no-code/</guid>
            <pubDate>Sun, 30 Jun 2024 11:58:48 GMT</pubDate>
            <description><![CDATA[No-Code]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_O5py" id="노코드-개념">노코드 개념<a class="hash-link" aria-label="Direct link to heading" title="Direct link to heading" href="https://gracefullight.dev/en/pe/architecture/no-code/#%EB%85%B8%EC%BD%94%EB%93%9C-%EA%B0%9C%EB%85%90">​</a></h2>
<ul>
<li>프로그래밍 지식 없이 UI와 드래그 앤 드랍 기능 등을 활용하여 SW를 개발할 수 있도록하는 플랫폼 또는 도구</li>
<li>개발 속도 향상으로 인한 비용절감과 비전문가도 어플리케이션을 개발할 수 있는 접근성 향상</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_O5py" id="노코드-구성도-구성요소-적용방안">노코드 구성도, 구성요소, 적용방안<a class="hash-link" aria-label="Direct link to heading" title="Direct link to heading" href="https://gracefullight.dev/en/pe/architecture/no-code/#%EB%85%B8%EC%BD%94%EB%93%9C-%EA%B5%AC%EC%84%B1%EB%8F%84-%EA%B5%AC%EC%84%B1%EC%9A%94%EC%86%8C-%EC%A0%81%EC%9A%A9%EB%B0%A9%EC%95%88">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_O5py" id="노코드-구성도">노코드 구성도<a class="hash-link" aria-label="Direct link to heading" title="Direct link to heading" href="https://gracefullight.dev/en/pe/architecture/no-code/#%EB%85%B8%EC%BD%94%EB%93%9C-%EA%B5%AC%EC%84%B1%EB%8F%84">​</a></h3>
<!-- -->
<h3 class="anchor anchorWithStickyNavbar_O5py" id="노코드-구성요소">노코드 구성요소<a class="hash-link" aria-label="Direct link to heading" title="Direct link to heading" href="https://gracefullight.dev/en/pe/architecture/no-code/#%EB%85%B8%EC%BD%94%EB%93%9C-%EA%B5%AC%EC%84%B1%EC%9A%94%EC%86%8C">​</a></h3>
<table><thead><tr><th>구분</th><th>내용</th><th>비고</th></tr></thead><tbody><tr><td>사용자 인터페이스</td><td>시각적으로 어플리케이션 또는 워크플로우 조작</td><td>드래그 앤 드랍</td></tr><tr><td>모듈</td><td>사전 구성된 기능 모듈</td><td>재사용 가능</td></tr><tr><td>버전관리</td><td>다중 사용자 환경 구축</td><td>문서 버저닝</td></tr><tr><td>데이터 모델 통합</td><td>기능과 비지니스 로직, 데이터 모델 통합</td><td>API, 데이터 제어</td></tr></tbody></table>
<h3 class="anchor anchorWithStickyNavbar_O5py" id="노코드-적용방안">노코드 적용방안<a class="hash-link" aria-label="Direct link to heading" title="Direct link to heading" href="https://gracefullight.dev/en/pe/architecture/no-code/#%EB%85%B8%EC%BD%94%EB%93%9C-%EC%A0%81%EC%9A%A9%EB%B0%A9%EC%95%88">​</a></h3>
<table><thead><tr><th>구분</th><th>내용</th><th>비고</th></tr></thead><tbody><tr><td>공공</td><td>코딩 없는 SW 개발 교육</td><td>생산성 향상</td></tr><tr><td>금융</td><td>데이터 분석 도구 시각화</td><td>대쉬보드 사용성</td></tr><tr><td>민간</td><td>빠른 프로토타이핑, 시장 출시</td><td>효율성, 비용절감</td></tr></tbody></table>
<h2 class="anchor anchorWithStickyNavbar_O5py" id="노코드-사용시-고려사항">노코드 사용시 고려사항<a class="hash-link" aria-label="Direct link to heading" title="Direct link to heading" href="https://gracefullight.dev/en/pe/architecture/no-code/#%EB%85%B8%EC%BD%94%EB%93%9C-%EC%82%AC%EC%9A%A9%EC%8B%9C-%EA%B3%A0%EB%A0%A4%EC%82%AC%ED%95%AD">​</a></h2>
<ul>
<li>커스터마이징이 필요한 경우, Low-code 플랫폼이나 전통적 코딩 방식으로 어플리케이션 구현 필요.</li>
</ul>]]></content:encoded>
            <category>pe</category>
            <category>pe/ca</category>
        </item>
        <item>
            <title><![CDATA[RAID]]></title>
            <link>https://gracefullight.dev/en/pe/architecture/RAID/</link>
            <guid>https://gracefullight.dev/en/pe/architecture/RAID/</guid>
            <pubDate>Sun, 30 Jun 2024 11:15:24 GMT</pubDate>
            <description><![CDATA[Redundant Array Independent Disks]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_O5py" id="raid의-개념">RAID의 개념<a class="hash-link" aria-label="Direct link to heading" title="Direct link to heading" href="https://gracefullight.dev/en/pe/architecture/RAID/#raid%EC%9D%98-%EA%B0%9C%EB%85%90">​</a></h2>
<ul>
<li>디스크의 안정성과 성능을 위해 여러 개의 개별 디스크를 연결하여 대용량 디스크를 구성하는 기술</li>
<li>가용성 Fault Tolerant, 유지보수성 Hot-Swap, 고속 I/O Striping, 안정성 Mirroring, Parity Check, 확장성</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_O5py" id="raid의-유형-raid5-raid6-비교">RAID의 유형, RAID5, RAID6 비교<a class="hash-link" aria-label="Direct link to heading" title="Direct link to heading" href="https://gracefullight.dev/en/pe/architecture/RAID/#raid%EC%9D%98-%EC%9C%A0%ED%98%95-raid5-raid6-%EB%B9%84%EA%B5%90">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_O5py" id="raid의-유형">RAID의 유형<a class="hash-link" aria-label="Direct link to heading" title="Direct link to heading" href="https://gracefullight.dev/en/pe/architecture/RAID/#raid%EC%9D%98-%EC%9C%A0%ED%98%95">​</a></h3>
<table><thead><tr><th>구분</th><th>개념도</th><th>특징</th><th>최소 디스크 수</th></tr></thead><tbody><tr><td>RAID0</td><td>-</td><td>데이터 분산 저장, 스트라이핑</td><td>2</td></tr><tr><td>RAID1</td><td>-</td><td>데이터 중복 저장, 미러링</td><td>2</td></tr><tr><td>RAID2</td><td>-</td><td>해밍코드, 다수 패리티 디스크, 사용안함</td><td>3</td></tr><tr><td>RAID3</td><td>-</td><td>별도 패리티 디스크, 사용안함</td><td>3</td></tr><tr><td>RAID4</td><td>-</td><td>블록단위 별도 패리티 디스크, 사용안함</td><td>3</td></tr><tr><td>RAID5</td><td>-</td><td>패리티 스트라이핑, 데이터 무결성 보장</td><td>3</td></tr><tr><td>RAID6</td><td>-</td><td>이중 패리티 스트라이핑, 높은 신뢰성</td><td>4</td></tr><tr><td>RAID01</td><td>-</td><td>스트라이핑 후 미러링, 장애시 전체 복구</td><td>4</td></tr><tr><td>RAID10</td><td>-</td><td>미러링 후 스트라이핑, 손실된 데이터만 복구</td><td>4</td></tr></tbody></table>
<ul>
<li>RAID50은 최소 디스크 6개 필요</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_O5py" id="raid5-6-비교">RAID5, 6 비교<a class="hash-link" aria-label="Direct link to heading" title="Direct link to heading" href="https://gracefullight.dev/en/pe/architecture/RAID/#raid5-6-%EB%B9%84%EA%B5%90">​</a></h3>
<table><thead><tr><th>구분</th><th>RAID5</th><th>RAID6</th></tr></thead><tbody><tr><td>최소 디스크 수</td><td>3개</td><td>4개</td></tr><tr><td>고장 허용 디스크</td><td>1개</td><td>2개</td></tr><tr><td>패리티 수</td><td>1</td><td>2</td></tr><tr><td>장점</td><td>저장효율성, 관리 용이성, 빠른 읽기 성능, 적절한 쓰기 성능</td><td>이중 디스크 장애허용, 높은 내결함성, 안정성</td></tr><tr><td>단점</td><td>복수 디스크 손상시 데이터 손실</td><td>느린 쓰기 성능, 복잡한 구현</td></tr></tbody></table>
<h2 class="anchor anchorWithStickyNavbar_O5py" id="raid-적용시-고려사항">RAID 적용시 고려사항<a class="hash-link" aria-label="Direct link to heading" title="Direct link to heading" href="https://gracefullight.dev/en/pe/architecture/RAID/#raid-%EC%A0%81%EC%9A%A9%EC%8B%9C-%EA%B3%A0%EB%A0%A4%EC%82%AC%ED%95%AD">​</a></h2>
<ul>
<li>RAID는 백업이 아니므로, RTO, RPO를 고려한 별도의 증분 백업 전략 수립</li>
</ul>]]></content:encoded>
            <category>pe</category>
            <category>pe/ca</category>
        </item>
        <item>
            <title><![CDATA[Thrashing, 스레싱]]></title>
            <link>https://gracefullight.dev/en/pe/architecture/thrashing/</link>
            <guid>https://gracefullight.dev/en/pe/architecture/thrashing/</guid>
            <pubDate>Sun, 30 Jun 2024 10:21:46 GMT</pubDate>
            <description><![CDATA[Thrashing]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_O5py" id="스레싱의-개념">스레싱의 개념<a class="hash-link" aria-label="Direct link to heading" title="Direct link to heading" href="https://gracefullight.dev/en/pe/architecture/thrashing/#%EC%8A%A4%EB%A0%88%EC%8B%B1%EC%9D%98-%EA%B0%9C%EB%85%90">​</a></h2>
<ul>
<li>멀티프로세싱 환경에서 빈번한 페이지 교체로 실제 프로세스 실행보다 페잊 ㅣ교체에 더 많은 시간을 소요하여 프로세스 성능이 낮아지는 이상현상</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_O5py" id="프로세스-스레싱의-개념도-원인-해결방안">프로세스 스레싱의 개념도, 원인, 해결방안<a class="hash-link" aria-label="Direct link to heading" title="Direct link to heading" href="https://gracefullight.dev/en/pe/architecture/thrashing/#%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4-%EC%8A%A4%EB%A0%88%EC%8B%B1%EC%9D%98-%EA%B0%9C%EB%85%90%EB%8F%84-%EC%9B%90%EC%9D%B8-%ED%95%B4%EA%B2%B0%EB%B0%A9%EC%95%88">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_O5py" id="프로세스-스레싱의-개념도">프로세스 스레싱의 개념도<a class="hash-link" aria-label="Direct link to heading" title="Direct link to heading" href="https://gracefullight.dev/en/pe/architecture/thrashing/#%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4-%EC%8A%A4%EB%A0%88%EC%8B%B1%EC%9D%98-%EA%B0%9C%EB%85%90%EB%8F%84">​</a></h3>
<h3 class="anchor anchorWithStickyNavbar_O5py" id="프로세스-스레싱의-원인">프로세스 스레싱의 원인<a class="hash-link" aria-label="Direct link to heading" title="Direct link to heading" href="https://gracefullight.dev/en/pe/architecture/thrashing/#%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4-%EC%8A%A4%EB%A0%88%EC%8B%B1%EC%9D%98-%EC%9B%90%EC%9D%B8">​</a></h3>
<table><thead><tr><th>구분</th><th>원인</th><th>내용</th></tr></thead><tbody><tr><td>리소스 부족</td><td>저사양 CPU</td><td>CPU 코어부족, 속도 부족</td></tr><tr><td>-</td><td>메모리 용량 부족</td><td>용량 부족으로 인한 가상메모리 사용 증가</td></tr><tr><td>부적절한 페이지 교체 정책</td><td>지역성 미고려</td><td>페이지 교체 정책 효율성 저하</td></tr><tr><td>-</td><td>페이지 빈도 미고려</td><td>부적절한 페이지 교체 알고리즘 사용</td></tr><tr><td>과도한 멀티프로그래밍</td><td>다중 프로세스 수용 초과</td><td>과도한 멀티프로그래밍으로 페이지 폴트</td></tr><tr><td>-</td><td>페이지 교체 수용 추가</td><td>페이지 수 초과로 인한 페이지 폴트</td></tr></tbody></table>
<ul>
<li>Working Set Model, Page Fault Frequency 기버을 통해 발생을 최소화하는 것이 최선의 방법</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_O5py" id="프로세스-스레싱-해결방안">프로세스 스레싱 해결방안<a class="hash-link" aria-label="Direct link to heading" title="Direct link to heading" href="https://gracefullight.dev/en/pe/architecture/thrashing/#%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4-%EC%8A%A4%EB%A0%88%EC%8B%B1-%ED%95%B4%EA%B2%B0%EB%B0%A9%EC%95%88">​</a></h3>
<!-- -->
<ul>
<li>WS: 프로세스가 자주 참조하는 페이지 집합을 메모리에 상주시켜 교체 감소</li>
</ul>
<!-- -->
<ul>
<li>PFF: 페이지 부재율의 상한, 하한을 정하여 직접 페이지 부재율을 예측하여 프레임 할당, 프레임 회수하여 페이지 교체 감소</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_O5py" id="스레싱-발생시-고려사항">스레싱 발생시 고려사항<a class="hash-link" aria-label="Direct link to heading" title="Direct link to heading" href="https://gracefullight.dev/en/pe/architecture/thrashing/#%EC%8A%A4%EB%A0%88%EC%8B%B1-%EB%B0%9C%EC%83%9D%EC%8B%9C-%EA%B3%A0%EB%A0%A4%EC%82%AC%ED%95%AD">​</a></h2>
<ul>
<li>자주 사용하는 프로세스에 높은 우선순위를 부여하여 중요 작업이 원활히 수행 가능하도록 처리</li>
</ul>]]></content:encoded>
            <category>pe</category>
            <category>pe/ca</category>
        </item>
        <item>
            <title><![CDATA[PNM, Processing Near Memory]]></title>
            <link>https://gracefullight.dev/en/pe/architecture/pnm/</link>
            <guid>https://gracefullight.dev/en/pe/architecture/pnm/</guid>
            <pubDate>Sun, 30 Jun 2024 10:02:58 GMT</pubDate>
            <description><![CDATA[Processing Near Memory]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_O5py" id="pnm의-개념">PNM의 개념<a class="hash-link" aria-label="Direct link to heading" title="Direct link to heading" href="https://gracefullight.dev/en/pe/architecture/pnm/#pnm%EC%9D%98-%EA%B0%9C%EB%85%90">​</a></h2>
<!-- -->
<ul>
<li>메모리와 프로세서를 다이 차원에서 가까ㅃ게 연결하여 별도의 논리연산을 수행하는 메모리</li>
<li>메모리 접근을 위한 병목 최소화, 대역폭 최대화 가능</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_O5py" id="pnm의-구성도-구성요소-적용방안">PNM의 구성도, 구성요소, 적용방안<a class="hash-link" aria-label="Direct link to heading" title="Direct link to heading" href="https://gracefullight.dev/en/pe/architecture/pnm/#pnm%EC%9D%98-%EA%B5%AC%EC%84%B1%EB%8F%84-%EA%B5%AC%EC%84%B1%EC%9A%94%EC%86%8C-%EC%A0%81%EC%9A%A9%EB%B0%A9%EC%95%88">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_O5py" id="pnm의-구성도">PNM의 구성도<a class="hash-link" aria-label="Direct link to heading" title="Direct link to heading" href="https://gracefullight.dev/en/pe/architecture/pnm/#pnm%EC%9D%98-%EA%B5%AC%EC%84%B1%EB%8F%84">​</a></h3>
<!-- -->
<h3 class="anchor anchorWithStickyNavbar_O5py" id="pnm의-구성요소">PNM의 구성요소<a class="hash-link" aria-label="Direct link to heading" title="Direct link to heading" href="https://gracefullight.dev/en/pe/architecture/pnm/#pnm%EC%9D%98-%EA%B5%AC%EC%84%B1%EC%9A%94%EC%86%8C">​</a></h3>
<table><thead><tr><th>구분</th><th>내용</th><th>비고</th></tr></thead><tbody><tr><td>프로세서</td><td>연산처리 담당 중앙처리장치</td><td>데이터 처리</td></tr><tr><td>고속 인터페이스</td><td>메모리와 프로세서 간 통신 속도 향상</td><td>CXL 등</td></tr><tr><td>DRAM Cell</td><td>대용향 휘발성 기억 장치</td><td>데이터 저장</td></tr><tr><td>다이</td><td>회로가 제작된 공간</td><td>직접회로 연결</td></tr></tbody></table>
<ul>
<li>다이 접합과 인터페이스 통합으로 제작이 가능하기에 기존 프로세서 사용 용이</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_O5py" id="pnm-활용방안">PNM 활용방안<a class="hash-link" aria-label="Direct link to heading" title="Direct link to heading" href="https://gracefullight.dev/en/pe/architecture/pnm/#pnm-%ED%99%9C%EC%9A%A9%EB%B0%A9%EC%95%88">​</a></h3>
<table><thead><tr><th>구분</th><th>내용</th><th>비고</th></tr></thead><tbody><tr><td>데이터 집중형 앱</td><td>데이터 접근 빈도가 높은 어플리케이션 적용</td><td>빅데이터 분석, LLM 등</td></tr><tr><td>실시간 처리 앱</td><td>실시간 데이터 처리가 필요한 슈퍼컴퓨팅에 활용</td><td>금융모델, 기상 예보 등</td></tr><tr><td>전력효율 필요 앱</td><td>높은 전성비를 유지해야하는 환경</td><td>모바일, 임베디드시스템 등</td></tr></tbody></table>
<h2 class="anchor anchorWithStickyNavbar_O5py" id="pnm-고려사항">PNM 고려사항<a class="hash-link" aria-label="Direct link to heading" title="Direct link to heading" href="https://gracefullight.dev/en/pe/architecture/pnm/#pnm-%EA%B3%A0%EB%A0%A4%EC%82%AC%ED%95%AD">​</a></h2>
<ul>
<li>CPU와 PNM간 메모리 데이터 젖아시 경합을 고려한 SW개발 필요</li>
</ul>]]></content:encoded>
            <category>pe</category>
            <category>pe/ca</category>
        </item>
        <item>
            <title><![CDATA[페이징, 세그먼테이션]]></title>
            <link>https://gracefullight.dev/en/pe/architecture/paging-and-segmentation/</link>
            <guid>https://gracefullight.dev/en/pe/architecture/paging-and-segmentation/</guid>
            <pubDate>Sun, 30 Jun 2024 02:35:14 GMT</pubDate>
            <description><![CDATA[Paging and Segmentation]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_O5py" id="메모리-관리-기법의-개념">메모리 관리 기법의 개념<a class="hash-link" aria-label="Direct link to heading" title="Direct link to heading" href="https://gracefullight.dev/en/pe/architecture/paging-and-segmentation/#%EB%A9%94%EB%AA%A8%EB%A6%AC-%EA%B4%80%EB%A6%AC-%EA%B8%B0%EB%B2%95%EC%9D%98-%EA%B0%9C%EB%85%90">​</a></h2>
<!-- -->
<ul>
<li>제한된 메모리 리소스를 효율적으로 사용하기 위해 메모리 관리 기법 필요</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_O5py" id="페이징-기법-세그먼테이션-기법-개념도-핵심요소">페이징 기법, 세그먼테이션 기법 개념도, 핵심요소<a class="hash-link" aria-label="Direct link to heading" title="Direct link to heading" href="https://gracefullight.dev/en/pe/architecture/paging-and-segmentation/#%ED%8E%98%EC%9D%B4%EC%A7%95-%EA%B8%B0%EB%B2%95-%EC%84%B8%EA%B7%B8%EB%A8%BC%ED%85%8C%EC%9D%B4%EC%85%98-%EA%B8%B0%EB%B2%95-%EA%B0%9C%EB%85%90%EB%8F%84-%ED%95%B5%EC%8B%AC%EC%9A%94%EC%86%8C">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_O5py" id="페이징-기법-세그먼테이션-기법-개념도">페이징 기법, 세그먼테이션 기법 개념도<a class="hash-link" aria-label="Direct link to heading" title="Direct link to heading" href="https://gracefullight.dev/en/pe/architecture/paging-and-segmentation/#%ED%8E%98%EC%9D%B4%EC%A7%95-%EA%B8%B0%EB%B2%95-%EC%84%B8%EA%B7%B8%EB%A8%BC%ED%85%8C%EC%9D%B4%EC%85%98-%EA%B8%B0%EB%B2%95-%EA%B0%9C%EB%85%90%EB%8F%84">​</a></h3>
<!-- -->
<!-- -->
<ul>
<li>페이징 기법은 동일한 크기로, 세그먼테이션 기법은 가변크기로 분할</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_O5py" id="페이징-기법-세그먼테이션-기법-핵심요소">페이징 기법, 세그먼테이션 기법 핵심요소<a class="hash-link" aria-label="Direct link to heading" title="Direct link to heading" href="https://gracefullight.dev/en/pe/architecture/paging-and-segmentation/#%ED%8E%98%EC%9D%B4%EC%A7%95-%EA%B8%B0%EB%B2%95-%EC%84%B8%EA%B7%B8%EB%A8%BC%ED%85%8C%EC%9D%B4%EC%85%98-%EA%B8%B0%EB%B2%95-%ED%95%B5%EC%8B%AC%EC%9A%94%EC%86%8C">​</a></h3>
<table><thead><tr><th>구분</th><th>페이징</th><th>세그먼테이션</th></tr></thead><tbody><tr><td>단위크기</td><td>고정, 페이지</td><td>가변, 세그먼트</td></tr><tr><td>외부단편화</td><td>없음</td><td>있음</td></tr><tr><td>내부단편화</td><td>있음</td><td>없음</td></tr><tr><td>주소사상</td><td>페이지테이블</td><td>세그먼트테이블</td></tr><tr><td>복잡성</td><td>단순</td><td>주소, 사이즈 관리 복잡</td></tr><tr><td>프로세스 간 공유</td><td>어려움</td><td>용이</td></tr><tr><td>교체시간</td><td>짧은</td><td>느림</td></tr></tbody></table>
<ul>
<li>페이징 기법의 메모리 관리 효율성, 세그먼테이션 기법의 논리적 메모리 관리 이점을 결합한 페이지드 세그먼테이션 기법 사용</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_O5py" id="페이지드-세그먼테이션-기법">페이지드 세그먼테이션 기법<a class="hash-link" aria-label="Direct link to heading" title="Direct link to heading" href="https://gracefullight.dev/en/pe/architecture/paging-and-segmentation/#%ED%8E%98%EC%9D%B4%EC%A7%80%EB%93%9C-%EC%84%B8%EA%B7%B8%EB%A8%BC%ED%85%8C%EC%9D%B4%EC%85%98-%EA%B8%B0%EB%B2%95">​</a></h3>
<!-- -->
<ul>
<li>파일 관리는 세그먼트 단위로, 프로그램 조각은 페이지 단위로 관리</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_O5py" id="메모리-관리-기법-선택시-고려사항">메모리 관리 기법 선택시 고려사항<a class="hash-link" aria-label="Direct link to heading" title="Direct link to heading" href="https://gracefullight.dev/en/pe/architecture/paging-and-segmentation/#%EB%A9%94%EB%AA%A8%EB%A6%AC-%EA%B4%80%EB%A6%AC-%EA%B8%B0%EB%B2%95-%EC%84%A0%ED%83%9D%EC%8B%9C-%EA%B3%A0%EB%A0%A4%EC%82%AC%ED%95%AD">​</a></h2>
<ul>
<li>외부단편화와 내부단편화를 줄이기 위해 버디메모리, 슬랩할당자 기법 사용 고려.</li>
<li>스레싱이 발생하지 않게 적절한 테이블 크기 설정</li>
</ul>]]></content:encoded>
            <category>pe</category>
            <category>pe/ca</category>
        </item>
        <item>
            <title><![CDATA[뉴로모픽 칩]]></title>
            <link>https://gracefullight.dev/en/pe/architecture/neuromorphic-chip/</link>
            <guid>https://gracefullight.dev/en/pe/architecture/neuromorphic-chip/</guid>
            <pubDate>Sat, 29 Jun 2024 23:52:00 GMT</pubDate>
            <description><![CDATA[Neuromorphic Chip]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_O5py" id="뉴로모픽-칩의-개요">뉴로모픽 칩의 개요<a class="hash-link" aria-label="Direct link to heading" title="Direct link to heading" href="https://gracefullight.dev/en/pe/architecture/neuromorphic-chip/#%EB%89%B4%EB%A1%9C%EB%AA%A8%ED%94%BD-%EC%B9%A9%EC%9D%98-%EA%B0%9C%EC%9A%94">​</a></h2>
<ul>
<li>인간의 뇌를 모방하여 정보를 연산, 저장하는 비 폰노이만 구조의 저전력, 고성능 칩</li>
<li>기존 폰노이만 구조의 프로세서로 연산하기 어려운 인공지능, 시뮬레이션 등 병렬 작업을 처리하기 위해 필요</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_O5py" id="뉴로모픽-칩의-구성도-구성요소-npu와-비교">뉴로모픽 칩의 구성도, 구성요소, NPU와 비교<a class="hash-link" aria-label="Direct link to heading" title="Direct link to heading" href="https://gracefullight.dev/en/pe/architecture/neuromorphic-chip/#%EB%89%B4%EB%A1%9C%EB%AA%A8%ED%94%BD-%EC%B9%A9%EC%9D%98-%EA%B5%AC%EC%84%B1%EB%8F%84-%EA%B5%AC%EC%84%B1%EC%9A%94%EC%86%8C-npu%EC%99%80-%EB%B9%84%EA%B5%90">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_O5py" id="뉴로모픽-칩의-구성도">뉴로모픽 칩의 구성도<a class="hash-link" aria-label="Direct link to heading" title="Direct link to heading" href="https://gracefullight.dev/en/pe/architecture/neuromorphic-chip/#%EB%89%B4%EB%A1%9C%EB%AA%A8%ED%94%BD-%EC%B9%A9%EC%9D%98-%EA%B5%AC%EC%84%B1%EB%8F%84">​</a></h3>
<!-- -->
<h3 class="anchor anchorWithStickyNavbar_O5py" id="뉴로모픽-칩의-구성요소">뉴로모픽 칩의 구성요소<a class="hash-link" aria-label="Direct link to heading" title="Direct link to heading" href="https://gracefullight.dev/en/pe/architecture/neuromorphic-chip/#%EB%89%B4%EB%A1%9C%EB%AA%A8%ED%94%BD-%EC%B9%A9%EC%9D%98-%EA%B5%AC%EC%84%B1%EC%9A%94%EC%86%8C">​</a></h3>
<table><thead><tr><th>구분</th><th>내용</th><th>비고</th></tr></thead><tbody><tr><td>뉴로모픽 칩</td><td>시냅스와 뉴런으로 구성, 스파이크 자극에 의해 유기적으로 자율 조절</td><td>인간 뇌와 같이 저전력으로 학습</td></tr><tr><td>스파이킹 신경망, SNN</td><td>생물학적 신경 네트워크 구조를 모방</td><td>대규모 병렬 연산, 가중치 전달</td></tr><tr><td>뉴로모픽 소자</td><td>뉴런과 시냅스를 구성하는 핵심 소자로 메모리와 레지스터의 결합</td><td>멤리스터</td></tr><tr><td>프로세싱 인메모리</td><td>뉴런을 배열하여 스파이크 입력 변환, 뉴런 배열에서의 스파이크 발화 동작 및 학습, 학습 결과 특성 분류 수행</td><td>SRAM 기반</td></tr></tbody></table>
<h3 class="anchor anchorWithStickyNavbar_O5py" id="npu와-뉴로모픽-침의-차이점">NPU와 뉴로모픽 침의 차이점<a class="hash-link" aria-label="Direct link to heading" title="Direct link to heading" href="https://gracefullight.dev/en/pe/architecture/neuromorphic-chip/#npu%EC%99%80-%EB%89%B4%EB%A1%9C%EB%AA%A8%ED%94%BD-%EC%B9%A8%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90">​</a></h3>
<table><thead><tr><th>구분</th><th>NPU</th><th>뉴로모픽 칩</th></tr></thead><tbody><tr><td>구조</td><td>폰노이만</td><td>생물의 뉴런 시스템</td></tr><tr><td>목적</td><td>GPU를 CPU로 만들어 연산 활용</td><td>메모리를 CPU로 만들어 연산 활용</td></tr><tr><td>중점</td><td>인공신경망 연산의 효율적 수행</td><td>인공신경망 외 다양한 프로그램 연산</td></tr><tr><td>관련 업체</td><td>엔비디아 등</td><td>IBM, 인텔 등</td></tr><tr><td>장점</td><td>LLM 등 인공지능 모델 확산 기여</td><td>전력, 면적, 성능 등에서 압도적 결과</td></tr><tr><td>단점</td><td>ㅐ규모 데이터센터 공간/전력 소모</td><td>뉴로모픽 칩 개발의 어려움</td></tr></tbody></table>
<h2 class="anchor anchorWithStickyNavbar_O5py" id="뉴로모픽-칩-고려사항">뉴로모픽 칩 고려사항<a class="hash-link" aria-label="Direct link to heading" title="Direct link to heading" href="https://gracefullight.dev/en/pe/architecture/neuromorphic-chip/#%EB%89%B4%EB%A1%9C%EB%AA%A8%ED%94%BD-%EC%B9%A9-%EA%B3%A0%EB%A0%A4%EC%82%AC%ED%95%AD">​</a></h2>
<ul>
<li>뉴로모픽 하드웨어를 최대한 활용할 수 있는 알고리즘 및 SW개발, 연구 병행 필요</li>
</ul>]]></content:encoded>
            <category>pe</category>
            <category>pe/ca</category>
        </item>
        <item>
            <title><![CDATA[UML, Unified Modeling Language]]></title>
            <link>https://gracefullight.dev/en/pe/engineering/uml/</link>
            <guid>https://gracefullight.dev/en/pe/engineering/uml/</guid>
            <pubDate>Sun, 23 Jun 2024 14:13:08 GMT</pubDate>
            <description><![CDATA[UML]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_O5py" id="uml-개념">UML 개념<a class="hash-link" aria-label="Direct link to heading" title="Direct link to heading" href="https://gracefullight.dev/en/pe/engineering/uml/#uml-%EA%B0%9C%EB%85%90">​</a></h2>
<!-- -->
<ul>
<li>SW산출물을 가시화, 명세화, 구축, 문서화하는 도구로 구조, 동작, 인터랙션 다이어그램으로 구분</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_O5py" id="시퀀스-다이어그램-커뮤니케이션-다이어그램-구성도-구성요소-절차">시퀀스 다이어그램, 커뮤니케이션 다이어그램 구성도, 구성요소, 절차<a class="hash-link" aria-label="Direct link to heading" title="Direct link to heading" href="https://gracefullight.dev/en/pe/engineering/uml/#%EC%8B%9C%ED%80%80%EC%8A%A4-%EB%8B%A4%EC%9D%B4%EC%96%B4%EA%B7%B8%EB%9E%A8-%EC%BB%A4%EB%AE%A4%EB%8B%88%EC%BC%80%EC%9D%B4%EC%85%98-%EB%8B%A4%EC%9D%B4%EC%96%B4%EA%B7%B8%EB%9E%A8-%EA%B5%AC%EC%84%B1%EB%8F%84-%EA%B5%AC%EC%84%B1%EC%9A%94%EC%86%8C-%EC%A0%88%EC%B0%A8">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_O5py" id="시퀀스-다이어그램-커뮤니케이션-다이어그램-구성도-비교">시퀀스 다이어그램, 커뮤니케이션 다이어그램 구성도 비교<a class="hash-link" aria-label="Direct link to heading" title="Direct link to heading" href="https://gracefullight.dev/en/pe/engineering/uml/#%EC%8B%9C%ED%80%80%EC%8A%A4-%EB%8B%A4%EC%9D%B4%EC%96%B4%EA%B7%B8%EB%9E%A8-%EC%BB%A4%EB%AE%A4%EB%8B%88%EC%BC%80%EC%9D%B4%EC%85%98-%EB%8B%A4%EC%9D%B4%EC%96%B4%EA%B7%B8%EB%9E%A8-%EA%B5%AC%EC%84%B1%EB%8F%84-%EB%B9%84%EA%B5%90">​</a></h3>
<!-- -->
<!-- -->
<ul>
<li>시퀀스 다이어그램은 시간 순서에 따라, 커뮤니케이션 다이어그램은 구조에 따라 인터렉션 표현</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_O5py" id="시퀀스-다이어그램-커뮤니케이션-다이어그램-구성요소-비교">시퀀스 다이어그램, 커뮤니케이션 다이어그램 구성요소 비교<a class="hash-link" aria-label="Direct link to heading" title="Direct link to heading" href="https://gracefullight.dev/en/pe/engineering/uml/#%EC%8B%9C%ED%80%80%EC%8A%A4-%EB%8B%A4%EC%9D%B4%EC%96%B4%EA%B7%B8%EB%9E%A8-%EC%BB%A4%EB%AE%A4%EB%8B%88%EC%BC%80%EC%9D%B4%EC%85%98-%EB%8B%A4%EC%9D%B4%EC%96%B4%EA%B7%B8%EB%9E%A8-%EA%B5%AC%EC%84%B1%EC%9A%94%EC%86%8C-%EB%B9%84%EA%B5%90">​</a></h3>
<table><thead><tr><th>구분</th><th>시퀀스</th><th>커뮤니케이션</th></tr></thead><tbody><tr><td>개념</td><td>객체 간 상호작용을 시간 흐름에 따라 메세지 표현</td><td>객체 간 메세지의 구조적 구성 표현</td></tr><tr><td>핵심요소</td><td>라이프라인, 액티베이션박스, 메세지</td><td>객체, 링크, 메세지</td></tr><tr><td>사례</td><td>시스템 내부 프로세스, 실행 순서</td><td>시스템 아키텍처 개념적 이해</td></tr></tbody></table>
<h3 class="anchor anchorWithStickyNavbar_O5py" id="시퀀스-다이어그램-커뮤니케이션-다이어그램-절차-비교">시퀀스 다이어그램, 커뮤니케이션 다이어그램 절차 비교<a class="hash-link" aria-label="Direct link to heading" title="Direct link to heading" href="https://gracefullight.dev/en/pe/engineering/uml/#%EC%8B%9C%ED%80%80%EC%8A%A4-%EB%8B%A4%EC%9D%B4%EC%96%B4%EA%B7%B8%EB%9E%A8-%EC%BB%A4%EB%AE%A4%EB%8B%88%EC%BC%80%EC%9D%B4%EC%85%98-%EB%8B%A4%EC%9D%B4%EC%96%B4%EA%B7%B8%EB%9E%A8-%EC%A0%88%EC%B0%A8-%EB%B9%84%EA%B5%90">​</a></h3>
<table><thead><tr><th>구분</th><th>절차</th><th>비고</th></tr></thead><tbody><tr><td>시퀀스 다이어그램</td><td>액터와 활성 객체 나열</td><td>시간순서 배치</td></tr><tr><td>-</td><td>객체 간 메세지 작성</td><td>상호 작용 추가</td></tr><tr><td>-</td><td>활성객체별 액티베이션박스 작성</td><td>활성화 시간 표현</td></tr><tr><td>커뮤니케이션 다이어그램</td><td>중요 객체, 클래스, 액터 식별</td><td>구조적 중요성 강조</td></tr><tr><td>-</td><td>객체 및 액터 배치, 연결</td><td>커뮤니케이션 구조 중심</td></tr><tr><td>-</td><td>메세지 링크 강조</td><td>연결성 명확화</td></tr></tbody></table>
<h2 class="anchor anchorWithStickyNavbar_O5py" id="uml-작성시-고려사항">UML 작성시 고려사항<a class="hash-link" aria-label="Direct link to heading" title="Direct link to heading" href="https://gracefullight.dev/en/pe/engineering/uml/#uml-%EC%9E%91%EC%84%B1%EC%8B%9C-%EA%B3%A0%EB%A0%A4%EC%82%AC%ED%95%AD">​</a></h2>
<ul>
<li>OMG 글부 표준을 준수하여 정확성, 효용성, 유지보수성을 가진 산출물 작성</li>
</ul>]]></content:encoded>
            <category>pe</category>
            <category>pe/engineering</category>
        </item>
        <item>
            <title><![CDATA[MSA, 모놀리틱 아키텍처]]></title>
            <link>https://gracefullight.dev/en/pe/engineering/msa-monolithic/</link>
            <guid>https://gracefullight.dev/en/pe/engineering/msa-monolithic/</guid>
            <pubDate>Sun, 23 Jun 2024 12:57:06 GMT</pubDate>
            <description><![CDATA[Micro Service Architecture, Monolithic Architecture]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_O5py" id="msa-모놀리틱-아키텍처-개념">MSA, 모놀리틱 아키텍처 개념<a class="hash-link" aria-label="Direct link to heading" title="Direct link to heading" href="https://gracefullight.dev/en/pe/engineering/msa-monolithic/#msa-%EB%AA%A8%EB%86%80%EB%A6%AC%ED%8B%B1-%EC%95%84%ED%82%A4%ED%85%8D%EC%B2%98-%EA%B0%9C%EB%85%90">​</a></h2>
<!-- -->
<ul>
<li>모놀리틱 아키텍처에서 비지니스 프로세스를 독립된 서비스로 분리한 SOA로 전환, SOA의 ESB 부하집중, 기술스택 일원화 문제를 해결하기 위해 MSA 등장</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_O5py" id="msa-모놀리틱-아키텍처-구성도-구성요소-적용방안">MSA, 모놀리틱 아키텍처 구성도, 구성요소, 적용방안<a class="hash-link" aria-label="Direct link to heading" title="Direct link to heading" href="https://gracefullight.dev/en/pe/engineering/msa-monolithic/#msa-%EB%AA%A8%EB%86%80%EB%A6%AC%ED%8B%B1-%EC%95%84%ED%82%A4%ED%85%8D%EC%B2%98-%EA%B5%AC%EC%84%B1%EB%8F%84-%EA%B5%AC%EC%84%B1%EC%9A%94%EC%86%8C-%EC%A0%81%EC%9A%A9%EB%B0%A9%EC%95%88">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_O5py" id="msa-모놀리틱-아키텍처-구성도">MSA, 모놀리틱 아키텍처 구성도<a class="hash-link" aria-label="Direct link to heading" title="Direct link to heading" href="https://gracefullight.dev/en/pe/engineering/msa-monolithic/#msa-%EB%AA%A8%EB%86%80%EB%A6%AC%ED%8B%B1-%EC%95%84%ED%82%A4%ED%85%8D%EC%B2%98-%EA%B5%AC%EC%84%B1%EB%8F%84">​</a></h3>
<!-- -->
<ul>
<li>하나의 어플리케이션을 여러 개의 서비스로 나눠 조합하여 서비스를 제공</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_O5py" id="msa-모놀리틱-아키텍처-구성요소">MSA, 모놀리틱 아키텍처 구성요소<a class="hash-link" aria-label="Direct link to heading" title="Direct link to heading" href="https://gracefullight.dev/en/pe/engineering/msa-monolithic/#msa-%EB%AA%A8%EB%86%80%EB%A6%AC%ED%8B%B1-%EC%95%84%ED%82%A4%ED%85%8D%EC%B2%98-%EA%B5%AC%EC%84%B1%EC%9A%94%EC%86%8C">​</a></h3>
<table><thead><tr><th>구분</th><th>모놀리틱</th><th>MSA</th></tr></thead><tbody><tr><td>모듈성</td><td>영향도, 의존성 높음</td><td>서비스 간 의존성 낮음</td></tr><tr><td>유지보수성</td><td>규모가 커질수록 어려움</td><td>개별 서비스</td></tr><tr><td>확장성</td><td>부분 Scale-out 어려움</td><td>서비스 단위 유연한 Scale-out</td></tr><tr><td>조직</td><td>기능 중심 조직 구조</td><td>비지니스 중심 DevOps 구조</td></tr><tr><td>장점</td><td>배포, 테스트 표준화된 방식으로 관리 용이</td><td>서비스 단위 빠른 개발, 배포 용이</td></tr><tr><td>단점</td><td>One Codebase로 의존성이 높아 신규 개발 어려움</td><td>분산시스템에서 트랜잭션 관리 어려움</td></tr></tbody></table>
<h3 class="anchor anchorWithStickyNavbar_O5py" id="msa-적용-방안">MSA 적용 방안<a class="hash-link" aria-label="Direct link to heading" title="Direct link to heading" href="https://gracefullight.dev/en/pe/engineering/msa-monolithic/#msa-%EC%A0%81%EC%9A%A9-%EB%B0%A9%EC%95%88">​</a></h3>
<ul>
<li>Istio 등 서비스 메쉬를 도입하여 MSA 간 서비스 디스커버리, 라우팅, 보안, 로드밸런싱 등 처리</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_O5py" id="msa-도입시-고려사항">MSA 도입시 고려사항<a class="hash-link" aria-label="Direct link to heading" title="Direct link to heading" href="https://gracefullight.dev/en/pe/engineering/msa-monolithic/#msa-%EB%8F%84%EC%9E%85%EC%8B%9C-%EA%B3%A0%EB%A0%A4%EC%82%AC%ED%95%AD">​</a></h2>
<ul>
<li>MSA 전환시 네트워크 지연시간이 추가되므로 성능에 민감한 시스템일 경우 도입을 신중히 검토해야함</li>
</ul>]]></content:encoded>
            <category>pe</category>
            <category>pe/engineering</category>
        </item>
        <item>
            <title><![CDATA[테스트 커버리지, 코드 커버리지]]></title>
            <link>https://gracefullight.dev/en/pe/engineering/test-coverage-code-coverage/</link>
            <guid>https://gracefullight.dev/en/pe/engineering/test-coverage-code-coverage/</guid>
            <pubDate>Sun, 23 Jun 2024 12:45:46 GMT</pubDate>
            <description><![CDATA[Test coverage, Code coverage]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_O5py" id="테스트-커버리지와-코드-커버리지의-개념">테스트 커버리지와 코드 커버리지의 개념<a class="hash-link" aria-label="Direct link to heading" title="Direct link to heading" href="https://gracefullight.dev/en/pe/engineering/test-coverage-code-coverage/#%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%BB%A4%EB%B2%84%EB%A6%AC%EC%A7%80%EC%99%80-%EC%BD%94%EB%93%9C-%EC%BB%A4%EB%B2%84%EB%A6%AC%EC%A7%80%EC%9D%98-%EA%B0%9C%EB%85%90">​</a></h2>
<!-- -->
<ul>
<li>테스트 커버리지: SW 테스트시 얼마나 많은 기능이 테스트되었는지를 측정하는 지표</li>
<li>코드 커버리지: 코드의 각 구문이 테스트 중 얼마나 실행되었는지 측정하는 지표</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_O5py" id="테스트-커버리지-코드-커버리지-구성요소-적용방안">테스트 커버리지, 코드 커버리지 구성요소, 적용방안<a class="hash-link" aria-label="Direct link to heading" title="Direct link to heading" href="https://gracefullight.dev/en/pe/engineering/test-coverage-code-coverage/#%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%BB%A4%EB%B2%84%EB%A6%AC%EC%A7%80-%EC%BD%94%EB%93%9C-%EC%BB%A4%EB%B2%84%EB%A6%AC%EC%A7%80-%EA%B5%AC%EC%84%B1%EC%9A%94%EC%86%8C-%EC%A0%81%EC%9A%A9%EB%B0%A9%EC%95%88">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_O5py" id="테스트-커버리지-코드-커버리지-구성요소">테스트 커버리지, 코드 커버리지 구성요소<a class="hash-link" aria-label="Direct link to heading" title="Direct link to heading" href="https://gracefullight.dev/en/pe/engineering/test-coverage-code-coverage/#%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%BB%A4%EB%B2%84%EB%A6%AC%EC%A7%80-%EC%BD%94%EB%93%9C-%EC%BB%A4%EB%B2%84%EB%A6%AC%EC%A7%80-%EA%B5%AC%EC%84%B1%EC%9A%94%EC%86%8C">​</a></h3>
<table><thead><tr><th>구분</th><th>커버리지</th><th>비고</th></tr></thead><tbody><tr><td>테스트 커버리지</td><td>기능 커버리지</td><td>요구사항별, 유스케이스, 시나리오</td></tr><tr><td>-</td><td>사용자시나리오 커버리지</td><td>UI, 통합, 시스템</td></tr><tr><td>코드 커버리지</td><td>라인 커버리지</td><td>코드라인, 구문, 조건</td></tr><tr><td>-</td><td>함수 커버리지</td><td>함수 호출, 함수 내부</td></tr><tr><td>-</td><td>분기 커버리지</td><td>조건, 결정, 다중 조건</td></tr></tbody></table>
<h3 class="anchor anchorWithStickyNavbar_O5py" id="테스트-커버리지-코드-커버리지-적용방안">테스트 커버리지, 코드 커버리지 적용방안<a class="hash-link" aria-label="Direct link to heading" title="Direct link to heading" href="https://gracefullight.dev/en/pe/engineering/test-coverage-code-coverage/#%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%BB%A4%EB%B2%84%EB%A6%AC%EC%A7%80-%EC%BD%94%EB%93%9C-%EC%BB%A4%EB%B2%84%EB%A6%AC%EC%A7%80-%EC%A0%81%EC%9A%A9%EB%B0%A9%EC%95%88">​</a></h3>
<table><thead><tr><th>구분</th><th>적용방안</th><th>비고</th></tr></thead><tbody><tr><td>테스트 커버리지</td><td>테스트 계획 단계부터 목표 수립</td><td>테스트 관리도구 활용</td></tr><tr><td>-</td><td>테스트 실행시 커버리지 측정 보고서 작성</td><td>-</td></tr><tr><td>코드 커버리지</td><td>코드 커버리지 측정도구 활용</td><td>적정분석도구 통합</td></tr><tr><td>-</td><td>테스트 실행 후 커버리지 분석</td><td>CI/CD 통합</td></tr></tbody></table>
<h2 class="anchor anchorWithStickyNavbar_O5py" id="커버리지-측정시-고려사항">커버리지 측정시 고려사항<a class="hash-link" aria-label="Direct link to heading" title="Direct link to heading" href="https://gracefullight.dev/en/pe/engineering/test-coverage-code-coverage/#%EC%BB%A4%EB%B2%84%EB%A6%AC%EC%A7%80-%EC%B8%A1%EC%A0%95%EC%8B%9C-%EA%B3%A0%EB%A0%A4%EC%82%AC%ED%95%AD">​</a></h2>
<ul>
<li>비용과 시간, 테스트 품ㅈ딜을 고려한 현실적인 커버리지 목표 설정 필요</li>
</ul>]]></content:encoded>
            <category>pe</category>
            <category>pe/engineering</category>
        </item>
    </channel>
</rss>