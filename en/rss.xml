<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>gracefullight.dev Blog</title>
        <link>https://gracefullight.dev/en/</link>
        <description>gracefullight.dev Blog</description>
        <lastBuildDate>Mon, 07 Aug 2023 10:30:26 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <copyright>Copyright © 2023 Eunkwang Shin.</copyright>
        <item>
            <title><![CDATA[Refactoring grammer]]></title>
            <link>https://gracefullight.dev/en/2023/08/07/refactoring-grammer</link>
            <guid>https://gracefullight.dev/en/2023/08/07/refactoring-grammer</guid>
            <pubDate>Mon, 07 Aug 2023 10:30:26 GMT</pubDate>
            <description><![CDATA[Overview of essential English grammar topics]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_NsKL" id="시제">시제<a href="#시제" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h2><ul><li>현재: 사실, 반복</li><li>현재진행: 동작 강조</li><li>과거: 과거에 끝난 것</li><li>과거진행: 과거에 뭘 하고 있었는지 강조</li><li>Used to: 그랬었지~ 해오곤 했었지~ 지금은 안함</li><li>현재완료<ul><li>계속 쭉 해오고 있는 것, for/since</li><li>결과 과거의 행동이 현재와 관련이 있는 것, just/already/yet</li><li>경험 해본적이 있는 것</li></ul></li><li>미래<ul><li>will</li><li>be going to: 이미 하기로 결정한 미래의 일</li><li>현재진행: 구체적인 계획/약속/예약</li><li>현재: 미래 사실로 시간표/일정 상의 일, 주로 사물 주어</li></ul></li></ul><h2 class="anchor anchorWithStickyNavbar_NsKL" id="조동사">조동사<a href="#조동사" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h2><ul><li>Can: 동사에 강세</li><li>Can't: Can't 에 강세</li><li>Can I: 해도 될까요?</li><li>Can you: 해줄래요?</li><li>Must: 확실한 추측</li><li>Don't have to: 할 필요가 없다</li><li>S should <strong>V</strong>: <strong>V</strong> 하는 것이 좋겠다.</li><li>Should I: 하는 것이 좋을까요?<ul><li>I think ... should</li><li>I don't think ... should</li></ul></li><li>Would you: 해주시겠어요?</li><li>Would you like <strong>N</strong>: <strong>N</strong>를 드릴까요?</li><li>Would you like to <strong>V</strong>: <strong>V</strong> 하실래요?</li><li>I would like <strong>N</strong>: <strong>N</strong>을 주세요.</li><li>I would like to <strong>V</strong>: <strong>V</strong>를 하고 싶어요.</li></ul><h3 class="anchor anchorWithStickyNavbar_NsKL" id="수동태와-조동사">수동태와 조동사<a href="#수동태와-조동사" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h3><ul><li>will/can/must + be + p.p.</li></ul><h2 class="anchor anchorWithStickyNavbar_NsKL" id="의문문">의문문<a href="#의문문" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h2><ul><li>Which: 제한적으로 주어진 몇 가지 중 선택, 어떤~</li><li>What: 선택 제한이 없는 경우, 무엇~ 몇~</li><li>Where ~ from?: ~ 는 어디에서 왔나요?</li><li>How be동사: ~ 은 어떤가요?</li><li>How 형용사/부사: 얼마나 ~</li><li>Be 동사 뒤에 오는 건 보어, 목적어 아님.</li></ul><h2 class="anchor anchorWithStickyNavbar_NsKL" id="동명사와-to부정사">동명사와 to부정사<a href="#동명사와-to부정사" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h2><ul><li>~ 는 것, ~ 기</li><li>주어는 동명사만</li><li>Enjoy 는 동명사가 따라옴</li></ul><h3 class="anchor anchorWithStickyNavbar_NsKL" id="동명사만-따라올-수-있는-경우">동명사만 따라올 수 있는 경우<a href="#동명사만-따라올-수-있는-경우" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h3><ul><li>enjoy</li><li>finish</li><li>keep</li><li>mind</li><li>avoid</li><li>give up</li><li>practice</li><li>suggest</li></ul><h3 class="anchor anchorWithStickyNavbar_NsKL" id="to부정사만-따라올-수-있는-경우">to부정사만 따라올 수 있는 경우<a href="#to부정사만-따라올-수-있는-경우" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h3><p>주로 미래: 기대, 소망, 계획, 제안</p><ul><li>want</li><li>need</li><li>hope</li><li>expect</li><li>decide</li><li>plan</li><li>promise</li><li>offer</li><li>choose</li><li>ask</li><li>learn</li><li>refuse</li></ul><h3 class="anchor anchorWithStickyNavbar_NsKL" id="둘-다-오는-경우">둘 다 오는 경우<a href="#둘-다-오는-경우" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h3><ul><li>like</li><li>love</li><li>prefer</li><li>hate</li><li>start</li><li>begin</li><li>continue</li></ul><h3 class="anchor anchorWithStickyNavbar_NsKL" id="의미가-달라지는-경우">의미가 달라지는 경우<a href="#의미가-달라지는-경우" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h3><ul><li>stop<ul><li>-ing: ~ 하는 것을 멈추다</li><li>to <strong>R</strong>: ~ 하려고 하던 걸 멈추다</li></ul></li><li>try<ul><li>-ing: 시험삼아 ~ 해보다</li><li>to <strong>R</strong>: ~ 하려고 노력하다</li></ul></li></ul><h2 class="anchor anchorWithStickyNavbar_NsKL" id="사역동사">사역동사<a href="#사역동사" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h2><ul><li>have/make/let + 사람 + <strong>R</strong>: ~ 가 ~ 하게 하다.</li><li>help + 사람 + <strong>R</strong>: ~ 가 ~ 하는 것을 돕다.</li></ul><h3 class="anchor anchorWithStickyNavbar_NsKL" id="to부정사">to부정사<a href="#to부정사" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h3><ul><li>~ 하기 위해 (in order to <strong>R</strong>), 추가적으로 덧붙힐 때</li><li><strong>N</strong> + to <strong>R</strong>: ~ 할 N</li></ul><h2 class="anchor anchorWithStickyNavbar_NsKL" id="수">수<a href="#수" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h2><h3 class="anchor anchorWithStickyNavbar_NsKL" id="u">U<a href="#u" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h3><ul><li>a glass of water</li><li>music</li><li>snow</li><li>sugar</li><li>air</li><li>time</li><li>money</li><li>news</li><li>a cup of coffee</li><li>a loaf of bread</li></ul><h3 class="anchor anchorWithStickyNavbar_NsKL" id="예외">예외<a href="#예외" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h3><h4 class="anchor anchorWithStickyNavbar_NsKL" id="단복수-같은-단어">단복수 같은 단어<a href="#단복수-같은-단어" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h4><ul><li>a/some fish</li><li>a/two sheep</li><li>a/many deer</li></ul><h4 class="anchor anchorWithStickyNavbar_NsKL" id="항상-복수">항상 복수<a href="#항상-복수" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h4><p>두 개의 부분이 모여서 하나의 시물을 이루는 경우</p><ul><li>pajamas</li><li>scissors</li><li>jeans</li><li>shorts</li><li>glasses</li><li>pants</li><li>headphones</li></ul><p>위의 명사의 복수형은 <code>a pair of/two pairs of</code>.</p><h2 class="anchor anchorWithStickyNavbar_NsKL" id="관사">관사<a href="#관사" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h2><ul><li>a/an: 특별히 정해지지 않은 막연한 사람 또는 사물 하나</li><li>the: 어떤 사람, 사물을 가리키는지 명확할 때, 특정 사람 또는 사물을 말할 때<ul><li>어떤 대상에 대해 처음 말할 때는 a/an, 반복할 때는 the</li><li>I got <strong>an</strong> e-mail from S.O. <strong>The</strong> e-mail was about today's meeting.</li></ul></li></ul><h3 class="anchor anchorWithStickyNavbar_NsKL" id="the">The<a href="#the" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h3><h4 class="anchor anchorWithStickyNavbar_NsKL" id="필수">필수<a href="#필수" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h4><ul><li>세상에 하나 밖에 없는것: the world, the sun, the moon, the earth</li><li>자연환경: the sky, the sea, the ocean</li><li>국가/도시 등에 하나 밖에 없는 것: the army, the police, the government</li><li>방송, 매체: the radio, the internet</li><li>악기를 연주한다고 할 때 악기 이름 앞에: the guitar, the piano</li><li>특정 장소 갈 때<ul><li>go to the movies</li><li>go to the station</li><li>go to the bank</li><li>go to the theater</li><li>go to the airport</li><li>go to the post office</li></ul></li></ul><h4 class="anchor anchorWithStickyNavbar_NsKL" id="사용-안하는-경우">사용 안하는 경우<a href="#사용-안하는-경우" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h4><ul><li>운동: basketball, football, tennis</li><li>과목: biology, history, marketing</li><li>식사: breakfast, lunch, dinner</li><li>집에 있는 경우: go home, at home</li><li>출퇴근: go to work, at work</li></ul><h2 class="anchor anchorWithStickyNavbar_NsKL" id="비인칭-주어">비인칭 주어<a href="#비인칭-주어" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h2><ul><li>시간을 말할 때: It's 5 o`clock.</li><li>날짜를 말할 때: It's August 8.</li><li>요일을 말할 때: It's Friday.</li><li>날씨를 말할 때: It's rainy today.</li><li>거리를 말할 때: It's about 10 kilometers.</li><li>계절을 말할 때: It's almost spring.</li></ul><h2 class="anchor anchorWithStickyNavbar_NsKL" id="소유격">소유격<a href="#소유격" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h2><ul><li>I my mine</li><li>We our ours</li><li>You your yours</li><li>He his his</li><li>She her her</li><li>They their theirs</li><li>소유격 뒤에 명사를 쓰지 않음.</li><li>관사 없음.</li></ul><h2 class="anchor anchorWithStickyNavbar_NsKL" id="재귀대명사">재귀대명사<a href="#재귀대명사" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h2><ul><li>by -self: 혼자, 스스로: I've lived by myself since 2015.</li><li>Make yourself at home: 편히 쉬세요.</li></ul><h2 class="anchor anchorWithStickyNavbar_NsKL" id="one">one<a href="#one" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h2><ul><li>앞서 말한 명사를 다시 말할 때 명사 대신 사용: one, ones</li><li>a(n)/the + <strong>ADJ</strong> + one</li><li>some/the + <strong>ADJ</strong> + ones</li><li>Which one(s) ~?: 어느 것(들) ~?</li></ul><h2 class="anchor anchorWithStickyNavbar_NsKL" id="한정사">한정사<a href="#한정사" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h2><h3 class="anchor anchorWithStickyNavbar_NsKL" id="some-any">some, any<a href="#some-any" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h3><ul><li>some, any: 사람 또는 사물의 불특정한 수나 양에 대해 말할 때 명사 앞</li><li>some: 주로 긍정문, yes를 기대하는 권유/요청하는 의문문</li><li>any: 주로 부정문, 의문문</li><li>someone/somebody, anyone, something, anything, somewhere, anywhere: 누군가, 무언가, 어딘가란 의미로 정확히 알 수 없는 사람, 사물, 장소에 대해 말할 때</li><li>someone, something: 주로 긍정문, 권유/요청하는 의문문</li><li>anyone, anything: 주로 부정문, 의문문</li></ul><h3 class="anchor anchorWithStickyNavbar_NsKL" id="no">no<a href="#no" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h3><ul><li>~ 이 없다</li><li>no + <strong>N</strong> = not ~ any + <strong>N</strong> = none<ul><li>I have no questions. = I don't have any questions.</li></ul></li><li>none: 대명사라 명사와 함께 사용하지 않음.</li><li>no one/nobody, nothing, nowhere: 아무 ~ 도 ~ 않다.</li></ul><h3 class="anchor anchorWithStickyNavbar_NsKL" id="many-much">many, much<a href="#many-much" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h3><ul><li>many + <strong>[C]<!-- --> PL</strong>: 많은 ~, 긍정문, 부정문, 의문문</li><li>much + <strong>[U]</strong>: 많은 ~, 주로 부정문, 의문문</li><li>둘 쓰는거 헷갈리므로 회화에서는 a lot of, lots of 활용하는 게 좋음.</li><li>대명사로도 사용 가능<ul><li>She grows many.</li><li>There isn't much.</li><li>You already have a lot.</li></ul></li></ul><h3 class="anchor anchorWithStickyNavbar_NsKL" id="few-little">few, little<a href="#few-little" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h3><ul><li>a few + <strong>[C]<!-- --> PL</strong></li><li>a little + <strong>[U]</strong></li><li>few + <strong>[C]<!-- --> PL</strong>: 거의 없는, 부정문</li><li>little + <strong>[U]</strong>: 거의 없는, 부정문</li><li>A few people came: 몇 명의 사람들이 왔어.</li><li>Few people came: 거의 안 왔어.</li><li>I have a little time: 약간의 시간이 있어.</li><li>I have little time: 시간이 거의 없어.</li><li>대명사로도 사용 가능</li></ul><h3 class="anchor anchorWithStickyNavbar_NsKL" id="all-every">all, every<a href="#all-every" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h3><ul><li>모든 ~</li><li>all + <strong>[C]<!-- --> PL / <!-- -->[U]</strong></li><li>every + <strong>[S]</strong></li><li>all + day, week, month: ~ 종일, ~ 내내</li><li>every + day, week, month: ~ 마다, 매 ~</li><li>everyone/everybody, everything, everhwer: 모든 ~ (사람, 사물, 장소)</li></ul><h2 class="anchor anchorWithStickyNavbar_NsKL" id="both-either-neither">Both, either, neither<a href="#both-either-neither" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h2><ul><li>both + <strong>[C]<!-- --> PL</strong>: 둘 다, 두 ~ 모두</li><li>either + <strong>[S]</strong>: 둘 중 아무 것이나 하나, 두 ~ 중 아무 것이나 하나</li><li>neither + <strong>[S]</strong>: 둘 다 아닌, 두 ~ 모두 아닌</li></ul><h3 class="anchor anchorWithStickyNavbar_NsKL" id="all-of-most-of-some-of-none-of">all of, most of, some of, none of<a href="#all-of-most-of-some-of-none-of" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h3><ul><li>all of: 전부</li><li>most of: 대부분</li><li>some of: 약간</li><li>none of: 없음</li><li>all/most/some/none of: 특정한 대상에 대해 한정적으로 말할 때<ul><li>the/my/these + <strong>N</strong></li><li>it/us/you/them</li><li>all of the people --- All people</li><li>most ot these cars --- Most ccars</li><li>some of the songs --- some songs</li><li>none of the books --- No books</li></ul></li><li>all/most/some/no + <strong>N</strong>: 일반적인 대상에 대해 말할 때</li><li>both/either/neither of<ul><li>the/my/these + <strong>[C]<!-- --> PL</strong></li><li>us/you/them</li></ul></li></ul><h2 class="anchor anchorWithStickyNavbar_NsKL" id="지각동사">지각동사<a href="#지각동사" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h2><ul><li>2형식, 보어(형용사) 필요</li><li>look + <strong>ADJ</strong>: ~해 보이다</li><li>smell + <strong>ADJ</strong>: ~한 냄새가 나다</li><li>sound + <strong>ADJ</strong>: ~하게 들리다</li><li>taste + <strong>ADJ</strong>: ~한 맛이 나다</li><li>feel + <strong>ADJ</strong>: ~하게 느끼다</li></ul><h2 class="anchor anchorWithStickyNavbar_NsKL" id="부사">부사<a href="#부사" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h2><ul><li>형용사 앞에서 꾸민다.</li><li>동사 앞 뒤에서 꾸민다.</li><li>ly 패턴이지만 형용사인 것<ul><li>friendly</li><li>lovely</li><li>silly</li><li>ugly</li><li>lonely</li></ul></li><li>형용사는 사람이나 사물이 어떠한지</li><li>부사는 행동이나 일이 어떻게 일어나는지</li></ul><h3 class="anchor anchorWithStickyNavbar_NsKL" id="형용사면서-부사인-것">형용사면서 부사인 것<a href="#형용사면서-부사인-것" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h3><ul><li>late: It's late / I got home late.</li><li>long: You have long hair / It doesn't take long.</li><li>hard: He is a hard worker / The baseball team is practicing hard.</li><li>fast: Her car is fast / She talks fast.</li><li>early: I had an early breakfast / Nicole arrived early for her interview.</li></ul><h3 class="anchor anchorWithStickyNavbar_NsKL" id="빈도부사">빈도부사<a href="#빈도부사" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h3><ul><li>always, usually, often, sometimes, rarely, never<ul><li>rarely, never 는 부정문</li></ul></li><li>일반 동사 앞, be동사 뒤, 조동사 뒤, have/has 와 p.p. 사이</li></ul><h3 class="anchor anchorWithStickyNavbar_NsKL" id="too">too<a href="#too" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h3><ul><li>too + <strong>ADJ/ADV</strong></li><li>too + <strong>ADJ</strong> + for + S.O.: ~ 에게 너무 ~ 한</li><li>too + <strong>ADJ</strong> + to <strong>R</strong>: ~ 하기에는 너무 ~ 한</li><li>too many + <strong>[C]<!-- --> PL</strong>: 너무 많은 ~</li><li>too much + <!-- -->*<!-- -->*<!-- -->[U]<!-- -->: 너무 많은 ~</li><li>대명사로도 사용 가능: I spent too much last month.</li></ul><h2 class="anchor anchorWithStickyNavbar_NsKL" id="enough">enough<a href="#enough" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h2><ul><li><strong>ADJ/ADV</strong> + enough: 충분히 ~ 한/ ~하게<ul><li><strong>ADJ</strong> + enough + for + S.O: ~ 에게 충분히 ~ 한</li><li><strong>ADJ</strong> + enought + to <strong>R</strong>: ~ 하기에 충분히 ~ 한</li></ul></li><li>enough + <strong>[C]<!-- --> PL / <!-- -->[U]</strong>: 충분한 ~<ul><li>enough + <strong>N</strong> + for + S.O: ~ 에게 충분한 ~</li><li>enough + <strong>N</strong> + to <strong>R</strong>: ~ 하기에 충분한 ~</li></ul></li><li>대명사로도 사용 가능: I have enough.</li></ul><h2 class="anchor anchorWithStickyNavbar_NsKL" id="so">so<a href="#so" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h2><ul><li>so many + <strong>[C]<!-- --> PL</strong></li><li>so much + <strong>[U]</strong></li><li>There were so many. / I've learned so much from him.</li></ul><h2 class="anchor anchorWithStickyNavbar_NsKL" id="비교">비교<a href="#비교" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h2><ul><li>일반적으로 형용사/부사 뒤에 -er</li><li>비교급 + than ~: ~ 보다 더 ~한 / ~ 하게</li><li>긴 단어 (3음절 이상): more <strong>ADJ/ADV</strong></li><li>불규칙<ul><li>good / better</li><li>bad / worse</li><li>far / farther/</li></ul></li></ul><h3 class="anchor anchorWithStickyNavbar_NsKL" id="최상급">최상급<a href="#최상급" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h3><ul><li>일반적으로 형용사/부사 뒤에 -est</li><li>2음절 이상 앞에는 most</li><li>명사 없이 최상급만 사용하는 것도 가능: I'm the youngest in my family, That's the cheapest in the store.</li></ul><h3 class="anchor anchorWithStickyNavbar_NsKL" id="as---as">as - as<a href="#as---as" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h3><ul><li>as + <strong>ADJ/ADV</strong> + as: ~ 만큼 ~ 한 / ~ 하게</li><li>not as + <strong>ADJ/ADV</strong> + as: ~만큼 ~하지 않은 / ~ 하지 않게<ul><li>비교 위치 바꿔서 비교급 + Than 도 가능</li></ul></li><li>as ~ as possible: 가능한 한 ~ 하게</li></ul>]]></content:encoded>
            <category>me</category>
        </item>
        <item>
            <title><![CDATA[Prisma troubleshooting]]></title>
            <link>https://gracefullight.dev/en/2023/07/09/prisma-troubleshooting</link>
            <guid>https://gracefullight.dev/en/2023/07/09/prisma-troubleshooting</guid>
            <pubDate>Sat, 08 Jul 2023 15:01:34 GMT</pubDate>
            <description><![CDATA[Exploring Prisma's read replicas support, single data source handling, and lack of polymorphism association support.]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_NsKL" id="read-replica">Read replica<a href="#read-replica" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h2><ul><li>I thought it didn't exist due to the <a href="https://github.com/prisma/prisma/issues/172" target="_blank" rel="noopener noreferrer">Support for Read Replicas #172</a> issue.</li><li>But it is provided in the form of middleware at <a href="https://github.com/prisma/prisma-read-replica-middleware" target="_blank" rel="noopener noreferrer">prisma/prisma-read-replica-middleware</a>.</li><li>e.g. <a href="https://github.com/prisma/middleware-examples/tree/main/prisma-read-replica-middleware" target="_blank" rel="noopener noreferrer">prisma/middleware-examples/prisma-read-replica-middleware</a></li></ul><h2 class="anchor anchorWithStickyNavbar_NsKL" id="data-sources">Data sources<a href="#data-sources" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h2><ul><li>In the <code>schema.prisma</code> file, there can <a href="https://www.prisma.io/docs/concepts/components/prisma-schema/data-sources" target="_blank" rel="noopener noreferrer">only be one</a> <code>datasource</code> column.</li><li>In case the data source changes, the <code>migration.lock</code> file must be deleted and the migration process must be run again.</li></ul><h2 class="anchor anchorWithStickyNavbar_NsKL" id="polymorphism">Polymorphism<a href="#polymorphism" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h2><ul><li><a href="https://github.com/prisma/prisma/issues/1644" target="_blank" rel="noopener noreferrer">Support for Polymorphic Associations #1644</a> It seems there is no current plan to support this.</li><li>Polymorphic relationships are necessary in normalization but it de-normalizes by adding information to the column.</li></ul>]]></content:encoded>
            <category>nodejs</category>
            <category>prisma</category>
        </item>
        <item>
            <title><![CDATA[Atom-based state management and Valtio]]></title>
            <link>https://gracefullight.dev/en/2023/06/25/atomic-state-management-with-valtio</link>
            <guid>https://gracefullight.dev/en/2023/06/25/atomic-state-management-with-valtio</guid>
            <pubDate>Sun, 25 Jun 2023 07:45:45 GMT</pubDate>
            <description><![CDATA[Shifting from Redux and Recoil to embracing Valtio for efficient state management.]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_NsKL" id="overview">Overview<a href="#overview" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h2><ul><li>At one point, redux-saga seemed like a cool way to solve redux's tired state management, and then a combination of atomic states seemed like the way to go.</li><li>That's why I've mostly used recoil, but if you're using query or swr, you don't need such a complicated feature to manage local UI state.</li><li>recoil seems to be an almost abandoned project with only bug fixes in the meta. <a href="https://github.com/facebookexperimental/Recoil/discussions/2171" target="_blank" rel="noopener noreferrer">discussion#2171</a></li><li>Anyway, local UI state just needs to have a pub/sub pattern.</li><li>The winner of the 2023 state management library seems to be <strong>zustand</strong>.<ul><li>If you're building an event/messaging based system, it makes sense to use that library with the Flux pattern.</li><li>If you're building an editor with action-based behavior for all front-end features, or if you're integrating with a chat system that receives function call requests, that's one thing.</li></ul></li><li>But for a typical use case, Flux is overkill, except for cascading forms, badges, modals, etc.</li><li>If I were developing alone, I would want to separate the backend from the frontend, separate the Local, Dev, Stage, and Prod stages, and have a DB, scheduler, queue, API, and SSR stack.</li></ul><h2 class="anchor anchorWithStickyNavbar_NsKL" id="atom">atom<a href="#atom" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h2><ul><li>Read first; <a href="https://medium.com/@yujso66/%EB%B2%88%EC%97%AD-%EB%A6%AC%EC%95%A1%ED%8A%B8-%EC%83%81%ED%83%9C-%EA%B4%80%EB%A6%AC%EC%9D%98-%EC%83%88%EB%A1%9C%EC%9A%B4-%ED%9D%90%EB%A6%84-6e5ed0022e39" target="_blank" rel="noopener noreferrer">The new wave of React state management</a>을 보자.</li><li>Atomic, pub/sub, and derived are possible.</li><li>Using derived state is also rarely necessary unless you need a new state per ID. For data, query already does the job.</li><li>Atomic design and atomic state management became a necessity.</li><li>With many developers working asynchronously, it was important to keep track of which files were atoms and what they were for.</li><li>We have a <code>*.atom.ts</code> file superfix and a <code>*State</code> variable name superfix.</li></ul><h2 class="anchor anchorWithStickyNavbar_NsKL" id="valtio">valtio<a href="#valtio" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h2><ul><li>Both <a href="https://github.com/pmndrs/jotai/blob/main/src/vanilla/atom.ts#L83" target="_blank" rel="noopener noreferrer">jotai/atom</a> and <a href="https://github.com/facebookexperimental/Recoil/blob/main/packages/recoil/recoil_values/Recoil_atom.js#L185" target="_blank" rel="noopener noreferrer">Recoil/atom</a> manage atom-based state and propagate state.</li><li><a href="https://github.com/pmndrs/valtio/blob/main/src/vanilla.ts#L156" target="_blank" rel="noopener noreferrer">valtio/proxy</a> implements the same functionality using Proxy and Reflect.</li><li>Memory management is not the worst, as you can see from the <a href="https://krausest.github.io/js-framework-benchmark/2023/table_chrome_114.0.5735.90.html" target="_blank" rel="noopener noreferrer">Results for js web frameworks benchmark</a>.</li><li>zustand, jotai, and valtio are all open source, covered by the <a href="https://github.com/orgs/pmndrs/repositories?q=&amp;type=all&amp;language=&amp;sort=stargazers" target="_blank" rel="noopener noreferrer">pmndrs</a> community, with <a href="https://github.com/dai-shi" target="_blank" rel="noopener noreferrer">the same person</a> as a contributor and maintainer.</li><li>It just works, as his comments in <a href="https://github.com/pmndrs/valtio/discussions/128" target="_blank" rel="noopener noreferrer">valito/discussion#128</a> show.</li><li><a href="https://github.com/pmndrs/valtio/issues/141#issuecomment-891214314" target="_blank" rel="noopener noreferrer">valito/issues#141</a> Having spent a year on Redux and Redux-saga, and two years on Mobx POC and Recoil, this comment really resonated with me.</li><li>For the time being, I'm going to create several projects and try to use this state management library in all of them.</li></ul>]]></content:encoded>
            <category>react</category>
            <category>javascript</category>
        </item>
        <item>
            <title><![CDATA[A 10-year programmer's tech retrospective]]></title>
            <link>https://gracefullight.dev/en/2023/06/17/tech-retrospective</link>
            <guid>https://gracefullight.dev/en/2023/06/17/tech-retrospective</guid>
            <pubDate>Sat, 17 Jun 2023 01:38:32 GMT</pubDate>
            <description><![CDATA[A 10-year programmer's tech retrospective]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_NsKL" id="programmer">Programmer<a href="#programmer" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h2><p>What is a programmer?</p><ul><li>People who like to categorize will call it a coder, developer, or engineer.</li><li>To strangers, it may seem like a job that pays a lot of money, or that you have to pay on demand,</li><li>To an employer, you're a mechanic.</li></ul><p>What does this job mean to me?</p><ul><li>At the point where your short-term memory turns into long-term memory, you suddenly have an idea that will solve everything and you grab the keyboard.</li><li>Throwing myself into a gradient descent and not getting out of my chair until I hear the birds in the morning.</li><li>You want to code so badly that you can't because you're required to take a liberal arts major.</li></ul><p>These days, I tell stories like this.</p><blockquote><p>I build houses on the internet.</p></blockquote><ul><li>Front-end? That's interior construction.</li><li>Backend? That's tooling and gutting.</li><li>DevOps? That's digging and rebarring.</li><li>Security? That's keeping unknowns out of the complex.</li></ul><p>Programming is about borrowing concepts from the real world to automate what humans do, and I feel like it took me too long to realize this.</p><p>I finally understand why so many of my professors used to tell me that the more you know, the more important the basics are. I can see why so many of my professors used to say, "The more time you have, the more important the basics are.</p><h2 class="anchor anchorWithStickyNavbar_NsKL" id="programming">Programming<a href="#programming" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h2><p>Do programming skills matter in the age of GPT?</p><p>My answer is no. There comes a point where the idea of the service is more important than the technology stack.
Even people who have never heard of Claude Shannon can create a service, and edge computing has made it possible to deploy that code.</p><p>You can't say, "If you go this way, it's going to fall apart at some point.
You can't pour gasoline on a burning house and then say, "I told you it would happen.</p><p>The social climate is making it more so.</p><h2 class="anchor anchorWithStickyNavbar_NsKL" id="technology-stack">Technology stack<a href="#technology-stack" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h2><p>All technology is a tradeoff.</p><p>New things always cost money. You have to look at it from the perspective of staff skill and maintenance.</p><p>I think, <em>This is not an academy, if you want to write something new, use your personal time and show me a prototype in a week</em>, but there are also people who think, Who am I studying for?</p><p>This is why software engineering is so important.</p><h2 class="anchor anchorWithStickyNavbar_NsKL" id="my-utopia">My utopia<a href="#my-utopia" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h2><p>So what was it that I didn't like, I don't even know if it was bad construction. You may not know.
But not being able to say it's bad construction is overloading my body.</p><p>To keep myself from stressing out, I'm going to keep a checklist of ideal features.</p><ul class="contains-task-list containsTaskList_vfSf"><li class="task-list-item"><input type="checkbox" disabled=""> <!-- -->Do we have a code owner feature? Have we created a culture where certain code changes can be reviewed by a per-file owner?</li><li class="task-list-item"><input type="checkbox" disabled=""> <!-- -->What is the average number of comments in a code review?</li><li class="task-list-item"><input type="checkbox" disabled=""> <!-- -->What is the branching strategy?</li><li class="task-list-item"><input type="checkbox" disabled=""> <!-- -->Are unit tests run in the pipeline, and if so, what is the coverage?</li><li class="task-list-item"><input type="checkbox" disabled=""> <!-- -->Are integration tests based on real data executed in the pipeline, and if so, what are the criteria for inclusion in the integration tests?</li><li class="task-list-item"><input type="checkbox" disabled=""> <!-- -->Are E2E tests executed periodically, and if so, who is responsible for managing them?</li><li class="task-list-item"><input type="checkbox" disabled=""> <!-- -->Are cases given enough time to be implemented before going to test driven?</li><li class="task-list-item"><input type="checkbox" disabled=""> <!-- -->Do they perform chaos testing for external factors? Do they recognize the need for disaster recovery?</li><li class="task-list-item"><input type="checkbox" disabled=""> <!-- -->How is open source managed? Is the software versioned on a specific cycle?</li><li class="task-list-item"><input type="checkbox" disabled=""> <!-- -->Do developers manage their own Docker files and deployments, and if not, who does?</li><li class="task-list-item"><input type="checkbox" disabled=""> <!-- -->Is there support from the systems team to configure a private network? If not, is there an environment where a VPC can be configured?</li><li class="task-list-item"><input type="checkbox" disabled=""> <!-- -->What is being done mechanically to maintain the quality of the code, such as lint and static analysis?</li><li class="task-list-item"><input type="checkbox" disabled=""> <!-- -->If there is a failure, is the failure publicized and a failure report created?</li><li class="task-list-item"><input type="checkbox" disabled=""> <!-- -->Does everyone in the team have ownership of the service?</li><li class="task-list-item"><input type="checkbox" disabled=""> <!-- -->What is the SLA for the services you represent? What is the frequency of OOM failures or top 500 failures?</li><li class="task-list-item"><input type="checkbox" disabled=""> <!-- -->Is the SLA a standard for the HR department?</li><li class="task-list-item"><input type="checkbox" disabled=""> <!-- -->Is the direction of the owner visible to all members?</li><li class="task-list-item"><input type="checkbox" disabled=""> <!-- -->Are decisions made based on data? What tools are used to collect logs?</li><li class="task-list-item"><input type="checkbox" disabled=""> <!-- -->Is the logging format standardized with Open Telemetry, and if not, what format is being managed?</li><li class="task-list-item"><input type="checkbox" disabled=""> <!-- -->Collecting web metrics?</li><li class="task-list-item"><input type="checkbox" disabled=""> <!-- -->Is there a foundation for A/B testing to introduce features? If not, how is the HR department involved in planning?</li><li class="task-list-item"><input type="checkbox" disabled=""> <!-- -->Using a design system?</li><li class="task-list-item"><input type="checkbox" disabled=""> <!-- -->Are Storybooks managed in the same repository?</li></ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Migrate from yarn to pnpm]]></title>
            <link>https://gracefullight.dev/en/2023/06/17/migrate-yarn-to-pnpm</link>
            <guid>https://gracefullight.dev/en/2023/06/17/migrate-yarn-to-pnpm</guid>
            <pubDate>Fri, 16 Jun 2023 23:42:13 GMT</pubDate>
            <description><![CDATA[Exploring the limitations and issues of Yarn Berry while comparing and analyzing the superiority of Pnpm in package management.]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_NsKL" id="overview">Overview<a href="#overview" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h2><ul><li>Yarn berry was all the rage.</li><li>I tried it and found quite a few problems, which is why I ended up choosing pnpm.</li></ul><h2 class="anchor anchorWithStickyNavbar_NsKL" id="problems">Problems<a href="#problems" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h2><h3 class="anchor anchorWithStickyNavbar_NsKL" id="zipfs">zipfs<a href="#zipfs" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h3><ul><li>It stores all the packages and logs all the diffs. This is a major culprit for repository size. Difficult to manage images under 1GB.</li><li>If typescript goes up, yarn berry version should go up. I want to use the latest syntax in typescript right away, but I can't keep up.</li><li>I need to update the executable with <code>yarn dlx @yarnpkg/sdks vscode</code> whenever typescript, eslint, and prettier are released.</li><li>In a project with 20+ front-end developers, this is hard to enforce.</li><li>It is not possible to test this by making small changes to the source inside the package.</li></ul><h3 class="anchor anchorWithStickyNavbar_NsKL" id="opensource">opensource<a href="#opensource" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h3><ul><li>Monolithic tools like turbo, environments with postinstall hooks like prism, or preset configurators like <code>create-*</code> reference <code>node_modules</code> directly.</li><li>Often it won't even run, and you'll have to wait for an open issue in each repo. I'm not writing this to analyze yarn berry's pnp script.</li><li>In this case, I'd have to give it a <code>nodeLinker</code> and use it the same way I would with yarn 1, with no advantage.</li></ul><h3 class="anchor anchorWithStickyNavbar_NsKL" id="workspaces">workspaces<a href="#workspaces" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h3><ul><li>The yarn workspaces feature is cool, and <a href="https://github.com/yarnpkg/berry" target="_blank" rel="noopener noreferrer">yarnpkg/berry</a> is a perfect example of it.</li><li>But it's only cool if you're only developing node.js libraries. Libraries for the frontend need a bundler, and there's no reference for that.</li></ul><h2 class="anchor anchorWithStickyNavbar_NsKL" id="benchmarks">Benchmarks<a href="#benchmarks" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h2><ul><li>Benchmark scores are managed by Pnpm on a daily basis.</li><li>Slowness is acceptable with pipeline cache and lock files enabled. It's a one-time slowdown, not a request/response slowdown, so it can be handled by probes anyway.</li></ul><p><img loading="lazy" src="https://d33wubrfki0l68.cloudfront.net/0cb4f1b1466c5e04cdfd5047d6d509a6a3726996/ea3c9/img/benchmarks/alotta-files.svg" alt="https://pnpm.io/benchmarks" class="img_N2z_"></p><h2 class="anchor anchorWithStickyNavbar_NsKL" id="conclusion">Conclusion<a href="#conclusion" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h2><ul><li>The plugin features in yarn berry are cool, but they add more stress to dependency management.</li></ul>]]></content:encoded>
            <category>nodejs</category>
            <category>javascript</category>
        </item>
        <item>
            <title><![CDATA[My Awesome ChatGPT]]></title>
            <link>https://gracefullight.dev/en/2023/02/26/my-awesome-chatgpt</link>
            <guid>https://gracefullight.dev/en/2023/02/26/my-awesome-chatgpt</guid>
            <pubDate>Sat, 25 Feb 2023 15:29:33 GMT</pubDate>
            <description><![CDATA[Explore useful repositories for developers, including ChatGPT and other tools that can streamline your workflow and increase productivity.]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_NsKL" id="overview">Overview<a href="#overview" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h2><ul><li>The programmers who are good at asking questions and quickly determining if the answers are right or wrong will be the ones who survive.</li><li>Here's a list of repositories that can be used in the field, not just for development tips.</li></ul><h2 class="anchor anchorWithStickyNavbar_NsKL" id="aicommits">aicommits<a href="#aicommits" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h2><ul><li><a href="https://github.com/Nutlope/aicommits" target="_blank" rel="noopener noreferrer">Nutlope/aicommits</a>: Automated commits.</li><li>As soon as <a href="https://github.com/Nutlope/aicommits/issues/32" target="_blank" rel="noopener noreferrer">#32 Add support for conventional commits</a> is resolved, I'll be using it.</li><li>Personally, I think the following prompts should be changed, but I'm also curious about how to improve them.</li><li><a href="https://github.com/Nutlope/aicommits/pull/177/files" target="_blank" rel="noopener noreferrer">#177 feat: enable Conventional Commits standard as flag</a> I think it's coming soon.</li></ul><div class="language-ts codeBlockContainer_ib1q theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockTitle_o3g5">src/utils/openai.ts#L7</div><div class="codeBlockContent_utkV"><pre tabindex="0" class="prism-code language-ts codeBlock_FjXk thin-scrollbar"><code class="codeBlockLines_sPlJ"><span class="token-line theme-code-block-highlighted-line" style="color:#9CDCFE"><span class="token keyword" style="color:rgb(86, 156, 214)">const</span><span class="token plain"> promptTemplate </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  </span><span class="token string" style="color:rgb(206, 145, 120)">"Write an insightful but concise Git commit message in a complete sentence in present tense for the following diff without prefacing it with anything:"</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><br></span></code></pre><div class="buttonGroup_NjpC"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_vhgc" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_U623"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_mggL"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ul><li><a href="https://github.com/Nutlope/aicommits/issues/81#issuecomment-1443077579" target="_blank" rel="noopener noreferrer">#81 Quick improvement suggestion: Reduce diff size with --ignore-all-space</a> is also interesting.</li><li>Since the Openai API is billed by the number of tokens, it looks like they plan to reduce the diff as much as possible.</li></ul><h2 class="anchor anchorWithStickyNavbar_NsKL" id="node-chatgpt">node chatgpt<a href="#node-chatgpt" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h2><ul><li><a href="https://github.com/transitive-bullshit/chatgpt-api" target="_blank" rel="noopener noreferrer">transitive-bullshit/chatgpt-api</a></li><li><a href="https://platform.openai.com/docs/api-reference/completions/create#completions/create-temperature" target="_blank" rel="noopener noreferrer">openai: docs</a></li><li>I think we need to utilize <a href="https://github.com/transitive-bullshit/chatgpt-api/blob/main/src/types.ts#L62" target="_blank" rel="noopener noreferrer">completionParams</a> appropriately.</li><li>I checked several third parties and none of them give temperature as 1.</li></ul><div class="language-ts codeBlockContainer_ib1q theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockContent_utkV"><pre tabindex="0" class="prism-code language-ts codeBlock_FjXk thin-scrollbar"><code class="codeBlockLines_sPlJ"><span class="token-line" style="color:#9CDCFE"><span class="token keyword" style="color:rgb(86, 156, 214)">const</span><span class="token plain"> completionParams </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  temperature</span><span class="token operator" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">0.7</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  top_p</span><span class="token operator" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">1</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  frequency_penalty</span><span class="token operator" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">0</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  presence_penalty</span><span class="token operator" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">0</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><br></span></code></pre><div class="buttonGroup_NjpC"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_vhgc" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_U623"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_mggL"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_NsKL" id="tiktoken">tiktoken<a href="#tiktoken" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h2><ul><li>You may need to get the exact number of tokens to use the openai API.</li><li>You should use <a href="https://github.com/openai/tiktoken" target="_blank" rel="noopener noreferrer">openai/tiktoken</a>, but it's Python.</li><li><a href="https://github.com/dqbd/tiktoken" target="_blank" rel="noopener noreferrer">dqbd/tiktoken</a> already has a node wrapper already out there. 3.5 Turbo support</li></ul><div class="language-ts codeBlockContainer_ib1q theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockContent_utkV"><pre tabindex="0" class="prism-code language-ts codeBlock_FjXk thin-scrollbar"><code class="codeBlockLines_sPlJ"><span class="token-line" style="color:#9CDCFE"><span class="token keyword" style="color:rgb(86, 156, 214)">import</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"> encoding_for_model </span><span class="token keyword" style="color:rgb(86, 156, 214)">as</span><span class="token plain"> encodingForModel </span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(206, 145, 120)">"@dqbd/tiktoken"</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">const</span><span class="token plain"> encoder </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(220, 220, 170)">encodingForModel</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token string" style="color:rgb(206, 145, 120)">"gpt-3.5-turbo"</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">const</span><span class="token plain"> tokenLength </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> encoder</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token function" style="color:rgb(220, 220, 170)">encode</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token string" style="color:rgb(206, 145, 120)">"YOUR_CHAT"</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">length</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><br></span></code></pre><div class="buttonGroup_NjpC"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_vhgc" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_U623"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_mggL"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_NsKL" id="chatgpt-retrieval-plugin">chatgpt-retrieval-plugin<a href="#chatgpt-retrieval-plugin" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h2><p><a href="https://github.com/openai/chatgpt-retrieval-plugin" target="_blank" rel="noopener noreferrer">openai/chatgpt-retrieval-plugin</a></p><ul><li>ai-plugin.json in the .well-known path acts as a manifest.json</li><li>Openapi.yaml in the same path for this endpoint specification</li><li>There are four types of authentication: <code>none | user_http | service_http | oauth</code>.</li><li>For simple services, <code>service_http</code> seems to be sufficient, <code>user_http</code> requires the customer to enter an API key, and <code>oauth</code> requires additional permissions such as <code>search:read</code>.</li><li>It seems to use Vector DB for document similarity comparison, but there is no proper Node.js wrapper for it, so it can be implemented in Redis, but you need the Redisearch module.<ul><li><a href="https://github.com/openai/chatgpt-retrieval-plugin/blob/main/datastore/providers/redis_datastore.py" target="_blank" rel="noopener noreferrer">datastore/providers/redis_datastore.py</a></li><li><a href="https://github.com/openai/chatgpt-retrieval-plugin/blob/38b46e1926ba1b4bf04263e85afe6b661efec1b6/services/openai.py#L23" target="_blank" rel="noopener noreferrer">services/openai.py</a></li></ul></li></ul>]]></content:encoded>
            <category>chatgpt</category>
        </item>
        <item>
            <title><![CDATA[The durable back over a hundread years]]></title>
            <link>https://gracefullight.dev/en/2023/01/21/백년허리</link>
            <guid>https://gracefullight.dev/en/2023/01/21/백년허리</guid>
            <pubDate>Sat, 21 Jan 2023 10:29:08 GMT</pubDate>
            <description><![CDATA[A review of the book "백년허리", which focuses on maintaining spinal hygiene and preventing disc damage]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_NsKL" id="백년허리">백년허리<a href="#백년허리" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h2><p>I got a herniated disc from Sumo-deadlift, and I think it would be good for many people to read this before it happens.
If I had, I would have had a good posture before the disc between L5-S1 came out.</p><p>The overall content is a book review of <a href="https://link.coupang.com/a/MTwds" target="_blank" rel="noopener noreferrer">백년허리</a> to protect spinal hygiene.</p><h2 class="anchor anchorWithStickyNavbar_NsKL" id="diagnosis">Diagnosis<a href="#diagnosis" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h2><ul><li>Vertebrae: Cervical, thoracic, lumbar, sacral, and coccyx<ul><li>The cervical and lumbar vertebrae are curved forward, with cervical lordosis and lumbar lordosis.</li></ul></li><li>Disc damage is the main cause of back pain</li><li>Discs: Nucleus pulposus, annulus fibrosus, and endplates<ul><li>The posterior annulus fibrosus and endplates are most commonly injured</li></ul></li><li>Muscles protect the torn disc.<ul><li>When a disc tears, the muscles tighten to protect it.</li><li>Low back pain is a sign of a torn disc</li></ul></li><li>Lumbar lordosis is a new posture.</li><li>A healthy disc creates a lumbar lordosis curve, and the lumbar lordosis curve protects the disc.</li><li>Sciatica is a typical symptom of a herniated disc and is a sign that the disc has herniated.</li></ul><h2 class="anchor anchorWithStickyNavbar_NsKL" id="treatment">Treatment<a href="#treatment" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h2><ul><li>The idea that you can cure a bad back by doing stronger back exercises is like saying that you can cure a broken arm by exercising the arm muscles.</li><li>The hip muscles and obliques are important.</li><li>You need to know exactly how much impact your workout will have on your back, and make sure your back can handle the strain.</li><li>Stretches that bend at the waist are very bad exercises for lumbar lordosis</li><li>Stiffness in the lower back when a disc injury is healing is a natural part of the process of the wound turning into scarring.</li><li>It's essential to regain lumbar lordosis through frequent standing and extension movements.</li><li>It is spinal hygiene to try to never re-tear a disc wound as it heals.</li><li>Maintaining lumbar lordosis 24 hours a day</li><li>If you suffer from sciatica when doing lumbar lordosis, you should treat the nerve root inflammation and practice good spinal hygiene.</li><li>Leaning on a backrest or cushion is an advantage.</li><li>The basics of spinal hygiene are maximum lumbar lordosis and extension movements.</li><li>If it hurts to do extension movements, lie on your stomach and do them frequently, for about 5 minutes, with your elbows under your shoulders.</li><li>Lumbar lordosis should not collapse when standing, sitting, or bending at the waist.</li><li>Your back is most comfortable when your knees are slightly lower than your pelvis.</li><li>There is no such thing as a bad back. Your back improves with good posture.</li><li>Standing lumbar lordosis: place your hands on your waist and hold for 5 seconds while breathing.</li><li>Standing Chest: Standing, lift your chest and grab your shoulder blades. No duckbills</li><li>Walking: keep both shoulder blades together, open chest, chin up, graceful chin and proud chest.</li><li>Sitting: knees should be lower than the pelvis. Sit with an upright chest.<ul><li>The height of the screen should be high enough.</li><li>When sitting with good spinal alignment, you should be able to see the screen without bending your back and neck too much.</li></ul></li><li>The best place for a lumbar strap is between the 3rd and 4th lumbar vertebrae.</li><li>Avoid the knees.</li></ul><h2 class="anchor anchorWithStickyNavbar_NsKL" id="prohibited-positions">Prohibited positions<a href="#prohibited-positions" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h2><ul><li>Squatting</li><li>Sitting long</li><li>Cross-legged</li><li>Slouching</li></ul>]]></content:encoded>
            <category>review</category>
        </item>
        <item>
            <title><![CDATA[ChatGPT use cases]]></title>
            <link>https://gracefullight.dev/en/2023/01/19/chatgpt-use-case</link>
            <guid>https://gracefullight.dev/en/2023/01/19/chatgpt-use-case</guid>
            <pubDate>Thu, 19 Jan 2023 13:44:09 GMT</pubDate>
            <description><![CDATA[How to use ChatGPT for real-world applications beyond just coding]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_NsKL" id="overview">Overview<a href="#overview" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h2><p>Here's a list of use cases where you can get past the hype and actually use it for something useful.</p><h2 class="anchor anchorWithStickyNavbar_NsKL" id="extracting-regular-expressions">Extracting regular expressions<a href="#extracting-regular-expressions" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h2><p>Creating regular expressions usually involves a lot of testing.
I usually put the desired text in regexr, regex101, and match the negative/positive lookahead from memory, and use negative/positive lookbehind, but often find that negative lookbehind is not supported by different programming versions/languages.</p><p>Now I ask ChatGPT. Suppose you want to extract the package name from the package update history below.</p><div class="language-txt codeBlockContainer_ib1q theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockContent_utkV"><pre tabindex="0" class="prism-code language-txt codeBlock_FjXk thin-scrollbar"><code class="codeBlockLines_sPlJ"><span class="token-line" style="color:#9CDCFE"><span class="token plain">Hello GPT.</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">Can you give me a regex pattern for getting to-be result?</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">as-is:</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">Orignal content</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">to-be:</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">Refined string #1</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">Refined string #2</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">...and so on.</span><br></span></code></pre><div class="buttonGroup_NjpC"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_vhgc" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_U623"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_mggL"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>It will get it for you.</p><h2 class="anchor anchorWithStickyNavbar_NsKL" id="writing-documentation-with-code">Writing documentation with code<a href="#writing-documentation-with-code" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h2><p>If you want your code to be documented, put it in and ask it to create a README.md.</p><div class="codeBlockContainer_ib1q theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockContent_utkV"><pre tabindex="0" class="prism-code language-text codeBlock_FjXk thin-scrollbar"><code class="codeBlockLines_sPlJ"><span class="token-line" style="color:#9CDCFE"><span class="token plain">Can you write a README.md with this code?</span><br></span></code></pre><div class="buttonGroup_NjpC"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_vhgc" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_U623"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_mggL"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>It will get it for you.</p><h2 class="anchor anchorWithStickyNavbar_NsKL" id="create-an-object-validation-schema-with-the-interface">Create an Object Validation Schema with the interface<a href="#create-an-object-validation-schema-with-the-interface" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h2><p>Let's create a Joi Schema with a TypeScript interface.</p><h2 class="anchor anchorWithStickyNavbar_NsKL" id="create-a-query-dsl-with-raw-sql">Create a Query DSL with Raw SQL<a href="#create-a-query-dsl-with-raw-sql" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h2><p>Pass in a raw query and ask it to create a query DSL and query helper syntax.</p><h2 class="anchor anchorWithStickyNavbar_NsKL" id="create-a-ddl-with-data">Create a DDL with Data<a href="#create-a-ddl-with-data" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h2><p>Pass in a query and ask it to generate a table schema query like the interface example above.</p><h2 class="anchor anchorWithStickyNavbar_NsKL" id="see">See<a href="#see" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h2><p>awesome is now live. <a href="https://github.com/f/awesome-chatgpt-prompts" target="_blank" rel="noopener noreferrer">https://github.com/f/awesome-chatgpt-prompts</a></p>]]></content:encoded>
            <category>chatgpt</category>
            <category>javascript</category>
        </item>
        <item>
            <title><![CDATA[Migrate a blog from hexo to docusaurus]]></title>
            <link>https://gracefullight.dev/en/2023/01/10/migrate-blog-from-hexo-to-docu</link>
            <guid>https://gracefullight.dev/en/2023/01/10/migrate-blog-from-hexo-to-docu</guid>
            <pubDate>Tue, 10 Jan 2023 14:26:34 GMT</pubDate>
            <description><![CDATA[Migrating from Hexo to Docusaurus; Overview of benefits, troubleshooting tips for SEO and Site Verification.]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_NsKL" id="overview">Overview<a href="#overview" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h2><p>I've been using hexo since 2016, and I love it because it has a lot of plugins and themes.
Since 2019. As there are many other Static Site Generators, the advantages of hexo are no longer available.
The updates of ecosystem libraries such as theme and plugin development have also decreased.</p><p>The stack was theme-dependent: ejs -&gt; njk, less -&gt; sass -&gt; stylus.
Crucially, it's a nodejs-based core, so even if I uploaded a troubleshooting, it was a waste of resources.</p><p>Docusaurus didn't have algolia search when it was 1-2 alpha.
There was a shovel to swizzle and use the local search community plugin to attach it, and Korean did not work normally.</p><p>In 2023, version 2 was launched, the frontend stack was unified based on React, and it seemed like it was okay to proceed with this work.</p><h2 class="anchor anchorWithStickyNavbar_NsKL" id="troubleshooting">Troubleshooting<a href="#troubleshooting" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h2><h3 class="anchor anchorWithStickyNavbar_NsKL" id="seo">SEO<a href="#seo" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h3><h4 class="anchor anchorWithStickyNavbar_NsKL" id="uri">URI<a href="#uri" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h4><ul><li>hexo puts the date inside the front-matter syntax as <code>date: 2023-01-10 09:00:00</code>.</li><li>docusaurus should use the <a href="https://docusaurus.io/docs/blog#blog-post-date" target="_blank" rel="noopener noreferrer">nested folder structure</a>.</li><li>It will parse the front-matter.date in the md file and treat it like <code>/2023/01/10/title</code> in the URL.</li></ul><h4 class="anchor anchorWithStickyNavbar_NsKL" id="site-verification">Site Verification<a href="#site-verification" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h4><ul><li>I put it in the configuration without any problems.</li></ul><div class="language-json codeBlockContainer_ib1q theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockTitle_o3g5">docusaurus.config.js</div><div class="codeBlockContent_utkV"><pre tabindex="0" class="prism-code language-json codeBlock_FjXk thin-scrollbar"><code class="codeBlockLines_sPlJ"><span class="token-line" style="color:#9CDCFE"><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  </span><span class="token property">"themeConfig"</span><span class="token operator" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token property">"metadata"</span><span class="token operator" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">      </span><span class="token comment" style="color:rgb(106, 153, 85)">// ? https://search.google.com/search-console</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        </span><span class="token property">"name"</span><span class="token operator" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(206, 145, 120)">"google-site-verification"</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        </span><span class="token property">"content"</span><span class="token operator" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(206, 145, 120)">"g"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><br></span></code></pre><div class="buttonGroup_NjpC"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_vhgc" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_U623"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_mggL"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_NsKL" id="hexo-new">hexo new<a href="#hexo-new" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h3><ul><li><code>hexo new post "title"</code> This command creates a post, but I needed a compatible command.</li><li>I used <code>yarn cmd new title</code> to generate what looks like <code>blog/2023/01/10/title.mdx</code> as of today.</li><li>For URL normalization, you can use <code>import { slugize } from "hexo-util";</code>.<ul><li>slugify also removes Korean characters.</li></ul></li></ul><h3 class="anchor anchorWithStickyNavbar_NsKL" id="archive">archive<a href="#archive" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h3><ul><li>The archive of hexo is Order by Created DESC, while docusaurus is ASC sorted.</li><li>There was an issue to provide this as a plugin option, but it was closed, and do it yourself was the answer.</li><li>I created one, <a href="https://github.com/facebook/docusaurus/blob/main/packages/docusaurus-theme-classic/src/theme/BlogArchivePage/index.tsx" target="_blank" rel="noopener noreferrer">overwrote the existing component</a>, rearranged it, and linked it.</li></ul><div class="language-json codeBlockContainer_ib1q theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockTitle_o3g5">docusaurus.config.js</div><div class="codeBlockContent_utkV"><pre tabindex="0" class="prism-code language-json codeBlock_FjXk thin-scrollbar"><code class="codeBlockLines_sPlJ"><span class="token-line" style="color:#9CDCFE"><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  </span><span class="token property">"presets"</span><span class="token operator" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token string" style="color:rgb(206, 145, 120)">"classic"</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">      </span><span class="token property">"blog"</span><span class="token operator" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        </span><span class="token comment" style="color:rgb(106, 153, 85)">// path.resolve needed</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        </span><span class="token property">"blogArchiveComponent"</span><span class="token operator" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(206, 145, 120)">"./src/component/BlogArchiveDescendingPage.tsx"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><br></span></code></pre><div class="buttonGroup_NjpC"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_vhgc" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_U623"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_mggL"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_NsKL" id="tag">tag<a href="#tag" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h3><ul><li>A docusaurus tag is defined as <code>tags: [tag1, tag2]</code> and must satisfy this format.</li><li>I asked ChatGPT for a regular expression and replaced it with the whole thing.</li></ul><h3 class="anchor anchorWithStickyNavbar_NsKL" id="github-action">github action<a href="#github-action" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h3><ul><li>Set up the target repo and branch.</li><li>Issue a personal access token and insert the two values appropriately.</li><li>Run yarn build, yarn deploy and it should work fine.</li></ul><div class="language-json codeBlockContainer_ib1q theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockTitle_o3g5">docusaurus.config.js</div><div class="codeBlockContent_utkV"><pre tabindex="0" class="prism-code language-json codeBlock_FjXk thin-scrollbar"><code class="codeBlockLines_sPlJ"><span class="token-line" style="color:#9CDCFE"><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  </span><span class="token property">"organizationName"</span><span class="token operator" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(206, 145, 120)">"gracefullight"</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  </span><span class="token property">"projectName"</span><span class="token operator" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(206, 145, 120)">"gracefullight.github.io"</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  </span><span class="token property">"deploymentBranch"</span><span class="token operator" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(206, 145, 120)">"main"</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  </span><span class="token property">"trailingSlash"</span><span class="token operator" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token boolean">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><br></span></code></pre><div class="buttonGroup_NjpC"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_vhgc" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_U623"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_mggL"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-yml codeBlockContainer_ib1q theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockTitle_o3g5">workflows/main.yml</div><div class="codeBlockContent_utkV"><pre tabindex="0" class="prism-code language-yml codeBlock_FjXk thin-scrollbar"><code class="codeBlockLines_sPlJ"><span class="token-line" style="color:#9CDCFE"><span class="token key atrule">env</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  </span><span class="token key atrule">GIT_USER</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"> secrets.GIT_USER </span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  </span><span class="token key atrule">GIT_PASS</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"> secrets.GIT_PASS </span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><br></span></code></pre><div class="buttonGroup_NjpC"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_vhgc" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_U623"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_mggL"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_NsKL" id="dark-only">dark only<a href="#dark-only" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h3><ul><li>Dark only, also deleted the switch.</li></ul><div class="language-json codeBlockContainer_ib1q theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockTitle_o3g5">docusaurus.config.js</div><div class="codeBlockContent_utkV"><pre tabindex="0" class="prism-code language-json codeBlock_FjXk thin-scrollbar"><code class="codeBlockLines_sPlJ"><span class="token-line" style="color:#9CDCFE"><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  </span><span class="token property">"themeConfig"</span><span class="token operator" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token property">"colorMode"</span><span class="token operator" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">      </span><span class="token property">"defaultMode"</span><span class="token operator" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(206, 145, 120)">"dark"</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">      </span><span class="token property">"disableSwitch"</span><span class="token operator" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token boolean">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><br></span></code></pre><div class="buttonGroup_NjpC"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_vhgc" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_U623"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_mggL"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_NsKL" id="code-block">code block<a href="#code-block" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h3><ul><li>has a different format, so I replaced it with a regular expression.</li></ul><div class="language-bash codeBlockContainer_ib1q theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockContent_utkV"><pre tabindex="0" class="prism-code language-bash codeBlock_FjXk thin-scrollbar"><code class="codeBlockLines_sPlJ"><span class="token-line" style="color:#9CDCFE"><span class="token comment" style="color:rgb(106, 153, 85)"># hexo</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">\</span><span class="token variable" style="color:rgb(156, 220, 254)">`</span><span class="token variable punctuation" style="color:rgb(212, 212, 212)">\</span><span class="token variable" style="color:rgb(156, 220, 254)">`</span><span class="token punctuation" style="color:rgb(212, 212, 212)">\</span><span class="token variable" style="color:rgb(156, 220, 254)">`</span><span class="token variable" style="color:rgb(156, 220, 254)">language title</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token variable" style="display:inline-block;color:rgb(156, 220, 254)"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token variable" style="color:rgb(156, 220, 254)"></span><span class="token variable comment" style="color:rgb(106, 153, 85)"># docusaurus</span><span class="token variable" style="color:rgb(156, 220, 254)"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token variable" style="color:rgb(156, 220, 254)"></span><span class="token variable punctuation" style="color:rgb(212, 212, 212)">\</span><span class="token variable" style="color:rgb(156, 220, 254)">`</span><span class="token punctuation" style="color:rgb(212, 212, 212)">\</span><span class="token variable" style="color:rgb(156, 220, 254)">`</span><span class="token variable punctuation" style="color:rgb(212, 212, 212)">\</span><span class="token variable" style="color:rgb(156, 220, 254)">`</span><span class="token plain">language </span><span class="token assign-left variable" style="color:rgb(156, 220, 254)">title</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token string" style="color:rgb(206, 145, 120)">"title"</span><br></span></code></pre><div class="buttonGroup_NjpC"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_vhgc" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_U623"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_mggL"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_NsKL" id="comment">comment<a href="#comment" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h3><ul><li>I don't have time to answer questions about the comment feature.</li><li>I tried to delete it, but I customized it and integrated gitalk.</li></ul><h3 class="anchor anchorWithStickyNavbar_NsKL" id="search">search<a href="#search" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h3><ul><li>I requested free indexing because algolia is not an open source documentation, but the ticket status didn't change.</li><li>I used <a href="https://github.com/easyops-cn/docusaurus-search-local" target="_blank" rel="noopener noreferrer">@easyops-cn/docusaurus-search-local</a>, but it doesn't support mobile.</li></ul><div class="language-js codeBlockContainer_ib1q theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockTitle_o3g5">docusaurus.config.js</div><div class="codeBlockContent_utkV"><pre tabindex="0" class="prism-code language-js codeBlock_FjXk thin-scrollbar"><code class="codeBlockLines_sPlJ"><span class="token-line" style="color:#9CDCFE"><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  </span><span class="token literal-property property">themes</span><span class="token operator" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token string" style="color:rgb(206, 145, 120)">"@easyops-cn/docusaurus-search-local"</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token comment" style="color:rgb(106, 153, 85)">/** @type {import("@easyops-cn/docusaurus-search-local").PluginOptions} */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">      </span><span class="token literal-property property">indexDocs</span><span class="token operator" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token boolean">false</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">      </span><span class="token literal-property property">blogRouteBasePath</span><span class="token operator" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(206, 145, 120)">"/"</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">      </span><span class="token literal-property property">hashed</span><span class="token operator" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token boolean">true</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">      </span><span class="token literal-property property">language</span><span class="token operator" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token string" style="color:rgb(206, 145, 120)">"en"</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(206, 145, 120)">"ko"</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><br></span></code></pre><div class="buttonGroup_NjpC"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_vhgc" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_U623"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_mggL"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ul><li>After about a week, algolia replied and the indexing was successfully completed.</li></ul><h2 class="anchor anchorWithStickyNavbar_NsKL" id="result">Result<a href="#result" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h2><ul><li>LGTM</li><li>I think I need to build <a href="https://docusaurus.io/docs/search#using-typesense-docsearch" target="_blank" rel="noopener noreferrer">typesense</a> first, so it won't be easy.</li><li>If you don't need to view it on mobile, the above plugin should be enough.</li></ul>]]></content:encoded>
            <category>nodejs</category>
            <category>javascript</category>
        </item>
        <item>
            <title><![CDATA[Nextjs App Directory]]></title>
            <link>https://gracefullight.dev/en/2022/11/24/nextjs-13-app-dir</link>
            <guid>https://gracefullight.dev/en/2022/11/24/nextjs-13-app-dir</guid>
            <pubDate>Thu, 24 Nov 2022 23:16:14 GMT</pubDate>
            <description><![CDATA[How to use the Next.js 13 app directory and its limitations.]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_NsKL" id="개요">개요<a href="#개요" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h2><ul><li>nextjs 13버전에서 app 디렉토리가 생기면서 client/server 컴포넌트를 쉽게 사용할 수 있는 환경이 되었다.</li><li><code>getStaticProps</code>, <code>getServerSideProps</code> 와 같은 메소드가 사라졌고, 양쪽이 <code>fetch</code> 로 통합이 되었다.</li><li>페이지별 상태 초기화를 위한 HOC 중첩을 가져가지 않아도 될 것 같았다.</li></ul><h2 class="anchor anchorWithStickyNavbar_NsKL" id="app">App<a href="#app" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h2><h3 class="anchor anchorWithStickyNavbar_NsKL" id="nodejs--react-dom-renderer">Node.js + React DOM Renderer<a href="#nodejs--react-dom-renderer" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h3><p>app 내의 모든 로직은 Node.js 이다. 따라서 이런 로직이 가능하다.</p><div class="language-tsx codeBlockContainer_ib1q theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockTitle_o3g5">app/page.tsx</div><div class="codeBlockContent_utkV"><pre tabindex="0" class="prism-code language-tsx codeBlock_FjXk thin-scrollbar"><code class="codeBlockLines_sPlJ"><span class="token-line" style="color:#9CDCFE"><span class="token keyword" style="color:rgb(86, 156, 214)">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token imports"> hostname </span><span class="token imports punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(206, 145, 120)">"os"</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">default</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(220, 220, 170)">Main</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  </span><span class="token keyword" style="color:rgb(86, 156, 214)">return</span><span class="token plain"> </span><span class="token tag punctuation" style="color:rgb(212, 212, 212)">&lt;</span><span class="token tag" style="color:rgb(78, 201, 176)">div</span><span class="token tag punctuation" style="color:rgb(212, 212, 212)">&gt;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token function" style="color:rgb(220, 220, 170)">hostname</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token tag punctuation" style="color:rgb(212, 212, 212)">&lt;/</span><span class="token tag" style="color:rgb(78, 201, 176)">div</span><span class="token tag punctuation" style="color:rgb(212, 212, 212)">&gt;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><br></span></code></pre><div class="buttonGroup_NjpC"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_vhgc" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_U623"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_mggL"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>이벤트를 바인딩할 수 없다.</p><div class="language-tsx codeBlockContainer_ib1q theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockTitle_o3g5">app/page.tsx</div><div class="codeBlockContent_utkV"><pre tabindex="0" class="prism-code language-tsx codeBlock_FjXk thin-scrollbar"><code class="codeBlockLines_sPlJ"><span class="token-line" style="color:#9CDCFE"><span class="token keyword" style="color:rgb(86, 156, 214)">import</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">type</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"> </span><span class="token maybe-class-name">SyntheticEvent</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(206, 145, 120)">"react"</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">default</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(220, 220, 170)">Main</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  </span><span class="token keyword" style="color:rgb(86, 156, 214)">const</span><span class="token plain"> </span><span class="token function-variable function" style="color:rgb(220, 220, 170)">handleSubmit</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">event</span><span class="token operator" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token maybe-class-name">SyntheticEvent</span><span class="token operator" style="color:rgb(212, 212, 212)">&lt;</span><span class="token maybe-class-name">HTMLFormElement</span><span class="token operator" style="color:rgb(212, 212, 212)">&gt;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:rgb(212, 212, 212)">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token console class-name" style="color:rgb(78, 201, 176)">console</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token method function property-access" style="color:rgb(220, 220, 170)">log</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token string" style="color:rgb(206, 145, 120)">"submitting"</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  </span><span class="token keyword" style="color:rgb(86, 156, 214)">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token tag punctuation" style="color:rgb(212, 212, 212)">&lt;</span><span class="token tag" style="color:rgb(78, 201, 176)">form</span><span class="token tag" style="color:rgb(78, 201, 176)"> </span><span class="token tag attr-name" style="color:rgb(156, 220, 254)">onSubmit</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(212, 212, 212)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token tag script language-javascript" style="color:rgb(78, 201, 176)">handleSubmit</span><span class="token tag script language-javascript punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token tag punctuation" style="color:rgb(212, 212, 212)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(212, 212, 212)">&lt;</span><span class="token tag" style="color:rgb(78, 201, 176)">button</span><span class="token tag" style="color:rgb(78, 201, 176)"> </span><span class="token tag attr-name" style="color:rgb(156, 220, 254)">type</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(212, 212, 212)">=</span><span class="token tag attr-value punctuation" style="color:rgb(212, 212, 212)">"</span><span class="token tag attr-value" style="color:rgb(206, 145, 120)">submit</span><span class="token tag attr-value punctuation" style="color:rgb(212, 212, 212)">"</span><span class="token tag punctuation" style="color:rgb(212, 212, 212)">&gt;</span><span class="token plain-text">submit</span><span class="token tag punctuation" style="color:rgb(212, 212, 212)">&lt;/</span><span class="token tag" style="color:rgb(78, 201, 176)">button</span><span class="token tag punctuation" style="color:rgb(212, 212, 212)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain-text">    </span><span class="token tag punctuation" style="color:rgb(212, 212, 212)">&lt;/</span><span class="token tag" style="color:rgb(78, 201, 176)">form</span><span class="token tag punctuation" style="color:rgb(212, 212, 212)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><br></span></code></pre><div class="buttonGroup_NjpC"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_vhgc" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_U623"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_mggL"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-html codeBlockContainer_ib1q theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockContent_utkV"><pre tabindex="0" class="prism-code language-html codeBlock_FjXk thin-scrollbar"><code class="codeBlockLines_sPlJ"><span class="token-line" style="color:#9CDCFE"><span class="token plain">Error: Event handlers cannot be passed to Client Component props.</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token tag punctuation" style="color:rgb(212, 212, 212)">&lt;</span><span class="token tag" style="color:rgb(78, 201, 176)">form</span><span class="token tag" style="color:rgb(78, 201, 176)"> </span><span class="token tag special-attr attr-name" style="color:rgb(156, 220, 254)">onSubmit</span><span class="token tag special-attr attr-value punctuation attr-equals" style="color:rgb(212, 212, 212)">=</span><span class="token tag special-attr attr-value punctuation" style="color:rgb(212, 212, 212)">"</span><span class="token tag special-attr attr-value value javascript language-javascript punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token tag special-attr attr-value value javascript language-javascript keyword" style="color:rgb(86, 156, 214)">function</span><span class="token tag special-attr attr-value value javascript language-javascript punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token tag special-attr attr-value punctuation" style="color:rgb(212, 212, 212)">"</span><span class="token tag" style="color:rgb(78, 201, 176)"> </span><span class="token tag attr-name" style="color:rgb(156, 220, 254)">children</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(212, 212, 212)">=</span><span class="token tag attr-value punctuation" style="color:rgb(212, 212, 212)">"</span><span class="token tag attr-value" style="color:rgb(206, 145, 120)">...</span><span class="token tag attr-value punctuation" style="color:rgb(212, 212, 212)">"</span><span class="token tag punctuation" style="color:rgb(212, 212, 212)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  ^^^^^^^^^^ If you need interactivity, consider converting part of this to a</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  Client Component.</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token tag punctuation" style="color:rgb(212, 212, 212)">&lt;/</span><span class="token tag" style="color:rgb(78, 201, 176)">form</span><span class="token tag punctuation" style="color:rgb(212, 212, 212)">&gt;</span><br></span></code></pre><div class="buttonGroup_NjpC"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_vhgc" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_U623"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_mggL"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_NsKL" id="design-system">Design system<a href="#design-system" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h3><p>대부분의 디자인 시스템 라이브러리는 <code>ThemeProvider</code> 로 테마 상태를 공유하고 Baseline StyleSheet를 전역에 넣어준다.
스타일시트를 위해 <a href="https://beta.nextjs.org/docs/styling/css-in-js#styled-components" target="_blank" rel="noopener noreferrer">RootStyleRegistry</a> 란 HOC 만들어 Baseline StyleSheet 를 동적으로 넣어주면 초기화는 가능하지만,</p><p>문제는 Server Component 내에서 use 을 사용할 수 없으니 <code>ThemeProvider</code> 로 기능동작이 불가능하다.
어찌저찌 <code>'use-client'</code> directive 로 Client Component 로 설정한다고 하여도 Provider 로 인해 하위 모든 컴포넌트가 Client Component 로 동작해야할 것이다.</p><p>그래서 문서에서 <a href="https://beta.nextjs.org/docs/styling/css-in-js#configuring-css-in-js-in-app" target="_blank" rel="noopener noreferrer">다음과 같이 표기</a>가 된 것으로 보인다.</p><blockquote><p>If you want to style Server Components, we recommend using CSS Modules or other solutions that output CSS files, like PostCSS or Tailwind CSS.</p></blockquote><p>위 방식으로 <a href="https://github.com/mui/material-ui/blob/master/examples/material-next-app-router-ts/src/components/Theme/ThemeRegistry/EmotionCache.tsx" target="_blank" rel="noopener noreferrer">mui/material-ui/examples/material-next-app-router-ts</a> 예시가 추가되었지만, 이렇게 쓸바에 pages 폴더 라우트와 다를 게 없다고 생각한다.</p><h2 class="anchor anchorWithStickyNavbar_NsKL" id="결론">결론<a href="#결론" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h2><ul><li>아직 app 폴더를 사용하기엔 이르다.</li><li><a href="https://github.com/vercel/app-playground" target="_blank" rel="noopener noreferrer">vercel/app-playground</a>에 충분한 예시가 갖춰지고, 생태계가 React Server Component 를 충분히 지원할 때까지는 프로덕션에서 사용은 불가능하다고 보인다.</li></ul><h2 class="anchor anchorWithStickyNavbar_NsKL" id="사견">사견<a href="#사견" class="hash-link" aria-label="Direct link to heading" title="Direct link to heading">​</a></h2><p>개인적으로는 왜 이렇게 많이 클라이언트에서 렌더링해야해? 그냥 필요한 영역만 클라이언트에서 그려주면 되잖아? 라는 접근방식은 디버깅 관점에서 마음에 들진 않는다. 웹을 하나의 Client 관점에서 본다면, 설치의 유무만 다를 뿐 앱에서 서버에서 렌더링된 HTML을 받고 일정부분만을 Server Driven UI 로 가는거와 마찬가지다. 복잡도가 크게 증가한다.</p><p>이러한 시도는 이미 Dotnet, Laravel Livewire 등 다른 언어에서 많이 진행되어왔고, Remix 에서는 이미 잘 동작 중이다.
단지 React 를 서버에서 쓰기 위해 다시 MVC 시절로 회귀하려는지 모르겠다.</p>]]></content:encoded>
            <category>javascript</category>
            <category>typescript</category>
            <category>react</category>
            <category>nextjs</category>
        </item>
    </channel>
</rss>