{
    "version": "https://jsonfeed.org/version/1",
    "title": "gracefullight.dev Blog",
    "home_page_url": "https://gracefullight.dev/en/",
    "description": "gracefullight.dev Blog",
    "items": [
        {
            "id": "https://gracefullight.dev/en/2025/08/16/vision-language-models-for-vision-tasks-review/",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"overview\">Overview<a href=\"https://gracefullight.dev/en/2025/08/16/vision-language-models-for-vision-tasks-review/#overview\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<blockquote>\n<p>Most visual recognition studies rely heavily on crowdlabelled data in DNN</p>\n</blockquote>\n<ul>\n<li>Background development of visual recognition paradigms</li>\n<li>Foundations its architecture</li>\n<li>Datasets in VLM pre-training and evaluations</li>\n<li>Review and categorization of existing pre-training methods</li>\n<li>Benchmarking analysis discussion</li>\n<li>Reach challenges &amp; potential research direction</li>\n<li>Training hard<!-- -->\n<ul>\n<li>New learning paradigm</li>\n</ul>\n</li>\n<li>Vision-Language Model Pre-training and Zero-shot Prediction<!-- -->\n<ul>\n<li>Increasing attention</li>\n</ul>\n</li>\n<li>VLMs with transfer learning<!-- -->\n<ul>\n<li>Prompt tuning</li>\n<li>Visual adaption</li>\n</ul>\n</li>\n<li>VLMs with knowledge distillation<!-- -->\n<ul>\n<li>distill knowledge from VLMs to downstream tasks</li>\n</ul>\n</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"the-development-of-visual-recognition-paradigms\">The development of visual recognition paradigms<a href=\"https://gracefullight.dev/en/2025/08/16/vision-language-models-for-vision-tasks-review/#the-development-of-visual-recognition-paradigms\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<!-- -->\n<ul>\n<li>Traditional ML: Hand-crafted features for prediction.</li>\n<li>Deep Learning: Deep networks (e.g., ResNet) with large-scale labeled data.</li>\n<li>Supervised Pre-training + Fine-tuning: Learned representations transferred to downstream tasks.</li>\n<li>Unsupervised / Self-supervised Pre-training + Fine-tuning: Objectives like masked modeling and contrastive learning to learn representations.</li>\n<li>Vision-Language Models &amp; Zero-shot: Leverage large-scale web data, enabling zero-shot prediction without task-specific fine-tuning.<!-- -->\n<ul>\n<li>Collecting large-scale informative image-text data</li>\n<li>Designing high-capacity models for effective learning from Bigdata.</li>\n<li>Designing new pre-training objectives for learning effective VLMs.</li>\n</ul>\n</li>\n</ul>\n<p><img decoding=\"async\" loading=\"lazy\" alt=\"Illustration of development of VLMs for visual recognition\" src=\"https://gracefullight.dev/en/assets/images/vlm-paradigm-46050660982130f887307cc0442975c0.png\" width=\"701\" height=\"347\" class=\"img_f7zd\"></p>\n<ul>\n<li>CLIP: Image-text contrastive objective and learns by pulling the paired images and texts close and pushing others faraway in the embedding space.<!-- -->\n<ul>\n<li>enables effective usage of web data and allows zero-shot predictions without task-specific finetuning.</li>\n</ul>\n</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"vlm-overview\">VLM Overview<a href=\"https://gracefullight.dev/en/2025/08/16/vision-language-models-for-vision-tasks-review/#vlm-overview\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<p><img decoding=\"async\" loading=\"lazy\" alt=\"VLM Overview\" src=\"https://gracefullight.dev/en/assets/images/vlm-overview-2abb2d65aeef690c49e399a7ca3ac86c.png\" width=\"1400\" height=\"728\" class=\"img_f7zd\"></p>\n<ul>\n<li>Given Image-text pairs.</li>\n<li>Employs a text encoder and an image encoder to extract image and text features.</li>\n<li>Learns the vision-language correlation with certain pre-training objectives.</li>\n<li>GAP: Global Average Pooling, a technique used to reduce the spatial dimensions of feature maps while retaining important information.</li>\n<li>ViT: Vision Transformer: Transformers for image recognition at scale.</li>\n<li>CNN Based: VGG, <strong>ResNet</strong>, EfficientNet<!-- -->\n<ul>\n<li>ResNet: Adopts skip connections between convolutional blocks which mitigates gradient vanishing and explosion and enables DNN training.</li>\n<li>ResNet-D: Replace global average pooling with transformer multi-head attention.</li>\n</ul>\n</li>\n<li>Transformer Based: ViT<!-- -->\n<ul>\n<li>Adding a normalization layer before the transformer encoder.</li>\n</ul>\n</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"vlm-pre-training-objectives\">VLM pre-training Objectives<a href=\"https://gracefullight.dev/en/2025/08/16/vision-language-models-for-vision-tasks-review/#vlm-pre-training-objectives\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"contrastive-objectives\">Contrastive Objectives<a href=\"https://gracefullight.dev/en/2025/08/16/vision-language-models-for-vision-tasks-review/#contrastive-objectives\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<ul>\n<li>Pros<!-- -->\n<ul>\n<li>Enforce positive pairs to have similar embeddings in contrast to negative pairs.</li>\n<li>Encourages VLMs to learn discriminative vision and language features, where more discriminative features lead to more confident and accurate zero-shot predictions.</li>\n</ul>\n</li>\n<li>Cons<!-- -->\n<ul>\n<li>Joint optimizing positive and negative pairs is complicated and challenging.</li>\n<li>Involves a heuristic temperature hyper-parameter for controlling the feature discriminability.</li>\n</ul>\n</li>\n</ul>\n<h4 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"image-contrastive-learning\">Image Contrastive Learning<a href=\"https://gracefullight.dev/en/2025/08/16/vision-language-models-for-vision-tasks-review/#image-contrastive-learning\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h4>\n<ul>\n<li>Forcing a query image to be close with its positive keys (its data augmentations)</li>\n<li>Faraway from its negative keys (other images)</li>\n<li><strong>Learn discriminative features</strong> in image modality, which often serves as an auxiliary objective for fully exploiting the image data potential.</li>\n</ul>\n<h4 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"image-text-contrastive-learning\">Image-Text Contrastive Learning<a href=\"https://gracefullight.dev/en/2025/08/16/vision-language-models-for-vision-tasks-review/#image-text-contrastive-learning\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h4>\n<ul>\n<li>Pulling the embeddings of paired images and texts close while pushing others away.</li>\n<li>Minimizing a symmetrical image-text infoNCE loss</li>\n<li><strong>Learn vision-language correlation</strong> by contrasting image-text pairs.<!-- -->\n<ul>\n<li>CLIP: A symmetrical image-text infoNCE loss</li>\n<li>ALIGN: scales up the VLM pre-training with large-scale (but noisy image-text pair with noise-robust contrastive learning)</li>\n<li>DeCLIP: Nearest-neighbor supervision to utilize the information from similar pairs, enabling effective pre-training on limited data.</li>\n<li>OTTER: Optimal transport to pseudo-pair images and texts reducing the required training data.</li>\n<li>ZeroVL: Limited data resource via debiased data sampling and data augmentation with coin flipping mixup.</li>\n<li>FILIP: Region-word alignment into contrastive learning, enabling to learn fine-grained vision-language corresponding knowledge.</li>\n<li>Pyramid-CLIP: Multiple semantic levels and performs both cross-level and peer-level contrastive learning for effective VLM pre-training.</li>\n<li>LA-CLIP, ALIP: LLM to augment synthetic captions for given images while RA-CLIP retrieves relevant image-text pairs for image-text pair augmentation.</li>\n</ul>\n</li>\n</ul>\n<p><img decoding=\"async\" loading=\"lazy\" alt=\"CLIP\" src=\"https://gracefullight.dev/en/assets/images/vlm-clip-002c83bc065d184a2350741cacc71908.png\" width=\"848\" height=\"528\" class=\"img_f7zd\"></p>\n<h4 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"image-text-label-contrastive-learning\">Image-Text-Label Contrastive Learning<a href=\"https://gracefullight.dev/en/2025/08/16/vision-language-models-for-vision-tasks-review/#image-text-label-contrastive-learning\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h4>\n<ul>\n<li>Supervised Contrastive Learning into image-text contrastive learning.</li>\n<li><strong>Learn discriminative and task-specific features</strong> by exploiting both supervised labels and unsupervised image-text pairs.<!-- -->\n<ul>\n<li>UniCL: pre-training allows learning both discriminative and task-specific (image classification) features simultaneously with around 900M image-text pairs.</li>\n</ul>\n</li>\n</ul>\n<p><img decoding=\"async\" loading=\"lazy\" alt=\"Image-Text-Label Contrastive Learning\" src=\"https://gracefullight.dev/en/assets/images/vlm-image-text-label-83c01a33a07520e54ac28a0ffbb1ceaa.png\" width=\"846\" height=\"558\" class=\"img_f7zd\"></p>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"generative-objectives\">Generative Objectives<a href=\"https://gracefullight.dev/en/2025/08/16/vision-language-models-for-vision-tasks-review/#generative-objectives\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<ul>\n<li>Encouraging VLMs to learn rich vision, language and vision-language contexts for better zero-shot predictions.</li>\n<li>Generally adopted as additional objectives above other VLM pre-training objectives for learning rich context information.</li>\n</ul>\n<h4 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"masked-image-modelling\">Masked Image Modelling<a href=\"https://gracefullight.dev/en/2025/08/16/vision-language-models-for-vision-tasks-review/#masked-image-modelling\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h4>\n<ul>\n<li>Cross-patch correlation by masking and reconstructing images.</li>\n<li><strong>Learn image context information by masking and reconstructing images</strong>\n<ul>\n<li>MAE, BeiT: certain patches in an image are masked and the encoder is trained to reconstruct them conditioned on unmasked patches.</li>\n</ul>\n</li>\n</ul>\n<p><img decoding=\"async\" loading=\"lazy\" alt=\"Masked Image Modelling\" src=\"https://gracefullight.dev/en/assets/images/vlm-masked-image-modelling-0b2757747dbb1e20d94920022ed416e1.png\" width=\"936\" height=\"424\" class=\"img_f7zd\"></p>\n<h4 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"masked-language-modelling\">Masked Language Modelling<a href=\"https://gracefullight.dev/en/2025/08/16/vision-language-models-for-vision-tasks-review/#masked-language-modelling\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h4>\n<ul>\n<li>Adopted pre-training objectives in NLP.</li>\n<li>Randomly masking a certain percentage of input tokens and predicting them. (15% in BERT)</li>\n<li><strong>Learn by masking a fraction of tokens</strong> in each input text and training networks to predict the masked tokens.<!-- -->\n<ul>\n<li>FLAVA: masks out 15% text tokens and reconstructs them from the rest tokens for modelling cross-word correlation.</li>\n<li>FIBER: adopts masked language modelling as one of the VLM pre-training objectives to extract better language features.</li>\n</ul>\n</li>\n</ul>\n<p><img decoding=\"async\" loading=\"lazy\" alt=\"Masked Language Modelling\" src=\"https://gracefullight.dev/en/assets/images/vlm-masked-language-modelling-4673252375ddfbf207081514c51e2eae.png\" width=\"868\" height=\"454\" class=\"img_f7zd\"></p>\n<h4 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"masked-cross-modal-modelling\">Masked Cross-Modal Modelling<a href=\"https://gracefullight.dev/en/2025/08/16/vision-language-models-for-vision-tasks-review/#masked-cross-modal-modelling\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h4>\n<ul>\n<li>Integrates masked image modelling and masked language modelling.</li>\n<li>Given an image-text pair, it randomly masks a subset of image patches and a subset of text tokens and then learns to reconstruct them.</li>\n<li><strong>Learn by masking a certain percentage of image patches and text tokens</strong> and training VLMs to reconstruct them based on the embeddings of unmasked image patches and text tokens.<!-- -->\n<ul>\n<li>FLAVA: 40% image patches and 15% text tokens as in, and employs a MLP to predict masked patched and tokens, capturing rich vision-language correspondence information.</li>\n</ul>\n</li>\n</ul>\n<h4 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"image-to-text-generation\">Image-to-Text Generation<a href=\"https://gracefullight.dev/en/2025/08/16/vision-language-models-for-vision-tasks-review/#image-to-text-generation\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h4>\n<ul>\n<li><strong>Generate descriptive texts for a given image</strong> for capturing fine-grained vision-language correlation by training VLMs to predict tokenized texts.<!-- -->\n<ul>\n<li>COCA, NLP, PaLI: train VLMs with the standard encoder-decoder architecture and image captioning objectives.</li>\n</ul>\n</li>\n</ul>\n<p><img decoding=\"async\" loading=\"lazy\" alt=\"Image to caption\" src=\"https://gracefullight.dev/en/assets/images/vlm-image-to-caption-4348d37878d43e85e49b73006131f2c2.png\" width=\"924\" height=\"712\" class=\"img_f7zd\"></p>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"alignment-objectives\">Alignment Objectives<a href=\"https://gracefullight.dev/en/2025/08/16/vision-language-models-for-vision-tasks-review/#alignment-objectives\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<blockquote>\n<p>Align image–text pairs in the embedding space.</p>\n</blockquote>\n<ul>\n<li>pros<!-- -->\n<ul>\n<li>simple, easy to optimize</li>\n<li>can be easily extended to model fine-grained vision-language correlation</li>\n</ul>\n</li>\n<li>cons<!-- -->\n<ul>\n<li>little correlation information within vision or language modality.</li>\n</ul>\n</li>\n<li>adopted as auxiliary losses to other VLM pre-training objectives for enhancing modelling the correlation across vision and language modalities.</li>\n</ul>\n<h4 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"image-text-matching\">Image-Text Matching<a href=\"https://gracefullight.dev/en/2025/08/16/vision-language-models-for-vision-tasks-review/#image-text-matching\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h4>\n<ul>\n<li>models the <strong>overall correlation</strong> between an entire image and an entire sentence. (전역적 상관관계)</li>\n<li>Image-text matching models global image-text correlation by directly aligning paired images and texts<!-- -->\n<ul>\n<li>FLAVA: matches the given image with its paired text via a classifier and a binary classification loss.</li>\n<li>FIBER: follows to mine hard negatives with pair-wise similarities for better alignment between image and text.</li>\n</ul>\n</li>\n</ul>\n<h4 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"region-word-matching\">Region-Word Matching<a href=\"https://gracefullight.dev/en/2025/08/16/vision-language-models-for-vision-tasks-review/#region-word-matching\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h4>\n<ul>\n<li>captures <strong>fine-grained correlations</strong> between image regions and specific words. (지역적 상관관계)</li>\n<li>models local fine-grained vision-language correlation by aligning paired image regions and word tokens.</li>\n<li>benefiting <strong>zero-shot dense predictions</strong> in object detection and semantic segmentation.<!-- -->\n<ul>\n<li>GLIP, FIBER, DetCLIP: replace object classification logits by region-word alignment scores.<!-- -->\n<ul>\n<li>the dot-product similarity between regional visual features and token-wise features.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><img decoding=\"async\" loading=\"lazy\" alt=\"Region-Word Matching, GLIP\" src=\"https://gracefullight.dev/en/assets/images/vlm-region-word-578b649828e666c5d4d0a9ca7af22e51.png\" width=\"942\" height=\"538\" class=\"img_f7zd\"></p>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"vlm-pre-training-frameworks\">VLM Pre-Training Frameworks<a href=\"https://gracefullight.dev/en/2025/08/16/vision-language-models-for-vision-tasks-review/#vlm-pre-training-frameworks\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<p><img decoding=\"async\" loading=\"lazy\" alt=\"VLM pre-training frameworks\" src=\"https://gracefullight.dev/en/assets/images/vlm-pretraining-frameworks-39991946607c915ff2a7126f16d59c30.png\" width=\"715\" height=\"273\" class=\"img_f7zd\"></p>\n<h2 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"evaluation\">Evaluation<a href=\"https://gracefullight.dev/en/2025/08/16/vision-language-models-for-vision-tasks-review/#evaluation\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"zero-shot-prediction\">Zero-shot Prediction<a href=\"https://gracefullight.dev/en/2025/08/16/vision-language-models-for-vision-tasks-review/#zero-shot-prediction\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<ul>\n<li>Image Classification: classify images into pre-defined categories like \"prompt engineering\".</li>\n<li>Semantic Segmentation: by comparing the embeddings of the given image pixels and texts.</li>\n<li>Object Detection: localize and classify objects in images with the object locating ability learned from auxiliary datasets.</li>\n<li>Image-Text Retrieval<!-- -->\n<ul>\n<li>Text-to-image retrieval that retrieves images based on texts</li>\n<li>Image-to-text retrieval that retrieves texts based on images.</li>\n</ul>\n</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"linear-probing\">Linear Probing<a href=\"https://gracefullight.dev/en/2025/08/16/vision-language-models-for-vision-tasks-review/#linear-probing\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<ul>\n<li>freezes the pre-trained VLM</li>\n<li>trains a linear classifier to classify the VLM-encoded embeddings to assess the VLM representations.</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"datasets\">Datasets<a href=\"https://gracefullight.dev/en/2025/08/16/vision-language-models-for-vision-tasks-review/#datasets\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<ul>\n<li>For Pre-training VLMs<!-- -->\n<ul>\n<li>CLIP, 2021, 400M, English</li>\n<li>ALIGN, 2021, 1.8B, English</li>\n<li>FILIP, 2021, 300M, English</li>\n<li>WebLi, 2022, 12B, 129 Languages</li>\n</ul>\n</li>\n<li>For VLM Evaluation<!-- -->\n<ul>\n<li>Image Classification<!-- -->\n<ul>\n<li>PSACAL VOC 2007 Classification, 11-point mAP</li>\n<li>Oxford-IIIT PETS, Mean Per Class</li>\n<li>EuroSAT, Accuracy</li>\n<li>Hateful Memes, ROC AUC</li>\n<li>Country211, Accuracy</li>\n</ul>\n</li>\n<li>Image-Text Retrieval<!-- -->\n<ul>\n<li>Flickr30k, Recall</li>\n<li>COCO Caption, Recall</li>\n</ul>\n</li>\n<li>Action Recognition<!-- -->\n<ul>\n<li>UCF101, Accuracy</li>\n<li>Kinetics700, Mean(top1, top5)</li>\n<li>RareAct, mWAP, mSAP</li>\n</ul>\n</li>\n<li>Object Detection<!-- -->\n<ul>\n<li>COCO 2017 Detection, box mAP</li>\n<li>LVIS, box mAP</li>\n<li>ODinW, box mAP</li>\n</ul>\n</li>\n<li>Semantic Segmentation<!-- -->\n<ul>\n<li>Cityscapes, Mean IoU</li>\n<li>ADE20K, Mean IoU</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"vlm-transfer-learning\">VLM Transfer learning<a href=\"https://gracefullight.dev/en/2025/08/16/vision-language-models-for-vision-tasks-review/#vlm-transfer-learning\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<blockquote>\n<p>which adapts VLMs to fit downstream tasks via prompt tuning, feature adapter.</p>\n</blockquote>\n<ul>\n<li>image and text distributions gap: downstream dataset may have task-specific image styles and text formats</li>\n<li>training objectives gap: VLMs are generally trained with task-agnostic objectives, while downstream tasks often involve task-specific objectives. (coarse or fine-grained classification, region or pixel-level recognition)</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"transfer-via-prompt-tuning\">Transfer via Prompt Tuning<a href=\"https://gracefullight.dev/en/2025/08/16/vision-language-models-for-vision-tasks-review/#transfer-via-prompt-tuning\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<blockquote>\n<p>Inspired by the \"prompt learning\" in NLP</p>\n</blockquote>\n<ul>\n<li>pros<!-- -->\n<ul>\n<li>simple, easy-to-implement</li>\n<li>requires little extra network layer or complex network modifications</li>\n<li>adapting VLMs in a black-box manner, which has clear advantages in transferring VLMs that involve concerns in intellectual property.</li>\n</ul>\n</li>\n<li>cons<!-- -->\n<ul>\n<li>low flexibility by following the manifold (잠재 공간) of the original VLMs in prompting.</li>\n</ul>\n</li>\n</ul>\n<h4 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"transfer-with-text-prompt-tuning\">Transfer with Text Prompt Tuning<a href=\"https://gracefullight.dev/en/2025/08/16/vision-language-models-for-vision-tasks-review/#transfer-with-text-prompt-tuning\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h4>\n<ul>\n<li>Exploring more effective and efficient learnable text prompts with several labelled downstream samples for each class.<!-- -->\n<ul>\n<li><strong>supervised and few-shot supervised</strong>\n<ul>\n<li>CoOp: Exploring context optimization to learn context words for a single class name with learnable word vectors.</li>\n<li>CoCoOp: Exploring conditional context optimization that generates a specific prompt for each image.</li>\n<li>SubPT: designs subspace prompt tuning to improve the generalization of learned prompts.</li>\n<li>LASP: regularizes learnable prompts with hand-engineered prompts.</li>\n<li>VPT: models text prompts with instance-specific distribution with better generalization on downstream tasks.</li>\n<li>KgCoOp: enhances the generalization of unseen class by mitigating the forgetting of textual knowledge.</li>\n<li>SoftCPT: fine-tunes VLMs on multiple few-shot tasks simultaneously for benefiting from multi-task learning.</li>\n<li>PLOT: employs optimal transport to learn multiple prompts to describe the diverse characteristics of a category.</li>\n<li>DualCoOp, TaI-DP: transport VLMs to multi-label classification tasks.<!-- -->\n<ul>\n<li>DualCoOp: adopts both positive and negative prompts for multi-label classification</li>\n<li>TaI-DP: double-grained prompt tuning for capturing both coarse-grained and fine-grained embeddings.</li>\n</ul>\n</li>\n<li>DenseCLIP: explores language-guided fine-tuning that employs visual features to tune text prompts for dense prediction.</li>\n<li>ProTeCt: improves the consistency of model predictions for hierarchical classification task.</li>\n</ul>\n</li>\n<li><strong>unsupervised</strong>\n<ul>\n<li>UPL: optimizes learnable prompts with self-training on selected pseudo-labeled samples.</li>\n<li>TPT: explores test-time prompt tuning to learn adaptive prompts from a single downstream sample.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><img decoding=\"async\" loading=\"lazy\" alt=\"Text Prompt Tuning\" src=\"https://gracefullight.dev/en/assets/images/vlm-text-prompt-tuning-90bb346d2a9f42bf7769b169254da344.png\" width=\"600\" height=\"476\" class=\"img_f7zd\"></p>\n<ul>\n<li><code>V</code> is learnable word vectors that are optimized by minimizing the classification loss with the downstream samples.</li>\n</ul>\n<h4 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"transfer-with-visual-prompt-tuning\">Transfer with Visual Prompt Tuning<a href=\"https://gracefullight.dev/en/2025/08/16/vision-language-models-for-vision-tasks-review/#transfer-with-visual-prompt-tuning\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h4>\n<ul>\n<li>Transfers VLMs by modulating the input of image encoder.<!-- -->\n<ul>\n<li>VP: adopts learnable image perturbations <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>v</mi></mrow><annotation encoding=\"application/x-tex\">v</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em\">v</span></span></span></span> to modify the input image <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>x</mi><mi>I</mi></msup></mrow><annotation encoding=\"application/x-tex\">x^I</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8413em\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413em\"><span style=\"top:-3.063em;margin-right:0.05em\"><span class=\"pstrut\" style=\"height:2.7em\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em\">I</span></span></span></span></span></span></span></span></span></span></span> by <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>x</mi><mi>I</mi></msup><mo>+</mo><mi>v</mi></mrow><annotation encoding=\"application/x-tex\">x^I + v</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9247em;vertical-align:-0.0833em\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413em\"><span style=\"top:-3.063em;margin-right:0.05em\"><span class=\"pstrut\" style=\"height:2.7em\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em\">I</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em\">v</span></span></span></span>, aiming to adjust <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>v</mi></mrow><annotation encoding=\"application/x-tex\">v</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em\">v</span></span></span></span> to minimize a recognition loss.</li>\n<li>RePrompt: integrates retrieval mechanisms into visual prompt tuning, allowing leveraging the knowledge from downstream tasks.</li>\n</ul>\n</li>\n<li>enables pixel-level adaptation to downstream tasks, benefiting them greatly especially for dense prediction tasks.</li>\n</ul>\n<p><img decoding=\"async\" loading=\"lazy\" alt=\"Visual Prompt Tuning\" src=\"https://gracefullight.dev/en/assets/images/vlm-visual-prompt-tuning-36a78e501672cf89040235b31cd0c448.png\" width=\"632\" height=\"478\" class=\"img_f7zd\"></p>\n<h4 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"transfer-with-text-visual-prompt-tuning\">Transfer with Text-Visual Prompt Tuning<a href=\"https://gracefullight.dev/en/2025/08/16/vision-language-models-for-vision-tasks-review/#transfer-with-text-visual-prompt-tuning\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h4>\n<ul>\n<li>modulate the text and image inputs simultaneously, benefiting from joint prompt optimization on multiple modalities.<!-- -->\n<ul>\n<li>UPT: unifies prompt tuning to jointly optimize text and image prompts, demonstrating the complementary nature of the two prompt tuning tasks.</li>\n<li>MVLPT: explores multi-task vision-language prompt tuning to incorporate cross-task knowledge into text and image prompt tuning.</li>\n<li>MAPLE: conducts multi-modal prompt tuning by aligning visual prompts with their corresponding language prompts, enabling a mutual promotion between text prompts and image prompts.</li>\n<li>CAVPT: introduces a cross attention between class-aware visual prompts and text prompts, encouraging the visual prompts to concentrate more on visual concepts.</li>\n</ul>\n</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"transfer-via-feature-adaptation\">Transfer via Feature Adaptation<a href=\"https://gracefullight.dev/en/2025/08/16/vision-language-models-for-vision-tasks-review/#transfer-via-feature-adaptation\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<ul>\n<li>adapt image or text features with an additional light-weight feature adapter<!-- -->\n<ul>\n<li>Clip-Adapter: inserts several trainable linear layers after CLIP's language and image encoders and optimized them while keeping CLIP architecture and parameters frozen.</li>\n<li>Tip-adapter: a training-free adapter that directly employs the embeddings of few-shot labelled images as the adapter weights.</li>\n<li>SVL-Adapter: a self-supervised adapter which employs an additional encoder for self-supervised learning on input images.</li>\n</ul>\n</li>\n<li>flexible and effective as its architecture and the insertion manner allow tailoring flexibly for different and complex downstream tasks.</li>\n<li>requires modifying network architecture and thus can not handle VLMs that have concerns in intellectual property.</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"other-transfer-methods\">Other Transfer Methods<a href=\"https://gracefullight.dev/en/2025/08/16/vision-language-models-for-vision-tasks-review/#other-transfer-methods\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<ul>\n<li>Direct fine-tuning, architecture modification, cross attention<!-- -->\n<ul>\n<li>Wise-FT: combines the weights of a fine-tuned VLM and the original VLM for learning new information from downstream tasks.</li>\n<li>MaskCLIP: extracts dense image features by modifying the architecture of the CLIP image encoder.</li>\n<li>VT-CLIP: introduces visual-guided attention to semantically correlate text features with downstream images, leading to a better transfer performance.</li>\n<li>CALIP: introduces parameter-free attention for effective interaction and communication between visual-guided text features.</li>\n<li>TaskRes: directly tunes text-based classifier to exploit the old knowledge in the pre-trained VLM.</li>\n<li>CuPL, VCD: employ large language models like GPT-3 to augment text prompts for learning rich discriminative text information.</li>\n</ul>\n</li>\n</ul>\n<p><img decoding=\"async\" loading=\"lazy\" alt=\"Feature Adaptation\" src=\"https://gracefullight.dev/en/assets/images/vlm-feature-adaptation-de7cf8b41fcfa8659cc658c703b4dbc5.png\" width=\"876\" height=\"498\" class=\"img_f7zd\"></p>\n<h2 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"vlm-knowledge-distillation\">VLM Knowledge Distillation<a href=\"https://gracefullight.dev/en/2025/08/16/vision-language-models-for-vision-tasks-review/#vlm-knowledge-distillation\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<ul>\n<li>distils general and robust VLM knowledge to task-specific models without the restriction of VLM architecture, benefiting task-specific designs while tackling various dense prediction tasks.</li>\n<li>most VLM knowledge distillation methods focus on transferring image-level knowledge to region- or pixel-level tasks such as object detection and semantic segmentation.</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"knowledge-distillation-for-object-detection\">Knowledge Distillation for Object Detection<a href=\"https://gracefullight.dev/en/2025/08/16/vision-language-models-for-vision-tasks-review/#knowledge-distillation-for-object-detection\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<ul>\n<li>To distill VLM knowledge to enlarge the detector vocabulary</li>\n<li>To better align image-level and object-level representations<!-- -->\n<ul>\n<li>ViLD: distills VLM knowledge to a two-stage detector whose embedding space is enforced to be consistent with that of CLIP image encoder.</li>\n<li>HierKD: hierarchical global-local knowledge distillation.</li>\n<li>RKD: region-based knowledge distillation for better aligning region-level and image-level embeddings.</li>\n<li>ZSD-YOLO: self-labeling data augmentation for exploiting CLIP for better object detection.</li>\n<li>OADP: proposal features while transferring contextual knowledge.</li>\n<li>BARON: uses neighborhood sampling to distill a bag of regions instead of individual regions.</li>\n<li>RO-ViT: distills information from VLMs for open-vocabulary detection.</li>\n</ul>\n</li>\n<li>VLM distillation via prompt learning<!-- -->\n<ul>\n<li>DetPro: a detection prompt technique for learning continuous prompt representations for open-vocabulary object detection.</li>\n<li>PrompDet: regional prompt learning for aligning word embeddings with regional image embeddings.</li>\n<li>PB-OVD: trains object detectors with VLM-predicted pseudo bounding boxes.</li>\n<li>XPM: a robust cross-modal pseudo-labeling strategy that employs VLM-generated pseudo masks for open-vocabulary instance segmentation.</li>\n<li>P3OVD: prompt-driven self-training that refines the VLM-generated pseudo labels with fine-grained prompt tuning.</li>\n</ul>\n</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"knowledge-distillation-for-semantic-segmentation\">Knowledge Distillation for Semantic Segmentation<a href=\"https://gracefullight.dev/en/2025/08/16/vision-language-models-for-vision-tasks-review/#knowledge-distillation-for-semantic-segmentation\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<ul>\n<li>Leverage VLMs to enlarge the vocabulary of segmentation models, aim to segment pixels described by arbitrary texts. (i.e., any categories of pixels beyond base classes)</li>\n<li>Tackling the mismatch between image-level and pixel-level representations.<!-- -->\n<ul>\n<li>CLIPSeg: a lightweight transformer decoder to extend CLIP for semantic segmentation.</li>\n<li>LSeg: maximizes the correlation between CLIP text embeddings and pixel-wise image embedding encoded by segmentation models.</li>\n<li>ZegCLIP: employs CLIP to generate semantic masks and introduces a relationship descriptor to mitigate overfitting on base classes.</li>\n<li>MaskCLIP+, SSIW: distill knowledge with VLM-predicted pixel-level pseudo labels.</li>\n<li>FreeSeg: generates mask proposals first and then performs zero-shot classification for them.</li>\n</ul>\n</li>\n</ul>\n<h4 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"knowledge-distillation-for-weakly-supervised-semantic-segmentation\">Knowledge distillation for weakly-supervised semantic segmentation<a href=\"https://gracefullight.dev/en/2025/08/16/vision-language-models-for-vision-tasks-review/#knowledge-distillation-for-weakly-supervised-semantic-segmentation\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h4>\n<ul>\n<li>Leverage both VLMs and weak supervision (e.g., image-level labels) for semantic segmentation.</li>\n<li>CLIP-ES: employs CLIP to refine the class activation map by designing a softmax function and a class-aware attention-based affinity module for mitigating the category confusion issue.</li>\n<li>CLIMS: employs CLIP knowledge to generate high-quality class activation maps for better weakly-supervised semantic segmentation.</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"performance\">Performance<a href=\"https://gracefullight.dev/en/2025/08/16/vision-language-models-for-vision-tasks-review/#performance\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<ul>\n<li>VLM is largely attributed to three factors: Big data, Big Model, and Task-agnostic learning.</li>\n<li>Limitations<!-- -->\n<ul>\n<li>When data/model size keeps increasing, the performance saturates and further scaling up won’t improve performance</li>\n<li>Adopting large-scale data in VLM pre-training necessitates extensive computation resources</li>\n<li>Adopting large models introduces excessive computation and memory overheads in both training and inference</li>\n</ul>\n</li>\n<li>Transfer Learning<!-- -->\n<ul>\n<li>can mitigate the domain gaps by learning from task-specific data, being labelled or unlabelled.</li>\n<li>Supervised <code>&gt;</code> few-shot supervised <code>=</code> unsupervised transfer (overfitting but challenging)</li>\n</ul>\n</li>\n<li>Knowledge Distillation<!-- -->\n<ul>\n<li>brings clear performance improvement on detection and segmentation tasks</li>\n<li>introduces general and robust VLM knowledge while benefiting from task-specific designs</li>\n</ul>\n</li>\n<li>the development of VLM pre-training for dense visual recognition tasks (on region or pixel-level detection and segmentation) lag far behind.</li>\n<li>require certain norms in term of training data, networks and downstream tasks.<!-- -->\n<ul>\n<li>VLM transfer: release their codes and do not require intensive computation resources, easing reproduction and benchmarking.</li>\n<li>VLM pre-training: studied with different data and networks, making benchmarking a very challenging task. also use non-public training data, or require intensive computation resources.</li>\n<li>VLM knowledge distillation: adopt different task-specific backbones, which complicates benchmarking.</li>\n</ul>\n</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"challenges\">Challenges<a href=\"https://gracefullight.dev/en/2025/08/16/vision-language-models-for-vision-tasks-review/#challenges\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<ul>\n<li>VLM pre-training<!-- -->\n<ul>\n<li><strong>Fine-grained vision-language correlation modelling</strong>: can better recognize patches and pixels beyond images, greatly benefiting dense prediction tasks</li>\n<li><strong>Unification of vision and language learning</strong>: enables efficient communications across data modalities which can benefit both training effectiveness and training efficiency.</li>\n<li><strong>Pre-training VLMs with multiple languages</strong>: could introduce bias in term of cultures and regions and hinder VLM applications in other language areas.</li>\n<li><strong>Data-efficient VLMs</strong>: instead of merely learning from each image-text pair, more useful information could be learned with the supervision among image-text pairs.</li>\n<li><strong>Pre-training VLMs with LLMs</strong>: employ LLMs to augment the texts in the raw image-text pairs, which provides richer language knowledge and helps better learn vision-language correlation.</li>\n</ul>\n</li>\n<li>VLM Transfer Learning<!-- -->\n<ul>\n<li><strong>Unsupervised VLM transfer</strong>: much lower risk of overfitting than few-shot supervised transfer.</li>\n<li><strong>VLM transfer with visual prompt/adapter</strong>: Existing studies focus on text prompt learning. Visual prompt learning or visual adapter, which is complementary to text prompting and can enable pixel-level adaptation in various dense prediction tasks.</li>\n<li><strong>Test-time VLM transfer</strong>: Existing studies conduct transfer by fine-tuning VLMs on each downstream task (i.e., prompt learning), leading to repetitive efforts while facing many downstream tasks. Adapting prompts on the fly during inference can circumvent the repetitive training in existing VLM transfer.</li>\n<li><strong>VLM transfer with LLMs</strong>: Different from prompt engineering and prompt learning, exploit LLMs to generate text prompts that better describe downstream tasks. This approach is automatic and requires little labelled data.</li>\n</ul>\n</li>\n<li>VLM knowledge distillation<!-- -->\n<ul>\n<li><strong>Knowledge distillation from multiple VLMs</strong>: harvest their synergistic effect by coordinating knowledge distillation from multiple VLMs.</li>\n<li><strong>Knowledge distillation for other visual recognition tasks</strong>: leverage the knowledge distilled from VLMs to improve performance on other visual recognition tasks. (instance segmentation, panoptic segmentation, person reidentification)</li>\n</ul>\n</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"ref\">Ref<a href=\"https://gracefullight.dev/en/2025/08/16/vision-language-models-for-vision-tasks-review/#ref\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<ul>\n<li>Zhang, J., Huang, J., Jin, S., &amp; Lu, S. (2024). Vision-Language Models for Vision Tasks: A Survey. IEEE Transactions on Pattern Analysis and Machine Intelligence, 46(8), 5625–5644. <code>&lt;https://doi.org/10.1109/TPAMI.2024.3369699&gt;</code></li>\n</ul>",
            "url": "https://gracefullight.dev/en/2025/08/16/vision-language-models-for-vision-tasks-review/",
            "title": "Vision-language models for vision tasks review",
            "summary": "Vision-language models for vision tasks review",
            "date_modified": "2025-08-16T07:40:55.588Z",
            "author": {
                "name": "Gracefullight",
                "url": "https://github.com/gracefullight"
            },
            "tags": [
                "vlm"
            ]
        },
        {
            "id": "https://gracefullight.dev/en/2025/08/16/introduction-to-ai-003/",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"local-search-problem\">Local Search Problem<a href=\"https://gracefullight.dev/en/2025/08/16/introduction-to-ai-003/#local-search-problem\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<blockquote>\n<p>To find the state that gives the <strong>optimal/best value</strong> of the <strong>evaluation function</strong></p>\n</blockquote>\n<ul>\n<li>It can be seen as an optimization problem.</li>\n<li>a computational problem that finds the best solution (a state) that satisfies the given constraints</li>\n<li><code>evaluation function === objective function</code></li>\n<li>Only cares about the optimal solution/best state without considering the paths to reach the best state (the optimal solution)</li>\n<li>Not systematic</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"feasible-region--solution\">Feasible region &amp; solution<a href=\"https://gracefullight.dev/en/2025/08/16/introduction-to-ai-003/#feasible-region--solution\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<ul>\n<li><strong>Feasible region</strong>: the set of all possible or candidate solutions which are the solutions that satisfies the problem's constraints</li>\n<li><strong>Feasible solution</strong>: a solution in the feasible region</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"search-problem-vs-local-search-problem\">Search Problem vs Local Search Problem<a href=\"https://gracefullight.dev/en/2025/08/16/introduction-to-ai-003/#search-problem-vs-local-search-problem\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<blockquote>\n<p>Path-based vs State-based</p>\n</blockquote>\n<table><thead><tr><th>Aspects</th><th>Search Problem</th><th>Local Search Problem</th></tr></thead><tbody><tr><td>State</td><td>All possible states - state-space landscape</td><td>Range of decision variables and constraints</td></tr><tr><td>Goal</td><td>Goal state &amp; goal test</td><td>Evaluation function &amp; objective function</td></tr><tr><td>Evaluation</td><td>Measure closeness to goal - distance/fitness</td><td>Minimize cost or maximize fitness</td></tr><tr><td>Transition/Successor</td><td>Transition function</td><td>Successor function</td></tr></tbody></table>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"discrete--continuous-optimization\">Discrete &amp; Continuous Optimization<a href=\"https://gracefullight.dev/en/2025/08/16/introduction-to-ai-003/#discrete--continuous-optimization\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<ul>\n<li><strong>Discrete optimization</strong>: optimization problems where the solution space is discrete (e.g., 8 queens problem)</li>\n<li><strong>Continuous optimization</strong>: optimization problems where the solution space is continuous (e.g., real numbers, any value within a range)</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"information-needed-for-local-search\">Information needed for Local Search<a href=\"https://gracefullight.dev/en/2025/08/16/introduction-to-ai-003/#information-needed-for-local-search\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<ul>\n<li><strong>All possible states</strong>: state-space landscape</li>\n<li><strong>Transition function</strong>: To find neighbor or successor state</li>\n<li><strong>Goal state</strong></li>\n<li><strong>Objective function</strong>: A way to measure how close to the goal state</li>\n<li><strong>Start state</strong></li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"search-state-space\">Search state-space<a href=\"https://gracefullight.dev/en/2025/08/16/introduction-to-ai-003/#search-state-space\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<ul>\n<li><strong>Global Maximum</strong>: A state that maximizes the objective function over the entire state space</li>\n<li><strong>Local Maximum</strong>: A state that maximizes the objective function within a small area around it.</li>\n<li><strong>Plateau</strong>: A state such that the objective function is constant in an area around it.<!-- -->\n<ul>\n<li><strong>Shoulder</strong>: A plateau that has uphill edge.</li>\n<li><strong>Flat</strong>: A plateau whose edges go downhill.</li>\n</ul>\n</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"advantages\">Advantages<a href=\"https://gracefullight.dev/en/2025/08/16/introduction-to-ai-003/#advantages\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<ul>\n<li>use little memory</li>\n<li>can often find reasonably good solution in large or infinite search spaces</li>\n<li>useful for solving pure optimization problems</li>\n<li>don't need to know the path to the solution.</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"hill-climbing\">Hill climbing<a href=\"https://gracefullight.dev/en/2025/08/16/introduction-to-ai-003/#hill-climbing\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<blockquote>\n<p>keeps track of one current state and on each iteration moves to the neighboring state with highest value.</p>\n</blockquote>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy=\"false\">(</mo><mo>−</mo><mi>c</mi><mi>o</mi><mi>s</mi><mi>t</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f = max(-cost(X))</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em\">f</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em\"></span><span class=\"mord mathnormal\">ma</span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mord mathnormal\">cos</span><span class=\"mord mathnormal\">t</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em\">X</span><span class=\"mclose\">))</span></span></span></span></li>\n<li>Steps<!-- -->\n<ul>\n<li>Evaluate the initial stat</li>\n<li>If it is equal to the goal state, return. Otherwise, continue.</li>\n<li>Find a neighboring state</li>\n<li>Evaluate this state. If it is closer to the goal state than before, replace the initial state with this state.</li>\n<li>Repeat steps 2-4 until it reaches a goal state (local or global maximum) or runs out of time.</li>\n</ul>\n</li>\n<li>No search tree, No backtracking, Don't look ahead beyond the current state.<!-- -->\n<ul>\n<li>get stuck due to local maxima, plateaus, or ridges.</li>\n</ul>\n</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"variations-of-hc\">Variations of HC<a href=\"https://gracefullight.dev/en/2025/08/16/introduction-to-ai-003/#variations-of-hc\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<ul>\n<li><strong>Simple HC</strong>: greedy local search which expands the current state and moves on to the best neighbor.</li>\n<li><strong>Stochastic HC</strong>: choose randomly among the neighbors going uphill.</li>\n<li><strong>First-choice HC</strong>: generate random successor until one is better. Good for states with high numbers of successors.</li>\n<li><strong>Random restart</strong>: conducts a series of hill climbing searches from random initial states until a goal state is found.</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"simulated-annealing\">Simulated Annealing<a href=\"https://gracefullight.dev/en/2025/08/16/introduction-to-ai-003/#simulated-annealing\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<blockquote>\n<p>based upon the annealing process to model the search process for finding an optimal solution to an optimisation problem</p>\n</blockquote>\n<ul>\n<li><strong>annealing schedule</strong>, <strong>temperature</strong>, <strong>energy</strong></li>\n<li>finds the <strong>minimal value</strong> of the objective function (energy function)</li>\n<li>starts with a high temperature and then gradually reduces the temperature</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo>=</mo><msup><mi>e</mi><mrow><mo>−</mo><mi mathvariant=\"normal\">Δ</mi><mi>E</mi><mi mathvariant=\"normal\">/</mi><mi>k</mi><mi>T</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\">P = e^{-\\Delta E / kT}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em\">P</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.888em\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em\"><span style=\"top:-3.063em;margin-right:0.05em\"><span class=\"pstrut\" style=\"height:2.7em\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">Δ</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em\">E</span><span class=\"mord mtight\">/</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em\">k</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em\">T</span></span></span></span></span></span></span></span></span></span></span></span>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Δ</mi><mi>E</mi></mrow><annotation encoding=\"application/x-tex\">\\Delta E</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em\"></span><span class=\"mord\">Δ</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em\">E</span></span></span></span>: how bad the new state is compared to the old state</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em\">T</span></span></span></span>: temperature is getting lower over time</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em\">k</span></span></span></span>: a scaling factor</li>\n</ul>\n</li>\n<li>Swap condition: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Δ</mi><mi>E</mi><mo>&lt;</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">\\Delta E &lt;= 0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7224em;vertical-align:-0.0391em\"></span><span class=\"mord\">Δ</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em\">E</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span><span class=\"mrel\">&lt;=</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em\"></span><span class=\"mord\">0</span></span></span></span> or <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mo>−</mo><mi mathvariant=\"normal\">Δ</mi><mi>E</mi><mi mathvariant=\"normal\">/</mi><mi>k</mi><mi>T</mi></mrow><mo>&gt;</mo><mtext>random</mtext></mrow><annotation encoding=\"application/x-tex\">{-\\Delta E / kT} &gt; \\text{random}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">Δ</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em\">E</span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em\">k</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em\">T</span></span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em\"></span><span class=\"mord text\"><span class=\"mord\">random</span></span></span></span></span></li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"evolutionary-algorithms\">Evolutionary algorithms<a href=\"https://gracefullight.dev/en/2025/08/16/introduction-to-ai-003/#evolutionary-algorithms\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<ul>\n<li>Local beam search</li>\n<li>Stochastic beam search</li>\n<li><strong>Genetic algorithms</strong></li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"characteristics\">Characteristics<a href=\"https://gracefullight.dev/en/2025/08/16/introduction-to-ai-003/#characteristics\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<ul>\n<li>size of the population</li>\n<li>representation of each individual</li>\n<li>mixing number</li>\n<li>selection process for selecting the individuals who will become the parents of the next generation</li>\n<li>recombination procedure</li>\n<li>mutation rate</li>\n<li>makeup of the next generation</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"genetic-algorithm\">Genetic algorithm<a href=\"https://gracefullight.dev/en/2025/08/16/introduction-to-ai-003/#genetic-algorithm\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<blockquote>\n<p>It uses operators, such reproduction, crossover and mutation, inspired by the natural evolutionary principles.</p>\n</blockquote>\n<ul>\n<li><strong>State</strong>: is represented by an individual in a population. Traditional representation is a chromosome</li>\n<li><strong>Objective function</strong>: is used to evaluate the fitness of an individual (= fitness function, 적합도 함수)</li>\n<li><strong>Successor function</strong>: consists of three operators: reproduction, crossover, and mutation</li>\n<li><strong>Solution</strong>: is found through evolution from one generation to another generation</li>\n</ul>\n<!-- -->\n<p><img decoding=\"async\" loading=\"lazy\" alt=\"Genetic Algorithm\" src=\"https://gracefullight.dev/en/assets/images/genetic-algorithm-db5ac52fb262d55d999eff1f47439e1b.png\" width=\"1730\" height=\"430\" class=\"img_f7zd\"></p>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"roulette-wheel-selection\">Roulette Wheel Selection<a href=\"https://gracefullight.dev/en/2025/08/16/introduction-to-ai-003/#roulette-wheel-selection\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<ul>\n<li><strong>Compute total fitness</strong> of all individuals.<!-- -->\n<ul>\n<li>Example: A=30, B=20, C=40, D=10 → Total = 100.</li>\n</ul>\n</li>\n<li><strong>Calculate probability</strong> of each individual being selected<!-- -->\n<ul>\n<li>Formula: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mrow><mi>f</mi><mi>i</mi><mi>t</mi><mi>n</mi><mi>e</mi><mi>s</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi>t</mi><mi>o</mi><mi>t</mi><mi>a</mi><mi>l</mi><mi mathvariant=\"normal\">_</mi><mi>f</mi><mi>i</mi><mi>t</mi><mi>n</mi><mi>e</mi><mi>s</mi><mi>s</mi></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">P(i) = \\frac{fitness(i)}{total\\_fitness}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em\">P</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.572em;vertical-align:-0.562em\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01em\"><span style=\"top:-2.655em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mord mathnormal mtight\">o</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mord mathnormal mtight\">a</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em\">l</span><span class=\"mord mtight\" style=\"margin-right:0.02778em\">_</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em\">f</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mord mathnormal mtight\">ess</span></span></span></span><span style=\"top:-3.23em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em\"></span></span><span style=\"top:-3.485em\"><span class=\"pstrut\" style=\"height:3em\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em\">f</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mord mathnormal mtight\">ess</span><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.562em\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span>\n<ul>\n<li>A = 30/100 = 0.30</li>\n<li>B = 20/100 = 0.20</li>\n<li>C = 40/100 = 0.40</li>\n<li>D = 10/100 = 0.10</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>Convert to cumulative probabilities</strong>\n<ul>\n<li>P4 = 0.10</li>\n<li>P4 + P3 = 0.50</li>\n<li>P4 + P3 + P2 = 0.90</li>\n<li>P4 + P3 + P2 + P1 = 1.00</li>\n</ul>\n</li>\n<li><strong>Generate a random number</strong> between 0 and 1.</li>\n<li>Select an individual based on the random number and cumulative probabilities.</li>\n</ul>\n<p><img decoding=\"async\" loading=\"lazy\" alt=\"Roulette Wheel Selection\" src=\"https://gracefullight.dev/en/assets/images/roulette-wheel-selection-d6c6fabff2f28f3ba08382b9a4727c13.png\" width=\"1333\" height=\"570\" class=\"img_f7zd\"></p>\n<ul>\n<li>⚫ random = 0.07 → falls in P4 (0–0.10)</li>\n<li>🔺 random = 0.37 → falls in P3 (0.10–0.50)</li>\n<li>⬟ random = 0.82 → falls in P2 (0.50–0.90)</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"applications-of-ga\">Applications of GA<a href=\"https://gracefullight.dev/en/2025/08/16/introduction-to-ai-003/#applications-of-ga\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<ul>\n<li><strong>Parameter tuning</strong>: optimize the parameters in NN</li>\n<li><strong>Planning</strong>: economic dispatch, train timetabling</li>\n<li><strong>Design &amp; Control problems</strong>: robotic control, adaptive control systems</li>\n<li>Successful use of GA requires careful engineering of the <strong>representation</strong></li>\n</ul>",
            "url": "https://gracefullight.dev/en/2025/08/16/introduction-to-ai-003/",
            "title": "Introduction to AI @003",
            "summary": "Introduction to AI @003",
            "date_modified": "2025-08-15T23:13:08.242Z",
            "author": {
                "name": "Gracefullight",
                "url": "https://github.com/gracefullight"
            },
            "tags": [
                "iai"
            ]
        },
        {
            "id": "https://gracefullight.dev/en/2025/08/14/fundamentals-of-data-analytics-003/",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"crisp-dm\">CRISP-DM<a href=\"https://gracefullight.dev/en/2025/08/14/fundamentals-of-data-analytics-003/#crisp-dm\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<blockquote>\n<p>CRISP-DM (Cross-Industry Standard Process for Data Mining)</p>\n</blockquote>\n<ol>\n<li>Business understanding</li>\n<li>Data understanding</li>\n<li>Data preparation</li>\n<li>Modeling</li>\n<li>Evaluation</li>\n</ol>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"business-understanding\">Business understanding<a href=\"https://gracefullight.dev/en/2025/08/14/fundamentals-of-data-analytics-003/#business-understanding\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<ul>\n<li>Determine business objectives</li>\n<li>Assess situation</li>\n<li>Determine data mining goals</li>\n<li>Produce project plan</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"data-understanding\">Data understanding<a href=\"https://gracefullight.dev/en/2025/08/14/fundamentals-of-data-analytics-003/#data-understanding\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<ul>\n<li>Collect initial data</li>\n<li>Describe data</li>\n<li>Explore data</li>\n<li>Verify data quality</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"data-preperation\">Data preperation<a href=\"https://gracefullight.dev/en/2025/08/14/fundamentals-of-data-analytics-003/#data-preperation\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<ul>\n<li>Select data</li>\n<li>Clean data</li>\n<li>Consturct data</li>\n<li>Integrate data</li>\n<li>Format data</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"modeling\">Modeling<a href=\"https://gracefullight.dev/en/2025/08/14/fundamentals-of-data-analytics-003/#modeling\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<ul>\n<li>Select modeling technique</li>\n<li>Generate test design</li>\n<li>Build model</li>\n<li>Assess model</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"evaluation\">Evaluation<a href=\"https://gracefullight.dev/en/2025/08/14/fundamentals-of-data-analytics-003/#evaluation\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<ul>\n<li>Evaludate results</li>\n<li>Review process</li>\n<li>Determine next steps</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"deployment\">Deployment<a href=\"https://gracefullight.dev/en/2025/08/14/fundamentals-of-data-analytics-003/#deployment\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<ul>\n<li>Plan development</li>\n<li>Plan monitoring &amp; maintenance</li>\n<li>Produce final report</li>\n<li>Review project</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"instance--attributes\">Instance &amp; Attributes<a href=\"https://gracefullight.dev/en/2025/08/14/fundamentals-of-data-analytics-003/#instance--attributes\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<ul>\n<li>Instance: the terms associated with specific objects. Instances are described by a set of values for the features.</li>\n<li>Attributes: the collection of features of the object that are maintained in a dataset.</li>\n<li>Object: a collection of features about which measurements can be taken.<!-- -->\n<ul>\n<li>Car: fuel consumption, cylinders, horsepower...</li>\n</ul>\n</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"qualitative--quantitative-data\">Qualitative &amp; Quantitative data<a href=\"https://gracefullight.dev/en/2025/08/14/fundamentals-of-data-analytics-003/#qualitative--quantitative-data\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<ul>\n<li>Qualitative data: <strong>less structured</strong>, <strong>non-statistical</strong>, <strong>measured using other descriptors and identifiers</strong>\n<ul>\n<li>white, heavy, wild...</li>\n</ul>\n</li>\n<li>Quantitative data: <strong>statistical</strong>, <strong>measured using hard numbers.</strong>\n<ul>\n<li>130cm, 400kg, 4 legs...</li>\n</ul>\n</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"discrete--continuous-quantitative-data\">Discrete &amp; Continuous (Quantitative) data<a href=\"https://gracefullight.dev/en/2025/08/14/fundamentals-of-data-analytics-003/#discrete--continuous-quantitative-data\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<!-- -->\n<ul>\n<li>Discrete data: <strong>fixed, round numbers</strong>, <strong>countable</strong>\n<ul>\n<li>number of legs, count of aeroplane depatures, number of times a person commutes for a job in a week</li>\n</ul>\n</li>\n<li>Continuous data: <strong>measured over time intervals</strong>\n<ul>\n<li>weight, solar irradiation, temperature of a room</li>\n</ul>\n</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"summary\">Summary<a href=\"https://gracefullight.dev/en/2025/08/14/fundamentals-of-data-analytics-003/#summary\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<table><thead><tr><th>Qualitative</th><th>Quantitiative (discrete)</th><th>Quantitiative (continuous)</th></tr></thead><tbody><tr><td>Title</td><td>Duration</td><td>Rating</td></tr><tr><td>Production Country</td><td>Release Year</td><td></td></tr><tr><td>Director</td><td></td><td></td></tr><tr><td>Genres</td><td></td><td></td></tr><tr><td>Description</td><td></td><td></td></tr></tbody></table>\n<h2 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"categorizing-attributees\">Categorizing attributees<a href=\"https://gracefullight.dev/en/2025/08/14/fundamentals-of-data-analytics-003/#categorizing-attributees\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<table><thead><tr><th>항목</th><th><strong>Nominal (categorical)</strong></th><th><strong>Ordinal</strong></th><th><strong>Interval</strong></th><th><strong>Ratio</strong></th></tr></thead><tbody><tr><td><strong>정의</strong></td><td>값이 라벨·이름 역할만 함. 순서 없음.</td><td>값 사이에 순서 있음. 간격은 정의되지 않음.</td><td>순서 + 고정·동일한 단위(간격). 절대 0 없음.</td><td>Interval 속성 + 절대적 0 있음. 차이와 비율 모두 의미 있음.</td></tr><tr><td><strong>예시</strong></td><td>머리카락 색 <code>{blonde, brown, ginger}</code><br>우편번호<br>산업코드, 연구분야 코드<br>Blood type, License number</td><td>키: <code>tall &gt; average &gt; short</code><br>체중: <code>light &lt; average &lt; heavy</code><br>Star ratings, Tshirt sizes</td><td>키(cm), 몸무게(kg) (원문 기준)<br>12시간제 시각(차이 비교)<br>시간 간격(5분~10분)<br>Waist size, Time</td><td>나이(년)<br>소득(천 달러)<br>켈빈 온도<br>금액, 개수, 질량, 길이, 전류<br>Body weight, Medicine dosage</td></tr><tr><td><strong>예시</strong></td><td>머리카락 색 <code>{blonde, brown, ginger}</code>, 우편번호, 산업코드/연구분야 코드, Blood type, License number</td><td>키: <code>tall &gt; average &gt; short</code>, 체중: <code>light &lt; average &lt; heavy</code>, Star ratings, Tshirt sizes</td><td>키(cm), 몸무게(kg) (원문 기준), 12시간제 시각(차이 비교), 시간 간격(5분~10분), Waist size, Time</td><td>나이(년), 소득(천 달러), 켈빈 온도, 금액, 개수, 질량, 길이, 전류, Body weight, Medicine dosage</td></tr><tr><td><strong>허용 비교</strong></td><td><code>=, ≠</code></td><td><code>=, ≠, &lt;, &gt;</code></td><td><code>=, ≠, &lt;, &gt;, +, −</code></td><td><code>=, ≠, &lt;, &gt;, +, −, ×, ÷</code></td></tr><tr><td><strong>연산 / 분석</strong></td><td>Mode(최빈값)<br>Entropy(불확실성 측정)<br>Contingency table(교차표)<br>Correlation(Chi-squared test of independence)<br>Chi-squared test</td><td>Median<br>Percentiles<br>Rank correlation(Spearman)<br>Run tests(Mann–Whitney U, Wilcoxon)<br>Sign tests</td><td>Mean<br>Standard Deviation<br>Pearson correlation<br>T-test<br>F-test(ANOVA)</td><td>Geometric Mean<br>Harmonic Mean<br>Percent variation(CV)</td></tr><tr><td><strong>설명</strong></td><td>통계적 평균·표준편차 무의미</td><td>순위는 비교 가능하지만 간격·크기 비교 불가.<br>중앙값·순위기반 통계 적합.</td><td>간격 일정 → +, − 가능.<br>절대 0 없음 → 비율 해석 불가.</td><td>절대 0 → 모든 연산 가능.<br>비율·곱셈 해석 가능.</td></tr><tr><td><strong>변수 특징</strong></td><td>Named variables</td><td>Named &amp; Ordered variables</td><td>Named &amp; Ordered &amp; Distance between variables</td><td>Named &amp; Ordered &amp; Distance between variables &amp; Makes sense to multiply/divide</td></tr><tr><td><strong>Analysis Method</strong></td><td>Frequency</td><td>Frequency<br>Median and percentiles</td><td>Frequency<br>Median and percentiles<br>Add or Subtract<br>Mean, standard deviation, standard error of the mean</td><td>Frequency<br>Median and percentiles<br>Add or Subtract<br>Mean, standard deviation, standard error of the mean<br>Ratio</td></tr><tr><td><strong>데이터 유형</strong></td><td>Qualitative</td><td>Qualitative</td><td>Quantitative</td><td>Quantitative</td></tr></tbody></table>\n<table><thead><tr><th>Attribute Type</th><th>Description</th><th>Examples</th><th>Operations</th></tr></thead><tbody><tr><td><strong>Nominal</strong></td><td>The values of a nominal attribute are just different names, i.e. nominal attributes provide only enough information to distinguish one object from another. (<code>=, ≠</code>)</td><td>post codes, employee ID numbers, eye colour, sex: <code>{ male, female }</code></td><td>mode, entropy, contingency, correlation, chi squared test</td></tr><tr><td><strong>Ordinal</strong></td><td>The values of an ordinal attribute provide enough information to order objects. (<code>&lt;, &gt;</code>)</td><td>hardness of minerals, <code>{ good, better, best }</code>, grades, street numbers</td><td>median, percentiles, rank correlation, run tests, sign tests</td></tr><tr><td><strong>Interval</strong></td><td>For interval attributes, the differences between values are meaningful, i.e. a unit of measurement exists. (<code>+, −</code>)</td><td>calendar dates, temperature in Celsius or Fahrenheit</td><td>mean, standard deviation, Pearson’s correlation, t and F tests</td></tr><tr><td><strong>Ratio</strong></td><td>For ratio variables both differences and ratios are meaningful. (<code>×, ÷</code>)</td><td>temperature in Kelvin, monetary quantities, counts, age, mass, length, electrical current</td><td>geometric mean, harmonic mean, percent variation</td></tr></tbody></table>\n<h2 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"structured--unstructured-data\">Structured &amp; Unstructured Data<a href=\"https://gracefullight.dev/en/2025/08/14/fundamentals-of-data-analytics-003/#structured--unstructured-data\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<ul>\n<li>Structured Data: which has an associated fixed data structure.<!-- -->\n<ul>\n<li>Relational table</li>\n<li>Manageable</li>\n</ul>\n</li>\n<li>Unstructured Data: which is expressed in natural language and no specific structure and domain types are defined.<!-- -->\n<ul>\n<li>Documents and sounds.</li>\n</ul>\n</li>\n<li>Semi-structured Data: the format is not fixed and has some degree of flexibility.<!-- -->\n<ul>\n<li>XML, JSON</li>\n<li>emails, text data, image, video and sound, zipped files, web pages.</li>\n</ul>\n</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"curse-of-dimensionality\">Curse of dimensionality<a href=\"https://gracefullight.dev/en/2025/08/14/fundamentals-of-data-analytics-003/#curse-of-dimensionality\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<blockquote>\n<p>The explosive nature of increasing data dimensions and its resulting exponential increase in computational efforts required for its processing and/or analysis.</p>\n</blockquote>\n<ul>\n<li>Characteristics of structured data<!-- -->\n<ul>\n<li>Dimensionality: Datasets with higher numbers of attributes have more dimensions, challenging to work with high dimensional data.</li>\n<li>Sparsity: A dataset termed spare data or having the property of sparsity, which contains many zeros values for most of the attributes.</li>\n<li>Resolution: The patterns depend on the scale or level of resolution.</li>\n</ul>\n</li>\n<li>Real life data is usually in a lower dimensional manifold<!-- -->\n<ul>\n<li>many dimensions can be either ignored or the dimensionality can be reduced.</li>\n</ul>\n</li>\n<li>Local smoothness: small changes in input values give small changes in output values.<!-- -->\n<ul>\n<li>Local interpolation to make predictions.</li>\n</ul>\n</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"datasets\">Datasets<a href=\"https://gracefullight.dev/en/2025/08/14/fundamentals-of-data-analytics-003/#datasets\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<ul>\n<li>Record Data<!-- -->\n<ul>\n<li>Data Matrix</li>\n<li>Document data: a special type of data matrix where the attributes are of the same type and are asymmetric.</li>\n<li>Transaction data: a special type of record data. Each record involves a set of items. Most often, the attributes are binary, indicating whether or not an item was purchased.</li>\n</ul>\n</li>\n<li>Graph data<!-- -->\n<ul>\n<li>World wide web, Molecular structures (Simplified molecular-inputline-entry system, SMILES)</li>\n</ul>\n</li>\n<li>Ordered data: sequence data, this is a sequence of individual entities, such as a sequence of words or letters.<!-- -->\n<ul>\n<li>Spatial data</li>\n<li>Temporal data</li>\n<li>Sequential data</li>\n</ul>\n</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"data-collection\">Data collection<a href=\"https://gracefullight.dev/en/2025/08/14/fundamentals-of-data-analytics-003/#data-collection\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<!-- -->\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"quality\">Quality<a href=\"https://gracefullight.dev/en/2025/08/14/fundamentals-of-data-analytics-003/#quality\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<ul>\n<li>Missing values: The data was not collected (e.g. age), or some attributes may not be applicable in all cases (e.g. annual income for children).</li>\n<li>Empty values: Unlike missing values, an empty value is the one that has no actual value, whereas a missing value has an actual value but it is missing somehow.</li>\n<li>Noise: The modification of actual values.</li>\n<li>Outlier: A single or very low frequency occurrence of a value of an attribute that is far from the bulk of attribute values.</li>\n<li>Duplicate data: The same data is recorded multiple times.</li>\n<li>Inconsistent formats: When the same set of data appears in multiple tables from different inputs.</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"data-auditing\">Data auditing<a href=\"https://gracefullight.dev/en/2025/08/14/fundamentals-of-data-analytics-003/#data-auditing\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<ul>\n<li>attributes</li>\n<li>measured values</li>\n<li>comments</li>\n<li>attribute type</li>\n<li>operations we can do</li>\n<li>data type (knime/py)</li>\n<li>missing value</li>\n<li>any comments about qualities</li>\n</ul>\n<table><thead><tr><th>attributes</th><th>measured values</th><th>comments</th><th>attribute type</th><th>operations we can do</th><th>Data type (knime/python)</th><th>missing value</th><th>Any comments about qualities</th></tr></thead><tbody><tr><td>fixed acidity</td><td><code>[3.8, 15.9]</code></td><td>continuous number</td><td>ratio</td><td>all arithmetic</td><td>float</td><td>N/A</td><td></td></tr><tr><td>volatile acidity</td><td><code>[0.08, 1.58]</code></td><td>continuous number</td><td>ratio</td><td>all arithmetic</td><td>float</td><td>N/A</td><td></td></tr><tr><td>citric acid</td><td><code>[0, 1.66]</code></td><td>continuous number</td><td>ratio</td><td>all arithmetic</td><td>float</td><td>N/A</td><td></td></tr><tr><td>residual sugar</td><td><code>[0.6, 65.8]</code></td><td>continuous number</td><td>ratio</td><td>all arithmetic</td><td>float</td><td>N/A</td><td></td></tr><tr><td>chlorides</td><td><code>[0.009, 0.611]</code></td><td>continuous number</td><td>ratio</td><td>all arithmetic</td><td>float</td><td>N/A</td><td></td></tr><tr><td>free sulfur dioxide</td><td><code>[1, 289]</code></td><td>continuous number</td><td>ratio</td><td>all arithmetic</td><td>int</td><td>N/A</td><td></td></tr><tr><td>total sulfur dioxide</td><td><code>[6, 440]</code></td><td>continuous number</td><td>ratio</td><td>all arithmetic</td><td>int</td><td>N/A</td><td></td></tr><tr><td>density</td><td><code>[0.98711, 1.03898]</code></td><td>continuous number</td><td>ratio</td><td>all arithmetic</td><td>float</td><td>N/A</td><td></td></tr><tr><td>pH</td><td><code>[2.72, 4.01]</code></td><td>continuous number</td><td>interval</td><td>order, arithmetic</td><td>float</td><td>N/A</td><td></td></tr><tr><td>sulphates</td><td><code>[0.22, 2]</code></td><td>continuous number</td><td>ratio</td><td>all arithmetic</td><td>float</td><td>N/A</td><td></td></tr><tr><td>alcohol</td><td><code>[8, 14.9]</code></td><td>continuous number</td><td>ratio</td><td>all arithmetic</td><td>float</td><td>N/A</td><td></td></tr><tr><td>quality</td><td><code>[extremely dissatisfied, extremely satisfied, moderately dissatisfied, moderately satisfied, neutral, slightly dissatisfied, slightly satisfied]</code></td><td>distributed</td><td>ordinal</td><td>order, counting</td><td>str</td><td>N/A</td><td></td></tr><tr><td>color</td><td><code>[white, red]</code></td><td>distributed</td><td>nominal</td><td>counting</td><td>str</td><td>N/A</td><td></td></tr></tbody></table>",
            "url": "https://gracefullight.dev/en/2025/08/14/fundamentals-of-data-analytics-003/",
            "title": "Fundamentals of data analytics @003",
            "summary": "Fundamentals of data analytics @003",
            "date_modified": "2025-08-14T06:13:20.434Z",
            "author": {
                "name": "Gracefullight",
                "url": "https://github.com/gracefullight"
            },
            "tags": [
                "fda"
            ]
        },
        {
            "id": "https://gracefullight.dev/en/vocab/vocab-ai-004/",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"vocabulary--expressions\">Vocabulary &amp; Expressions<a href=\"https://gracefullight.dev/en/vocab/vocab-ai-004/#vocabulary--expressions\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<table><thead><tr><th>Term/Expression</th><th>Definition</th><th>Simpler Paraphrase</th><th>Meaning</th></tr></thead><tbody><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/relax\" target=\"_blank\" rel=\"noopener noreferrer\">relax</a></td><td>to make a rule or control less severe</td><td>to make less strict or severe</td><td>완화하다, 느슨하게 하다</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/reconstruct\" target=\"_blank\" rel=\"noopener noreferrer\">reconstruct</a></td><td>to build or form again</td><td>to rebuild</td><td>재구성하다</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/reside\" target=\"_blank\" rel=\"noopener noreferrer\">reside</a></td><td>to live in a place; to exist or be present</td><td>to live; to be located</td><td>위치하다, 존재하다</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/lay-out\" target=\"_blank\" rel=\"noopener noreferrer\">lay out</a></td><td>to arrange or plan something in a clear and organized way</td><td>to arrange</td><td>배치하다, 설계하다</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/resemble\" target=\"_blank\" rel=\"noopener noreferrer\">resemble</a></td><td>to look like or be similar to someone or something</td><td>to look like</td><td>닮다, 유사하다</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/amnesia\" target=\"_blank\" rel=\"noopener noreferrer\">amnesia</a></td><td>a condition in which a person is unable to remember things</td><td>memory loss</td><td>기억상실증</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/vicinity\" target=\"_blank\" rel=\"noopener noreferrer\">vicinity</a></td><td>the area near or surrounding a particular place</td><td>nearby area</td><td>인근, 근처</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/schematically\" target=\"_blank\" rel=\"noopener noreferrer\">schematically</a></td><td>in a way that represents the main features or relationships of something in a simple and clear form</td><td>in a simplified way</td><td>도식적으로</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/superimpose\" target=\"_blank\" rel=\"noopener noreferrer\">superimpose</a></td><td>to place or lay something over something else</td><td>to overlay</td><td>겹쳐 놓다, 중첩하다</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/plateaus\" target=\"_blank\" rel=\"noopener noreferrer\">plateaus</a></td><td>a state of little or no change following a period of activity or progress</td><td>a period of stability</td><td>정체기, 안정기, 고원</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/wander\" target=\"_blank\" rel=\"noopener noreferrer\">wander</a></td><td>to move around without a fixed course, aim, or goal</td><td>to roam</td><td>방황하다, 헤매다</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/consecutive\" target=\"_blank\" rel=\"noopener noreferrer\">consecutive</a></td><td>following continuously; in unbroken or logical sequence</td><td>sequential</td><td>연속적인</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/converge\" target=\"_blank\" rel=\"noopener noreferrer\">converge</a></td><td>to come together from different directions</td><td>to meet</td><td>수렴하다, 모이다</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/adage\" target=\"_blank\" rel=\"noopener noreferrer\">adage</a></td><td>a saying or proverb expressing a common truth</td><td>a wise saying</td><td>격언, 속담</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/porcupine\" target=\"_blank\" rel=\"noopener noreferrer\">porcupine</a></td><td>a large rodent with sharp quills on its back</td><td>a spiny animal</td><td>호저</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/stumble\" target=\"_blank\" rel=\"noopener noreferrer\">stumble</a></td><td>to trip or lose balance while walking or running</td><td>to trip</td><td>비틀거리다, 넘어지다</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/metallurgy\" target=\"_blank\" rel=\"noopener noreferrer\">metallurgy</a></td><td>the science and technology of metals</td><td>metal science</td><td>금속공학</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/crystalline\" target=\"_blank\" rel=\"noopener noreferrer\">crystalline</a></td><td>having the structure and form of a crystal</td><td>crystal-like</td><td>결정질의</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/crevice\" target=\"_blank\" rel=\"noopener noreferrer\">crevice</a></td><td>a narrow opening or fissure</td><td>a crack</td><td>틈, 균열</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/bumpy\" target=\"_blank\" rel=\"noopener noreferrer\">bumpy</a></td><td>having an uneven or jolting surface</td><td>uneven</td><td>울퉁불퉁한</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/dislodge\" target=\"_blank\" rel=\"noopener noreferrer\">dislodge</a></td><td>to remove or force out from a position</td><td>to remove</td><td>제거하다, 떼어내다</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/exponentially\" target=\"_blank\" rel=\"noopener noreferrer\">exponentially</a></td><td>in a way that increases rapidly and significantly</td><td>rapidly</td><td>기하급수적으로</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/halt\" target=\"_blank\" rel=\"noopener noreferrer\">halt</a></td><td>to stop or pause something</td><td>to stop</td><td>중단하다, 멈추다</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/unfruitful\" target=\"_blank\" rel=\"noopener noreferrer\">unfruitful</a></td><td>not producing good results</td><td>unproductive</td><td>결실이 없는</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/analogous\" target=\"_blank\" rel=\"noopener noreferrer\">analogous</a></td><td>similar in some way</td><td>comparable</td><td>유사한</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/proportional\" target=\"_blank\" rel=\"noopener noreferrer\">proportional</a></td><td>corresponding in size or amount to something else</td><td>relative</td><td>비례하는</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/retained\" target=\"_blank\" rel=\"noopener noreferrer\">retained</a></td><td>kept or continued to have</td><td>kept</td><td>유지된</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/in-accordance-with\" target=\"_blank\" rel=\"noopener noreferrer\">in accordance with</a></td><td>following or obeying a rule, law, or wish</td><td>according to</td><td>~에 따라, ~에 일치하여</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/constitute\" target=\"_blank\" rel=\"noopener noreferrer\">constitute</a></td><td>to be a part of something</td><td>to form</td><td>구성하다</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/permute\" target=\"_blank\" rel=\"noopener noreferrer\">permute</a></td><td>to change the order or arrangement of something</td><td>to rearrange</td><td>순열하다, 배열을 바꾸다</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/chromosome\" target=\"_blank\" rel=\"noopener noreferrer\">chromosome</a></td><td>a thread-like structure of nucleic acids and protein found in the nucleus of most living cells</td><td>genetic structure</td><td>염색체</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/auxiliary\" target=\"_blank\" rel=\"noopener noreferrer\">auxiliary</a></td><td>providing supplementary or additional help and support</td><td>supplementary</td><td>보조의</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/discriminative\" target=\"_blank\" rel=\"noopener noreferrer\">discriminative</a></td><td>able to distinguish or differentiate</td><td>distinguishing</td><td>구별 가능한</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/exploit\" target=\"_blank\" rel=\"noopener noreferrer\">exploit</a></td><td>to make full use of and benefit from something</td><td>to utilize</td><td>활용하다</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/perturbation\" target=\"_blank\" rel=\"noopener noreferrer\">perturbation</a></td><td>a small change or variation</td><td>a disturbance</td><td>교란</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/modulate\" target=\"_blank\" rel=\"noopener noreferrer\">modulate</a></td><td>to adjust or alter the intensity or frequency of something</td><td>to adjust</td><td>조절하다, 변조하다</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/retrieval\" target=\"_blank\" rel=\"noopener noreferrer\">retrieval</a></td><td>the process of getting stored information from a computer</td><td>search</td><td>검색</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/leverage\" target=\"_blank\" rel=\"noopener noreferrer\">leverage</a></td><td>to use something to maximum advantage</td><td>to utilize</td><td>활용하다</td></tr></tbody></table>",
            "url": "https://gracefullight.dev/en/vocab/vocab-ai-004/",
            "title": "Vocabulary for AI @004",
            "summary": "Vocabulary for AI @004",
            "date_modified": "2025-08-14T05:01:26.639Z",
            "author": {
                "name": "Gracefullight",
                "url": "https://github.com/gracefullight"
            },
            "tags": [
                "me"
            ]
        },
        {
            "id": "https://gracefullight.dev/en/2025/08/11/fundamentals-of-software-development-003/",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"terminology\">Terminology<a href=\"https://gracefullight.dev/en/2025/08/11/fundamentals-of-software-development-003/#terminology\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<ul>\n<li>Software: A set of statements written in a programming language to perform tasks</li>\n<li>Statement: A single instruction in a program that performs an action when executed.</li>\n<li>Snippet: A block of statements.</li>\n<li>Software Development: The process of creating a software program.</li>\n<li>OOP: Program composed of interconnected objects at runtime.</li>\n<li>Expression: An entity-code component of a statement that can be evaluated to produce a value.</li>\n<li>Assign: The process of storing the result (a value) of one or more expressions.</li>\n<li>Value: A data item (literal or computed) that is stored in a variable.</li>\n<li>Compiler: A special program that translates a programming language's source code into machine code.<!-- -->\n<ul>\n<li>Compilers complete the conversion process all at once after changes are made to the code and before the code is executed</li>\n</ul>\n</li>\n<li>Interpreter: A computer program that directly executes code without requiring it to be previously compiled into machine language.<!-- -->\n<ul>\n<li>Interpreters complete the conversion process one step at a time while the code is being executed.</li>\n</ul>\n</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"software-development\">Software development<a href=\"https://gracefullight.dev/en/2025/08/11/fundamentals-of-software-development-003/#software-development\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<ul>\n<li>Software development process is an iterative approach.</li>\n</ul>\n<!-- -->\n<ul>\n<li>java<!-- -->\n<ul>\n<li><code>javac Welcome.java</code>: Compiles the Java source file <code>Welcome.java</code> into class binary file.</li>\n<li><code>java Welcome</code>: Executes the Java program <code>Welcome</code>.</li>\n</ul>\n</li>\n<li>python<!-- -->\n<ul>\n<li><code>python welcome.py</code>: Executes the Python script <code>welcome.py</code>.</li>\n</ul>\n</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"oop\">OOP<a href=\"https://gracefullight.dev/en/2025/08/11/fundamentals-of-software-development-003/#oop\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<ul>\n<li>Object: An object is a thing, tangible and intangible. An object has fields that contain the data and methods to access and modify the data.</li>\n<li>Class: A class is an abstract definition of objects. A class is a template of a blueprint that defines what data and methods are included in objects.</li>\n<li>Method: A block of code grouped together to perform an operation. A method has a <strong>name</strong>, <strong>parameters</strong>, and a <strong>return type</strong>.</li>\n<li>Field: A field is a data attribute of an object. A field value is exposed using object methods.</li>\n<li>Organizing code into classes improves modularity, reusability, extendability, and scalability.</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"java-vs-python\">Java vs Python<a href=\"https://gracefullight.dev/en/2025/08/11/fundamentals-of-software-development-003/#java-vs-python\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<table><thead><tr><th>Identifier type</th><th>Java</th><th>Python</th></tr></thead><tbody><tr><td>Class</td><td>Use CamelCase for multi-word classes</td><td>Use snake_case for multi-word classes</td></tr><tr><td>Function</td><td>use verbs or verb phrases</td><td>use lowercase_with_underscores</td></tr><tr><td>Procedure</td><td>use verbs or verb phrases</td><td>use lowercase_with_underscores</td></tr><tr><td>Variable</td><td>camelCase</td><td>lowercase_with_underscores</td></tr><tr><td>Constant</td><td>All uppercase words separated by underscores</td><td>All uppercase words separated by underscores</td></tr><tr><td>Package</td><td>Lowercase words separated by dots</td><td>Lowercase words separated by underscores</td></tr></tbody></table>\n<ul>\n<li>Java uses the <code>toString()</code> function to return objects' information.</li>\n<li>Python can refer to attributes directly or use the <code>__str()__</code> function to return objects' information</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"data-types\">Data types<a href=\"https://gracefullight.dev/en/2025/08/11/fundamentals-of-software-development-003/#data-types\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<table><thead><tr><th>Data Type</th><th>Size</th><th>Default value</th><th>Description</th></tr></thead><tbody><tr><td>byte</td><td>1 byte</td><td>0</td><td>8-bit signed integer</td></tr><tr><td>short</td><td>2 bytes</td><td>0</td><td>16-bit signed integer</td></tr><tr><td>int</td><td>4 bytes</td><td>0</td><td>32-bit signed integer</td></tr><tr><td>long</td><td>8 bytes</td><td>0</td><td>64-bit signed integer</td></tr><tr><td>float</td><td>4 bytes</td><td>0.0f</td><td>32-bit floating point</td></tr><tr><td>double</td><td>8 bytes</td><td>0.0d</td><td>64-bit floating point</td></tr><tr><td>boolean</td><td>1 bit</td><td>false</td><td>true or false</td></tr><tr><td>char</td><td>2 bytes</td><td>'\\u0000'</td><td>16-bit Unicode character</td></tr></tbody></table>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"non-primitive-data-types\">Non-Primitive Data Types<a href=\"https://gracefullight.dev/en/2025/08/11/fundamentals-of-software-development-003/#non-primitive-data-types\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<ul>\n<li>Non-primitive: Arrays, Classes, Interfaces, and Strings.</li>\n<li>Non-primitive data types are by default set to <strong>null</strong> in Java, <strong>None</strong> in Python.</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"variables\">Variables<a href=\"https://gracefullight.dev/en/2025/08/11/fundamentals-of-software-development-003/#variables\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<ul>\n<li><code>Static</code>: enables the variable to be used without creating an object of its defining class.</li>\n<li><code>Final</code>: makes the variable unchangeable.</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"operators\">Operators<a href=\"https://gracefullight.dev/en/2025/08/11/fundamentals-of-software-development-003/#operators\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<table><thead><tr><th>Operator Category</th><th>Java</th><th>Python</th></tr></thead><tbody><tr><td>Unary</td><td>expr++ expr--</td><td></td></tr><tr><td></td><td>++expr --expr +expr -expr</td><td>+expr -expr</td></tr><tr><td>Arithmetic</td><td><code>* / &amp;</code></td><td><code>* / &amp;</code></td></tr><tr><td></td><td><code>+ -</code></td><td><code>+ -</code></td></tr><tr><td>Relational</td><td><code>&lt; &gt; &lt;= &gt;=</code></td><td><code>&lt; &gt; &lt;= &gt;=</code></td></tr><tr><td></td><td><code>==  !=</code></td><td><code>==  !=</code></td></tr><tr><td>Logical</td><td><code>! &amp;&amp;</code></td><td><code>not and</code></td></tr><tr><td></td><td>||</td><td><code>or</code></td></tr><tr><td>Ternary</td><td><code>(expr1) ? &lt;expr2&gt; : &lt;expr3&gt;</code></td><td><code>(expr1) if &lt;expr2&gt; then &lt;expr3&gt;</code></td></tr><tr><td>Assignment</td><td><code>= += -= *= /= %=</code></td><td><code>= += -= *= /= %= **=</code></td></tr><tr><td>Identity/Membership</td><td></td><td><code>is  is not  in  not in</code></td></tr></tbody></table>\n<ul>\n<li>Java: <code>boolean q = (5 % 2 != 2) ? true : false</code></li>\n<li>Python: <code>q = True if (5 % 2 != 2) else False</code></li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"standard-input\">Standard Input<a href=\"https://gracefullight.dev/en/2025/08/11/fundamentals-of-software-development-003/#standard-input\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<div class=\"language-java codeBlockContainer_QFtC theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_vdmG\"><pre tabindex=\"0\" class=\"prism-code language-java codeBlock_CpxK thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\"><code class=\"codeBlockLines__0Nl\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">import java.util.Scanner;</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">public class Inputs {</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  static Scanner in = new Scanner(System.in);</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  public static void main(String[] args) {</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    System.out.print(\"X = \");</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    int x = in.nextInt();</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    System.out.println(\"x squared = \" + Math.pow(x, 2));</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  }</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">}</span><br></span></code></pre></div></div>\n<div class=\"language-py codeBlockContainer_QFtC theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_vdmG\"><pre tabindex=\"0\" class=\"prism-code language-py codeBlock_CpxK thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\"><code class=\"codeBlockLines__0Nl\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token keyword\" style=\"color:#00009f\">import</span><span class=\"token plain\"> sys</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">x </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token builtin\">int</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"x = \"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">print</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token string\" style=\"color:#e3116c\">\"x squared = \"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token builtin\">pow</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">x</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">2</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><br></span></code></pre></div></div>\n<h2 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"string\">String<a href=\"https://gracefullight.dev/en/2025/08/11/fundamentals-of-software-development-003/#string\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"string-java\">String (java)<a href=\"https://gracefullight.dev/en/2025/08/11/fundamentals-of-software-development-003/#string-java\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<blockquote>\n<p>Immutable</p>\n</blockquote>\n<ul>\n<li><code>String s1 = \"Hello\";</code>: initialize using literal syntax</li>\n<li><code>String s2 = new String(\"Hello\");</code>: initialize using a constructor</li>\n</ul>\n<div class=\"language-java codeBlockContainer_QFtC theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_vdmG\"><pre tabindex=\"0\" class=\"prism-code language-java codeBlock_CpxK thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\"><code class=\"codeBlockLines__0Nl\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">s1 == s1 // false</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">s1.equals(s2) // true</span><br></span></code></pre></div></div>\n<!-- -->\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"string-format-python\">String Format (Python)<a href=\"https://gracefullight.dev/en/2025/08/11/fundamentals-of-software-development-003/#string-format-python\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<table><thead><tr><th>Symbol</th><th>Meaning</th><th>Example code</th><th>Output</th></tr></thead><tbody><tr><td><code>&lt;</code></td><td>Left align</td><td><code>f'[{42:&lt;5}]'</code></td><td><code>[42   ]</code></td></tr><tr><td><code>&gt;</code></td><td>Right align</td><td><code>f'[{42:&gt;5}]'</code></td><td><code>[   42]</code></td></tr><tr><td><code>^</code></td><td>Center align</td><td><code>f'[{42:^5}]'</code></td><td><code>[ 42  ]</code></td></tr><tr><td><code>&lt;</code> with fill char</td><td>Left align with custom fill</td><td><code>f'[{42:-&lt;5}]'</code></td><td><code>[42---]</code></td></tr><tr><td><code>&gt;</code> with fill char</td><td>Right align with custom fill</td><td><code>f'[{42:-&gt;5}]'</code></td><td><code>[---42]</code></td></tr><tr><td><code>^</code> with fill char</td><td>Center align with custom fill</td><td><code>f'[{42:-&gt;5}]'</code></td><td><code>[-42--]</code></td></tr></tbody></table>\n<h2 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"array\">Array<a href=\"https://gracefullight.dev/en/2025/08/11/fundamentals-of-software-development-003/#array\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"array-java\">Array (java)<a href=\"https://gracefullight.dev/en/2025/08/11/fundamentals-of-software-development-003/#array-java\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<p><code>int[] x = {2, 4, -1, 11, 3};</code></p>\n<ul>\n<li>Declaration: <code>int[] x</code></li>\n<li>Instantiation: <code>x = new int[5];</code></li>\n<li>Initialization: <code>x[0] = 2; x[1] = 4; x[2] = -1;</code></li>\n</ul>",
            "url": "https://gracefullight.dev/en/2025/08/11/fundamentals-of-software-development-003/",
            "title": "Fundamentals of software development @003",
            "summary": "Fundamentals of software development @003",
            "date_modified": "2025-08-11T05:27:23.544Z",
            "author": {
                "name": "Gracefullight",
                "url": "https://github.com/gracefullight"
            },
            "tags": [
                "fsd"
            ]
        },
        {
            "id": "https://gracefullight.dev/en/2025/08/09/introduction-to-ai-002/",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"environment\">Environment<a href=\"https://gracefullight.dev/en/2025/08/09/introduction-to-ai-002/#environment\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<ul>\n<li>All possible state and information about how the states are related.</li>\n<li>The costs from one state to each of its adjacent states are also given.</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"agent\">Agent<a href=\"https://gracefullight.dev/en/2025/08/09/introduction-to-ai-002/#agent\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<ul>\n<li>Simulated intelligence knows which state it is in.</li>\n<li>If it takes an action at a given state, it knows the next state and the corresponding cost.</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"characteristics-of-the-environment\">Characteristics of the environment<a href=\"https://gracefullight.dev/en/2025/08/09/introduction-to-ai-002/#characteristics-of-the-environment\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<ul>\n<li>Fully Observable: The agent always knows the current state of the environment at each point in time.</li>\n<li>Deterministic: The next state of the environment is completely determined by the current state and the action taken by the agent.</li>\n<li>Static: The environment is unchanged.</li>\n<li>Discrete: A limited number of distinct, clearly defined actions.</li>\n<li>Single agent: An agent operating by itself in an environment.</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"search-problem\">Search problem<a href=\"https://gracefullight.dev/en/2025/08/09/introduction-to-ai-002/#search-problem\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<blockquote>\n<p>Finding a path from a starting point to a goal point in a space.</p>\n</blockquote>\n<ul>\n<li><strong>The initial state</strong></li>\n<li><strong>State space</strong>: The environment or area where the search takes place</li>\n<li><strong>A set of actions</strong>: The possible actions that the agent can take in each state.<!-- -->\n<ul>\n<li><code>ACTION (s)</code></li>\n</ul>\n</li>\n<li><strong>A transition model</strong>:<!-- -->\n<ul>\n<li>takes in a state and an action.</li>\n<li>returns the successor state, which is any state reachable from doing action <code>a</code> in state <code>s</code>.</li>\n<li><code>RESULT(s, a)</code></li>\n</ul>\n</li>\n<li><strong>A goal state</strong>:<!-- -->\n<ul>\n<li>The target location or position that needs to be reached.</li>\n<li>represented by a goal test function</li>\n</ul>\n</li>\n<li><strong>A path cost function</strong>:<!-- -->\n<ul>\n<li>The cost associated with a particular path taken through the state space.</li>\n<li><code>c(s1, a, s2)</code></li>\n</ul>\n</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"frontier\">Frontier<a href=\"https://gracefullight.dev/en/2025/08/09/introduction-to-ai-002/#frontier\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<ul>\n<li>A set of nodes that are under consideration to be expanded.</li>\n<li>A set of leaf nodes in the search spanning tree are available for expansion at any given step.</li>\n<li>A search algorithm determines how to choose a node in the Frontier to grow the search spanning tree.</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"search-algorithm\">Search Algorithm<a href=\"https://gracefullight.dev/en/2025/08/09/introduction-to-ai-002/#search-algorithm\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<!-- -->\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"tree-search-vs-graph-search\">Tree Search vs Graph Search<a href=\"https://gracefullight.dev/en/2025/08/09/introduction-to-ai-002/#tree-search-vs-graph-search\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<blockquote>\n<p>Explored Set</p>\n</blockquote>\n<ul>\n<li>The frontier in graph search separates the search-space graph into two regions, the explored region and the unexplored region, so that Every path from the initial state to an unexplored state has to pass through a state in the frontier.</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"performance-measures\">Performance measures<a href=\"https://gracefullight.dev/en/2025/08/09/introduction-to-ai-002/#performance-measures\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<ul>\n<li>Completeness</li>\n<li>Cost Optimality</li>\n<li>Time complexity</li>\n<li>Space complexity</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"bfs\">BFS<a href=\"https://gracefullight.dev/en/2025/08/09/introduction-to-ai-002/#bfs\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<blockquote>\n<p>Queue</p>\n</blockquote>\n<h4 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"bfs-tree\">BFS Tree<a href=\"https://gracefullight.dev/en/2025/08/09/introduction-to-ai-002/#bfs-tree\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h4>\n<div class=\"language-py codeBlockContainer_QFtC theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_vdmG\"><pre tabindex=\"0\" class=\"prism-code language-py codeBlock_CpxK thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\"><code class=\"codeBlockLines__0Nl\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token keyword\" style=\"color:#00009f\">from</span><span class=\"token plain\"> collections </span><span class=\"token keyword\" style=\"color:#00009f\">import</span><span class=\"token plain\"> deque</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">def</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:#d73a49\">bfs_tree</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">start</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> goal_test</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> successors</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token triple-quoted-string string\" style=\"color:#e3116c\">\"\"\"</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token triple-quoted-string string\" style=\"color:#e3116c\">    start: 시작 상태</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token triple-quoted-string string\" style=\"color:#e3116c\">    goal_test(s): 목표 검사 함수 -&gt; bool</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token triple-quoted-string string\" style=\"color:#e3116c\">    successors(s): 상태 s에서 갈 수 있는 다음 상태들의 리스트 반환</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token triple-quoted-string string\" style=\"display:inline-block;color:#e3116c\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token triple-quoted-string string\" style=\"color:#e3116c\">    반환: 목표에 도달하는 경로(list) 또는 None</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token triple-quoted-string string\" style=\"color:#e3116c\">    (Tree-search: explored/중복 체크 안 함)</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token triple-quoted-string string\" style=\"color:#e3116c\">    \"\"\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">if</span><span class=\"token plain\"> goal_test</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">start</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token keyword\" style=\"color:#00009f\">return</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\">start</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># 노드 = (state, parent_index)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    nodes </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">start</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:#36acaa\">None</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    frontier </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> deque</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token number\" style=\"color:#36acaa\">0</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\">  </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># nodes의 인덱스를 큐에 저장</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">while</span><span class=\"token plain\"> frontier</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        parent_idx </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> frontier</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">popleft</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        parent_state</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> _ </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> nodes</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\">parent_idx</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token keyword\" style=\"color:#00009f\">for</span><span class=\"token plain\"> nxt </span><span class=\"token keyword\" style=\"color:#00009f\">in</span><span class=\"token plain\"> successors</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">parent_state</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            nodes</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">append</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">nxt</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> parent_idx</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            child_idx </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token builtin\">len</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">nodes</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">-</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">1</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            </span><span class=\"token keyword\" style=\"color:#00009f\">if</span><span class=\"token plain\"> goal_test</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">nxt</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># 경로 복원</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                path</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> i </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> child_idx</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                </span><span class=\"token keyword\" style=\"color:#00009f\">while</span><span class=\"token plain\"> i </span><span class=\"token keyword\" style=\"color:#00009f\">is</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">not</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:#36acaa\">None</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                    path</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">append</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">nodes</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\">i</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token number\" style=\"color:#36acaa\">0</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                    i </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> nodes</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\">i</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token number\" style=\"color:#36acaa\">1</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                </span><span class=\"token keyword\" style=\"color:#00009f\">return</span><span class=\"token plain\"> </span><span class=\"token builtin\">list</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token builtin\">reversed</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">path</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            frontier</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">append</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">child_idx</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">return</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:#36acaa\">None</span><br></span></code></pre></div></div>\n<div class=\"language-py codeBlockContainer_QFtC theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_vdmG\"><pre tabindex=\"0\" class=\"prism-code language-py codeBlock_CpxK thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\"><code class=\"codeBlockLines__0Nl\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token keyword\" style=\"color:#00009f\">from</span><span class=\"token plain\"> collections </span><span class=\"token keyword\" style=\"color:#00009f\">import</span><span class=\"token plain\"> deque</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">def</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:#d73a49\">bfs_graph</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">start</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> goal_test</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> successors</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token triple-quoted-string string\" style=\"color:#e3116c\">\"\"\"</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token triple-quoted-string string\" style=\"color:#e3116c\">    start: 시작 상태 (예: 'Arad')</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token triple-quoted-string string\" style=\"color:#e3116c\">    goal_test(s): s가 목표면 True</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token triple-quoted-string string\" style=\"color:#e3116c\">    successors(s): 상태 s에서 (다음상태, 비용) 혹은 그냥 다음상태 리스트 반환</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token triple-quoted-string string\" style=\"color:#e3116c\">                   아래에서는 다음상태 리스트라고 가정</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token triple-quoted-string string\" style=\"color:#e3116c\">    반환: start -&gt; ... -&gt; goal 경로 리스트, 없으면 None</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token triple-quoted-string string\" style=\"color:#e3116c\">    \"\"\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># 노드 = (state, parent_index)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    frontier </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> deque</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">start</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:#36acaa\">None</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\">   </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># FIFO 큐</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    frontier_states </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\">start</span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\">           </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># frontier에 있는 상태 집합 (중복 방지)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    explored </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token builtin\">set</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\">                    </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># 이미 확장한 상태(Closed)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># 경로 복원을 위해 모든 노드를 배열에 따로 저장</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    nodes </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">start</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:#36acaa\">None</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\">             </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># nodes[i] = (state, parent_index)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    index_in_queue </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> deque</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token number\" style=\"color:#36acaa\">0</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\">         </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># frontier에서의 인덱스(=nodes의 인덱스)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">if</span><span class=\"token plain\"> goal_test</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">start</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token keyword\" style=\"color:#00009f\">return</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\">start</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">while</span><span class=\"token plain\"> frontier</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        state</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> parent </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> frontier</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">popleft</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        node_idx </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> index_in_queue</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">popleft</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        frontier_states</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">discard</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">state</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        explored</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">add</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">state</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token keyword\" style=\"color:#00009f\">for</span><span class=\"token plain\"> nxt </span><span class=\"token keyword\" style=\"color:#00009f\">in</span><span class=\"token plain\"> successors</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">state</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            </span><span class=\"token keyword\" style=\"color:#00009f\">if</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">nxt </span><span class=\"token keyword\" style=\"color:#00009f\">not</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">in</span><span class=\"token plain\"> explored</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">and</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">nxt </span><span class=\"token keyword\" style=\"color:#00009f\">not</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">in</span><span class=\"token plain\"> frontier_states</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># child 노드 저장</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                nodes</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">append</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">nxt</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> node_idx</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                child_idx </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token builtin\">len</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">nodes</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">-</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">1</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                </span><span class=\"token keyword\" style=\"color:#00009f\">if</span><span class=\"token plain\"> goal_test</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">nxt</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                    </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># 경로 복원</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                    path </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                    i </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> child_idx</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                    </span><span class=\"token keyword\" style=\"color:#00009f\">while</span><span class=\"token plain\"> i </span><span class=\"token keyword\" style=\"color:#00009f\">is</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">not</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:#36acaa\">None</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                        path</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">append</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">nodes</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\">i</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token number\" style=\"color:#36acaa\">0</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                        i </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> nodes</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\">i</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token number\" style=\"color:#36acaa\">1</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                    </span><span class=\"token keyword\" style=\"color:#00009f\">return</span><span class=\"token plain\"> </span><span class=\"token builtin\">list</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token builtin\">reversed</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">path</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># frontier에 삽입</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                frontier</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">append</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">nxt</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> node_idx</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                index_in_queue</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">append</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">child_idx</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                frontier_states</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">add</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">nxt</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">return</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:#36acaa\">None</span><br></span></code></pre></div></div>\n<div class=\"language-py codeBlockContainer_QFtC theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_vdmG\"><pre tabindex=\"0\" class=\"prism-code language-py codeBlock_CpxK thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\"><code class=\"codeBlockLines__0Nl\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">graph </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token string\" style=\"color:#e3116c\">\"Arad\"</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token string\" style=\"color:#e3116c\">\"Sibiu\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"Timisoara\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"Zerind\"</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token string\" style=\"color:#e3116c\">\"Sibiu\"</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token string\" style=\"color:#e3116c\">\"Arad\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"Fagaras\"</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token string\" style=\"color:#e3116c\">\"Timisoara\"</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token string\" style=\"color:#e3116c\">\"Arad\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"Lugoj\"</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token string\" style=\"color:#e3116c\">\"Zerind\"</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token string\" style=\"color:#e3116c\">\"Arad\"</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token string\" style=\"color:#e3116c\">\"Fagaras\"</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token string\" style=\"color:#e3116c\">\"Lugoj\"</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">path </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> bfs</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    start</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token string\" style=\"color:#e3116c\">\"Arad\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    goal_test</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token keyword\" style=\"color:#00009f\">lambda</span><span class=\"token plain\"> s</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> s </span><span class=\"token operator\" style=\"color:#393A34\">==</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"Lugoj\"</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    successors</span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token keyword\" style=\"color:#00009f\">lambda</span><span class=\"token plain\"> s</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> graph</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">get</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">s</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">print</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">path</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><br></span></code></pre></div></div>\n<ul>\n<li>Has the shallowest path to every node on the frontier</li>\n<li>memory-intensive as it stores all nodes.</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"dfs\">DFS<a href=\"https://gracefullight.dev/en/2025/08/09/introduction-to-ai-002/#dfs\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<blockquote>\n<p>Stack</p>\n</blockquote>\n<div class=\"language-py codeBlockContainer_QFtC theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_vdmG\"><pre tabindex=\"0\" class=\"prism-code language-py codeBlock_CpxK thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\"><code class=\"codeBlockLines__0Nl\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token keyword\" style=\"color:#00009f\">def</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:#d73a49\">depth_first_search</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">initial_state</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> goal_test</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> actions</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token triple-quoted-string string\" style=\"color:#e3116c\">\"\"\"</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token triple-quoted-string string\" style=\"color:#e3116c\">    initial_state: 시작 상태</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token triple-quoted-string string\" style=\"color:#e3116c\">    goal_test(s): 상태 s가 목표면 True</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token triple-quoted-string string\" style=\"color:#e3116c\">    actions(s): 상태 s에서 이동 가능한 다음 상태들의 리스트 반환</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token triple-quoted-string string\" style=\"color:#e3116c\">    반환: start → goal 경로(list) 또는 None</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token triple-quoted-string string\" style=\"color:#e3116c\">    \"\"\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># 모든 노드 저장: nodes[i] = (state, parent_index)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    nodes </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">initial_state</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:#36acaa\">None</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># frontier ← FILO 스택 (여기서는 노드 인덱스만 저장)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    frontier </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token number\" style=\"color:#36acaa\">0</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># frontier에 있는 상태들의 집합 (중복 삽입 방지용)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    stacked_states </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\">initial_state</span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># explored ← 이미 확장(자식 생성)한 상태들의 집합</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    explored </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token builtin\">set</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># 시작 상태가 목표라면 바로 반환</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">if</span><span class=\"token plain\"> goal_test</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">initial_state</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token keyword\" style=\"color:#00009f\">return</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\">initial_state</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># DFS 루프 시작</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">while</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:#36acaa\">True</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># frontier가 비면 실패</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token keyword\" style=\"color:#00009f\">if</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">not</span><span class=\"token plain\"> frontier</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            </span><span class=\"token keyword\" style=\"color:#00009f\">return</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:#36acaa\">None</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># 스택에서 맨 위 노드 꺼내기</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        node_idx </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> frontier</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">pop</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        state</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> parent_idx </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> nodes</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\">node_idx</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># 스택 상태 집합에서 제거 (이제 확장할 차례)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        stacked_states</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">discard</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">state</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># 현재 상태에서 가능한 모든 자식 상태 확인</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token keyword\" style=\"color:#00009f\">for</span><span class=\"token plain\"> child_state </span><span class=\"token keyword\" style=\"color:#00009f\">in</span><span class=\"token plain\"> actions</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">state</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># 자식 상태가 explored나 frontier에 없을 때만 처리</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            </span><span class=\"token keyword\" style=\"color:#00009f\">if</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">child_state </span><span class=\"token keyword\" style=\"color:#00009f\">not</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">in</span><span class=\"token plain\"> explored</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">and</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">child_state </span><span class=\"token keyword\" style=\"color:#00009f\">not</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">in</span><span class=\"token plain\"> stacked_states</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># 새 노드 저장 (부모는 현재 노드)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                nodes</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">append</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">child_state</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> node_idx</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                child_idx </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token builtin\">len</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">nodes</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">-</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">1</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># 목표 상태면 경로 복원해서 반환</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                </span><span class=\"token keyword\" style=\"color:#00009f\">if</span><span class=\"token plain\"> goal_test</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">child_state</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                    path</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> i </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> child_idx</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                    </span><span class=\"token keyword\" style=\"color:#00009f\">while</span><span class=\"token plain\"> i </span><span class=\"token keyword\" style=\"color:#00009f\">is</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">not</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:#36acaa\">None</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                        path</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">append</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">nodes</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\">i</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token number\" style=\"color:#36acaa\">0</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                        i </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> nodes</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\">i</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token number\" style=\"color:#36acaa\">1</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                    </span><span class=\"token keyword\" style=\"color:#00009f\">return</span><span class=\"token plain\"> </span><span class=\"token builtin\">list</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token builtin\">reversed</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">path</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># 목표가 아니면 스택에 push</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                frontier</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">append</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">child_idx</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                stacked_states</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">add</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">child_state</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># 모든 자식 처리가 끝나면 explored에 추가</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        explored</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">add</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">state</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><br></span></code></pre></div></div>\n<ul>\n<li>Low memory usage</li>\n<li>Can get stuck in deep or infinite branches (Not cost-optimal)</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"ucs\">UCS<a href=\"https://gracefullight.dev/en/2025/08/09/introduction-to-ai-002/#ucs\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<blockquote>\n<p>Priority Queue</p>\n</blockquote>\n<ul>\n<li>lowest path cost <code>f(n) = g(n)</code></li>\n<li>Best-first search with the evaluation function</li>\n<li>Uniform-cost search is complete and cost optimal</li>\n<li>Dijkstra's algorithm finds the shortest path from the root node to every other node in a graph with non-negative edge weights.</li>\n<li>A special case of Dijkstra's algorithm in which the</li>\n</ul>\n<div class=\"language-py codeBlockContainer_QFtC theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_vdmG\"><pre tabindex=\"0\" class=\"prism-code language-py codeBlock_CpxK thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\"><code class=\"codeBlockLines__0Nl\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token keyword\" style=\"color:#00009f\">import</span><span class=\"token plain\"> heapq</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">def</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:#d73a49\">uniform_cost_search</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">initial_state</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> goal_test</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> actions</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> step_cost</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token triple-quoted-string string\" style=\"color:#e3116c\">\"\"\"</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token triple-quoted-string string\" style=\"color:#e3116c\">    initial_state: 시작 상태</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token triple-quoted-string string\" style=\"color:#e3116c\">    goal_test(s): 상태 s가 목표면 True</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token triple-quoted-string string\" style=\"color:#e3116c\">    actions(s): 상태 s에서 가능한 다음 상태 리스트</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token triple-quoted-string string\" style=\"color:#e3116c\">    step_cost(s, s_next): s -&gt; s_next 이동 비용 (양수 가정)</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token triple-quoted-string string\" style=\"display:inline-block;color:#e3116c\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token triple-quoted-string string\" style=\"color:#e3116c\">    반환: start → goal 경로(list) 또는 None</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token triple-quoted-string string\" style=\"color:#e3116c\">    \"\"\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># 모든 노드 저장: nodes[i] = (state, parent_idx, path_cost)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    nodes </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">initial_state</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:#36acaa\">None</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">0.0</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># frontier ← PATH-COST 기준 최소 힙 (원소: (cost, node_idx))</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    frontier </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token number\" style=\"color:#36acaa\">0.0</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">0</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    heapq</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">heapify</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">frontier</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># frontier에 있는 상태의 현재 최저 비용(멤버십/비용 비교용)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    frontier_costs </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\">initial_state</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">0.0</span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># explored ← 이미 확장 완료한 상태 집합</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    explored </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token builtin\">set</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># 시작이 곧 목표면 바로 반환</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">if</span><span class=\"token plain\"> goal_test</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">initial_state</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token keyword\" style=\"color:#00009f\">return</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\">initial_state</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># loop do</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">while</span><span class=\"token plain\"> frontier</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># node ← POP(frontier)  /* 최소 비용 노드 */</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        cost</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> node_idx </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> heapq</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">heappop</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">frontier</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        state</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> parent_idx</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> path_cost </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> nodes</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\">node_idx</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># 힙에 남아 있는 구버전(더 비싼 버전)이면 건너뛴다</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token keyword\" style=\"color:#00009f\">if</span><span class=\"token plain\"> state </span><span class=\"token keyword\" style=\"color:#00009f\">in</span><span class=\"token plain\"> frontier_costs </span><span class=\"token keyword\" style=\"color:#00009f\">and</span><span class=\"token plain\"> cost </span><span class=\"token operator\" style=\"color:#393A34\">!=</span><span class=\"token plain\"> frontier_costs</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\">state</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            </span><span class=\"token keyword\" style=\"color:#00009f\">continue</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># goal test (슈도코드: pop 직후 검사)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token keyword\" style=\"color:#00009f\">if</span><span class=\"token plain\"> goal_test</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">state</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># SOLUTION(node) → 경로 복원</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            path </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            i </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> node_idx</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            </span><span class=\"token keyword\" style=\"color:#00009f\">while</span><span class=\"token plain\"> i </span><span class=\"token keyword\" style=\"color:#00009f\">is</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">not</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:#36acaa\">None</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                path</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">append</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">nodes</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\">i</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token number\" style=\"color:#36acaa\">0</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                i </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> nodes</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\">i</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token number\" style=\"color:#36acaa\">1</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            </span><span class=\"token keyword\" style=\"color:#00009f\">return</span><span class=\"token plain\"> </span><span class=\"token builtin\">list</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token builtin\">reversed</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">path</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># add node.STATE to explored</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        explored</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">add</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">state</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># frontier 목록에서 이 상태 제거(더 이상 frontier에 없음)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        frontier_costs</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">pop</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">state</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:#36acaa\">None</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># for each action in ACTIONS(node.STATE) do</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token keyword\" style=\"color:#00009f\">for</span><span class=\"token plain\"> nxt </span><span class=\"token keyword\" style=\"color:#00009f\">in</span><span class=\"token plain\"> actions</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">state</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            new_cost </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> path_cost </span><span class=\"token operator\" style=\"color:#393A34\">+</span><span class=\"token plain\"> step_cost</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">state</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> nxt</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># child.STATE not in explored or frontier ?</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            in_explored </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">nxt </span><span class=\"token keyword\" style=\"color:#00009f\">in</span><span class=\"token plain\"> explored</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            in_frontier </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">nxt </span><span class=\"token keyword\" style=\"color:#00009f\">in</span><span class=\"token plain\"> frontier_costs</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># (1) explored/ fronter 어디에도 없으면 새로 삽입</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            </span><span class=\"token keyword\" style=\"color:#00009f\">if</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">not</span><span class=\"token plain\"> in_explored </span><span class=\"token keyword\" style=\"color:#00009f\">and</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:#00009f\">not</span><span class=\"token plain\"> in_frontier</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                nodes</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">append</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">nxt</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> node_idx</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> new_cost</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                child_idx </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token builtin\">len</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">nodes</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">-</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">1</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                heapq</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">heappush</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">frontier</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">new_cost</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> child_idx</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                frontier_costs</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\">nxt</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> new_cost</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># (2) frontier에 있는데, 더 싼 경로를 찾았다면 \"교체\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            </span><span class=\"token keyword\" style=\"color:#00009f\">elif</span><span class=\"token plain\"> in_frontier </span><span class=\"token keyword\" style=\"color:#00009f\">and</span><span class=\"token plain\"> new_cost </span><span class=\"token operator\" style=\"color:#393A34\">&lt;</span><span class=\"token plain\"> frontier_costs</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\">nxt</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                nodes</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">append</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">nxt</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> node_idx</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> new_cost</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                child_idx </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token builtin\">len</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">nodes</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">-</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">1</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                heapq</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">heappush</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">frontier</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">new_cost</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> child_idx</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># 현재 최저비용을 갱신 → 이전 힙 항목은 나중에 팝될 때 비용불일치로 자동 무시</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                frontier_costs</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\">nxt</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> new_cost</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># if EMPTY?(frontier) then failure</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">return</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:#36acaa\">None</span><br></span></code></pre></div></div>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"greedy-best-first-search\">Greedy Best First Search<a href=\"https://gracefullight.dev/en/2025/08/09/introduction-to-ai-002/#greedy-best-first-search\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<ul>\n<li><code>f(n) = h(n)</code></li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>h</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mi>h</mi><mrow><mi>S</mi><mi>L</mi><mi>D</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">h(n) = h_{SLD}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em\"></span><span class=\"mord mathnormal\">h</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em\"><span class=\"pstrut\" style=\"height:2.7em\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em\">S</span><span class=\"mord mathnormal mtight\">L</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em\">D</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em\"><span></span></span></span></span></span></span></span></span></span>, where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi><mi>L</mi><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">SLD</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em\">S</span><span class=\"mord mathnormal\">L</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em\">D</span></span></span></span> for the <strong>Straight-Line Distance</strong></li>\n<li>It expands the node with the lowest <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>h</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">h(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em\"></span><span class=\"mord mathnormal\">h</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span> value at each step</li>\n</ul>\n<div class=\"language-py codeBlockContainer_QFtC theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_vdmG\"><pre tabindex=\"0\" class=\"prism-code language-py codeBlock_CpxK thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\"><code class=\"codeBlockLines__0Nl\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token keyword\" style=\"color:#00009f\">from</span><span class=\"token plain\"> heapq </span><span class=\"token keyword\" style=\"color:#00009f\">import</span><span class=\"token plain\"> heappush</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> heappop</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:#00009f\">def</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:#d73a49\">gbfs_path</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">G</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> start</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> goal</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> heuristic</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token triple-quoted-string string\" style=\"color:#e3116c\">\"\"\"</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token triple-quoted-string string\" style=\"color:#e3116c\">    Greedy Best-First Search (GBFS)</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token triple-quoted-string string\" style=\"color:#e3116c\">    G: 인접 리스트 dict, G[u] = 이웃들의 리스트/이터러블</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token triple-quoted-string string\" style=\"color:#e3116c\">    heuristic(x, goal): 추정거리 h(x)</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token triple-quoted-string string\" style=\"color:#e3116c\">    반환: start -&gt; ... -&gt; goal 경로(list) 또는 None</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token triple-quoted-string string\" style=\"color:#e3116c\">    \"\"\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># 우선순위 큐 원소: (h(state), state, path)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    pq </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    heappush</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">pq</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">heuristic</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">start</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> goal</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> start</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\">start</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    visited </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token builtin\">set</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\">          </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># 이미 꺼내서 확장한 노드(재방문 방지)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    in_frontier </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\">start</span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\">    </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># 큐에 들어간 노드(중복 삽입 방지)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">while</span><span class=\"token plain\"> pq</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># 휴리스틱이 가장 작은 노드를 꺼냄</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        _</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> vertex</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> path </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> heappop</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">pq</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        in_frontier</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">discard</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">vertex</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># 이미 확장했다면 스킵</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token keyword\" style=\"color:#00009f\">if</span><span class=\"token plain\"> vertex </span><span class=\"token keyword\" style=\"color:#00009f\">in</span><span class=\"token plain\"> visited</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            </span><span class=\"token keyword\" style=\"color:#00009f\">continue</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        visited</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">add</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">vertex</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># 목표면 경로 반환</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token keyword\" style=\"color:#00009f\">if</span><span class=\"token plain\"> vertex </span><span class=\"token operator\" style=\"color:#393A34\">==</span><span class=\"token plain\"> goal</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            </span><span class=\"token keyword\" style=\"color:#00009f\">return</span><span class=\"token plain\"> path</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># 이웃을 휴리스틱 순으로 큐에 추가</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token keyword\" style=\"color:#00009f\">for</span><span class=\"token plain\"> neighbor </span><span class=\"token keyword\" style=\"color:#00009f\">in</span><span class=\"token plain\"> G</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">get</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">vertex</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            </span><span class=\"token keyword\" style=\"color:#00009f\">if</span><span class=\"token plain\"> neighbor </span><span class=\"token keyword\" style=\"color:#00009f\">in</span><span class=\"token plain\"> visited </span><span class=\"token keyword\" style=\"color:#00009f\">or</span><span class=\"token plain\"> neighbor </span><span class=\"token keyword\" style=\"color:#00009f\">in</span><span class=\"token plain\"> in_frontier</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                </span><span class=\"token keyword\" style=\"color:#00009f\">continue</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            heappush</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">pq</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">heuristic</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">neighbor</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> goal</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> neighbor</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> path </span><span class=\"token operator\" style=\"color:#393A34\">+</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\">neighbor</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            in_frontier</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">add</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">neighbor</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">return</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:#36acaa\">None</span><br></span></code></pre></div></div>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"a-search\">A* Search<a href=\"https://gracefullight.dev/en/2025/08/09/introduction-to-ai-002/#a-search\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<ul>\n<li><code>f(n) = g(n) + h(n)</code></li>\n<li>The most common informed search algorithm.</li>\n<li>The tree-search version of A* is optimal if <code>h(n)</code> is an admissible heuristic.</li>\n<li>The graph-search version is optimal if <code>h(n)</code> is consistent.</li>\n</ul>\n<div class=\"language-py codeBlockContainer_QFtC theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_vdmG\"><pre tabindex=\"0\" class=\"prism-code language-py codeBlock_CpxK thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\"><code class=\"codeBlockLines__0Nl\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token keyword\" style=\"color:#00009f\">def</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:#d73a49\">astar_path</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">G</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> start</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> goal</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token triple-quoted-string string\" style=\"color:#e3116c\">\"\"\"</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token triple-quoted-string string\" style=\"color:#e3116c\">    Find a path from start to goal using A* Search.</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token triple-quoted-string string\" style=\"color:#e3116c\">    G: NetworkX Graph</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token triple-quoted-string string\" style=\"color:#e3116c\">    start: 시작 노드</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token triple-quoted-string string\" style=\"color:#e3116c\">    goal: 목표 노드</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token triple-quoted-string string\" style=\"color:#e3116c\">    \"\"\"</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    pq </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> PriorityQueue</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># 시작 노드를 경로 리스트와 함께 큐에 추가, f = 0</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    pq</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">push</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">start</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\">start</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:#36acaa\">0</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    visited </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> </span><span class=\"token builtin\">set</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">while</span><span class=\"token plain\"> pq</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">vertex</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> path</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> pq</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">pop</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># 이미 방문했다면 스킵</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token keyword\" style=\"color:#00009f\">if</span><span class=\"token plain\"> vertex </span><span class=\"token keyword\" style=\"color:#00009f\">in</span><span class=\"token plain\"> visited</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            </span><span class=\"token keyword\" style=\"color:#00009f\">continue</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        visited</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">add</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">vertex</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># 목표 도착 시 경로 반환</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token keyword\" style=\"color:#00009f\">if</span><span class=\"token plain\"> vertex </span><span class=\"token operator\" style=\"color:#393A34\">==</span><span class=\"token plain\"> goal</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            </span><span class=\"token keyword\" style=\"color:#00009f\">return</span><span class=\"token plain\"> path</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># 인접 노드 탐색</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">        </span><span class=\"token keyword\" style=\"color:#00009f\">for</span><span class=\"token plain\"> neighbor </span><span class=\"token keyword\" style=\"color:#00009f\">in</span><span class=\"token plain\"> G</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\">vertex</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            </span><span class=\"token keyword\" style=\"color:#00009f\">if</span><span class=\"token plain\"> neighbor </span><span class=\"token keyword\" style=\"color:#00009f\">in</span><span class=\"token plain\"> visited</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">                </span><span class=\"token keyword\" style=\"color:#00009f\">continue</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># g(n) = 현재 경로까지의 실제 비용</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            g_cost </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> nx</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">path_weight</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">G</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> path </span><span class=\"token operator\" style=\"color:#393A34\">+</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\">neighbor</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">'weight'</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            </span><span class=\"token comment\" style=\"color:#999988;font-style:italic\"># h(n) = 휴리스틱(목표까지의 추정 비용)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            h_cost </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> heuristic</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">cities</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\">neighbor</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> cities</span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\">goal</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            f_cost </span><span class=\"token operator\" style=\"color:#393A34\">=</span><span class=\"token plain\"> g_cost </span><span class=\"token operator\" style=\"color:#393A34\">+</span><span class=\"token plain\"> h_cost</span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">            pq</span><span class=\"token punctuation\" style=\"color:#393A34\">.</span><span class=\"token plain\">push</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token plain\">neighbor</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> path </span><span class=\"token operator\" style=\"color:#393A34\">+</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">[</span><span class=\"token plain\">neighbor</span><span class=\"token punctuation\" style=\"color:#393A34\">]</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token punctuation\" style=\"color:#393A34\">,</span><span class=\"token plain\"> f_cost</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\" style=\"display:inline-block\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:#00009f\">return</span><span class=\"token plain\"> </span><span class=\"token boolean\" style=\"color:#36acaa\">None</span><br></span></code></pre></div></div>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"admissibility\">Admissibility<a href=\"https://gracefullight.dev/en/2025/08/09/introduction-to-ai-002/#admissibility\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>h</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>≤</mo><msup><mi>h</mi><mo>∗</mo></msup><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">h(n) \\leq h^*(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em\"></span><span class=\"mord mathnormal\">h</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6887em\"><span style=\"top:-3.063em;margin-right:0.05em\"><span class=\"pstrut\" style=\"height:2.7em\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span></li>\n<li>Never overestimate the cost to reach the goal</li>\n<li>A straight line distance between a node and the goal node is an admissible heuristic as it is always shorter than the actual distance between this node to the goal node.</li>\n<li>With an admissible heuristic, A* is cost-optimal.</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"consistency\">Consistency<a href=\"https://gracefullight.dev/en/2025/08/09/introduction-to-ai-002/#consistency\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>h</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>≤</mo><mi>c</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo separator=\"true\">,</mo><mi>a</mi><mo separator=\"true\">,</mo><msup><mi>n</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo stretchy=\"false\">)</mo><mo>+</mo><mi>h</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">h(n) \\leq c(n, a, n') + h(n')</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em\"></span><span class=\"mord mathnormal\">h</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0019em;vertical-align:-0.25em\"></span><span class=\"mord mathnormal\">c</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em\"></span><span class=\"mord mathnormal\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em\"><span style=\"top:-3.063em;margin-right:0.05em\"><span class=\"pstrut\" style=\"height:2.7em\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0019em;vertical-align:-0.25em\"></span><span class=\"mord mathnormal\">h</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em\"><span style=\"top:-3.063em;margin-right:0.05em\"><span class=\"pstrut\" style=\"height:2.7em\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></li>\n<li><code>h(n)</code> is consistent if the estimated cost is always less than or equal to the actual cost.</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"admissible-vs-consistent\">Admissible vs Consistent<a href=\"https://gracefullight.dev/en/2025/08/09/introduction-to-ai-002/#admissible-vs-consistent\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<ul>\n<li>Consistent ⇒ Admissible (모든 consistent 휴리스틱은 admissible)</li>\n<li>Admissible ⇏ Consistent (거꾸로는 성립 안 함)</li>\n<li>The tree search version of A* is optimal if h(n) is admissible</li>\n<li>The graph search version of A* is optimal if h(n) is consistent</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"summary\">Summary<a href=\"https://gracefullight.dev/en/2025/08/09/introduction-to-ai-002/#summary\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<table><thead><tr><th>Measure / Criteria</th><th>BFS</th><th>DFS</th><th>Uniform Cost</th><th>A*</th></tr></thead><tbody><tr><td><strong>Complete?</strong></td><td>Yes</td><td>No</td><td>Yes</td><td>Yes</td></tr><tr><td><strong>Time complexity</strong></td><td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>b</mi><mi>d</mi></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(b^d)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0991em;vertical-align:-0.25em\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491em\"><span style=\"top:-3.063em;margin-right:0.05em\"><span class=\"pstrut\" style=\"height:2.7em\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">d</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></td><td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>b</mi><mi>m</mi></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(b^m)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em\"><span style=\"top:-3.063em;margin-right:0.05em\"><span class=\"pstrut\" style=\"height:2.7em\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></td><td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mrow><mo fence=\"true\">(</mo><msup><mi>b</mi><mrow><mn>1</mn><mo>+</mo><mo stretchy=\"false\">⌊</mo><msup><mi>C</mi><mo>∗</mo></msup><mi mathvariant=\"normal\">/</mi><mi>ϵ</mi><mo stretchy=\"false\">⌋</mo></mrow></msup><mo fence=\"true\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">O\\left(b^{1 + \\lfloor C^* / \\epsilon \\rfloor}\\right)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2473em;vertical-align:-0.35em\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em\">O</span><span class=\"mspace\" style=\"margin-right:0.1667em\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em\"><span class=\"delimsizing size1\">(</span></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8973em\"><span style=\"top:-3.063em;margin-right:0.05em\"><span class=\"pstrut\" style=\"height:2.7em\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mbin mtight\">+</span><span class=\"mopen mtight\">⌊</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7633em\"><span style=\"top:-2.931em;margin-right:0.0714em\"><span class=\"pstrut\" style=\"height:2.5em\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mord mtight\">/</span><span class=\"mord mathnormal mtight\">ϵ</span><span class=\"mclose mtight\">⌋</span></span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em\"><span class=\"delimsizing size1\">)</span></span></span></span></span></span></td><td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>b</mi><mi>d</mi></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(b^d)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0991em;vertical-align:-0.25em\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491em\"><span style=\"top:-3.063em;margin-right:0.05em\"><span class=\"pstrut\" style=\"height:2.7em\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">d</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></td></tr><tr><td><strong>Space complexity</strong></td><td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>b</mi><mi>d</mi></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(b^d)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0991em;vertical-align:-0.25em\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491em\"><span style=\"top:-3.063em;margin-right:0.05em\"><span class=\"pstrut\" style=\"height:2.7em\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">d</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></td><td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>b</mi><mi>m</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(bm)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">bm</span><span class=\"mclose\">)</span></span></span></span></td><td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mrow><mo fence=\"true\">(</mo><msup><mi>b</mi><mrow><mn>1</mn><mo>+</mo><mo stretchy=\"false\">⌊</mo><msup><mi>C</mi><mo>∗</mo></msup><mi mathvariant=\"normal\">/</mi><mi>ϵ</mi><mo stretchy=\"false\">⌋</mo></mrow></msup><mo fence=\"true\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">O\\left(b^{1 + \\lfloor C^* / \\epsilon \\rfloor}\\right)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2473em;vertical-align:-0.35em\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em\">O</span><span class=\"mspace\" style=\"margin-right:0.1667em\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em\"><span class=\"delimsizing size1\">(</span></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8973em\"><span style=\"top:-3.063em;margin-right:0.05em\"><span class=\"pstrut\" style=\"height:2.7em\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mbin mtight\">+</span><span class=\"mopen mtight\">⌊</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7633em\"><span style=\"top:-2.931em;margin-right:0.0714em\"><span class=\"pstrut\" style=\"height:2.5em\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mord mtight\">/</span><span class=\"mord mathnormal mtight\">ϵ</span><span class=\"mclose mtight\">⌋</span></span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em\"><span class=\"delimsizing size1\">)</span></span></span></span></span></span></td><td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>b</mi><mi>d</mi></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(b^d)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0991em;vertical-align:-0.25em\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491em\"><span style=\"top:-3.063em;margin-right:0.05em\"><span class=\"pstrut\" style=\"height:2.7em\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">d</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></td></tr><tr><td><strong>Cost optimal?</strong></td><td>Yes</td><td>No</td><td>Yes</td><td>Yes</td></tr></tbody></table>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding=\"application/x-tex\">\\epsilon</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em\"></span><span class=\"mord mathnormal\">ϵ</span></span></span></span> is the smallest positive cost of any single step (edge) in the search problem.</li>\n</ul>",
            "url": "https://gracefullight.dev/en/2025/08/09/introduction-to-ai-002/",
            "title": "Introduction to AI @002",
            "summary": "Introduction to ai @002",
            "date_modified": "2025-08-09T08:31:59.650Z",
            "author": {
                "name": "Gracefullight",
                "url": "https://github.com/gracefullight"
            },
            "tags": [
                "iai"
            ]
        },
        {
            "id": "https://gracefullight.dev/en/2025/08/06/fundamentals-of-data-analytics-002/",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"business-intelligence\">Business Intelligence<a href=\"https://gracefullight.dev/en/2025/08/06/fundamentals-of-data-analytics-002/#business-intelligence\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<!-- -->\n<h2 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"kdd\">KDD<a href=\"https://gracefullight.dev/en/2025/08/06/fundamentals-of-data-analytics-002/#kdd\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<blockquote>\n<p>knowledge discovery in databases (KDD) refers to the comprehensive process of finding knowledge in data.</p>\n</blockquote>\n<ul>\n<li>Learning from the application domain</li>\n<li>Creating a target dataset</li>\n<li>Data cleansing/pre-processing</li>\n<li>Data reduction/projection</li>\n<li>Choosing the function of data mining</li>\n<li>Choosing the data mining algorithm</li>\n<li>Data mining</li>\n<li>Interpretation</li>\n<li>Using discovered knowledge</li>\n</ul>\n<!-- -->\n<h2 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"crisp-dm\">CRISP-DM<a href=\"https://gracefullight.dev/en/2025/08/06/fundamentals-of-data-analytics-002/#crisp-dm\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<blockquote>\n<p>The Cross-Industry Standard Process for Data Mining (CRISP-DM) methodology provides a structured approach to planning a data mining project.\nAs it is a cross-industry standard, it is widely used by practitioners who need a repeatable approach for data mining projects and can be used in a variety of machine learning projects.</p>\n</blockquote>\n<ul>\n<li>Business understanding: Set up a business problem and understand what you want to accomplish from a business perspective.</li>\n<li>Data understanding: Identify, collect and review the required data.</li>\n<li>Data preparation: Prepare your data for modeling.</li>\n<li>Modeling: Analyze possible approaches and develop the model.</li>\n<li>Evaluation: Evaluate results against business needs.</li>\n<li>Deployment: Deploy the model.</li>\n</ul>\n<!-- -->\n<h2 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"statistical-analysis\">Statistical Analysis<a href=\"https://gracefullight.dev/en/2025/08/06/fundamentals-of-data-analytics-002/#statistical-analysis\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<blockquote>\n<p>Data analytics has borrowed from statistical analysis, which involves collecting data, counting, probabilities, and hypothesis testing.</p>\n</blockquote>\n<p>The two main approaches that are relevant to data analytics are:</p>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"descriptive-statistics\">Descriptive Statistics<a href=\"https://gracefullight.dev/en/2025/08/06/fundamentals-of-data-analytics-002/#descriptive-statistics\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<ul>\n<li><strong>Purpose</strong>: Analyze past events using historical data</li>\n<li><strong>Data Source</strong>: Stored data from previous activities</li>\n<li><strong>Application</strong>: Assists companies to make informed decisions based on statistical analysis of historical patterns</li>\n<li><strong>Focus</strong>: \"What happened?\" - Understanding past performance and trends</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"predictive-statistics\">Predictive Statistics<a href=\"https://gracefullight.dev/en/2025/08/06/fundamentals-of-data-analytics-002/#predictive-statistics\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<ul>\n<li><strong>Purpose</strong>: Predict future events based on currently available data</li>\n<li><strong>Data Source</strong>: Present and historical data combined with analytical models</li>\n<li><strong>Application</strong>: Provides statements or predictions about events that have not yet occurred</li>\n<li><strong>Focus</strong>: \"What will happen?\" - Forecasting future outcomes and behaviors</li>\n</ul>\n<!-- -->\n<h2 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"data-analytics-results\">Data analytics results<a href=\"https://gracefullight.dev/en/2025/08/06/fundamentals-of-data-analytics-002/#data-analytics-results\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<blockquote>\n<p>The presentation of data analytics results needs to be understandable by humans, easily used, and accurate on computers.</p>\n</blockquote>\n<p>The effectiveness of different data analytics methods can be evaluated across two dimensions:</p>\n<ul>\n<li><strong>X-axis</strong>: Computer accuracy (how accurate the method is)</li>\n<li><strong>Y-axis</strong>: Human understandability (how easily humans can interpret the results)</li>\n</ul>\n<!-- -->\n<h2 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"ethical-principles\">Ethical Principles<a href=\"https://gracefullight.dev/en/2025/08/06/fundamentals-of-data-analytics-002/#ethical-principles\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<blockquote>\n<p>Despite the proliferation of ethical principles, some are especially significant for data analytics and AI solutions and must be implemented as mandatory ethical principles.</p>\n</blockquote>\n<p>The five core mandatory ethical principles for AI and data analytics are:</p>\n<!-- -->\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"1-transparency\">1. Transparency<a href=\"https://gracefullight.dev/en/2025/08/06/fundamentals-of-data-analytics-002/#1-transparency\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<blockquote>\n<p>The need to describe, inspect and reproduce the mechanisms through which AI systems make decisions and learn to adapt to their environment.</p>\n</blockquote>\n<p><strong>Key Components</strong> (EU AI HLEG):</p>\n<ul>\n<li><strong>Traceability</strong>: Understanding the data flow and decision path</li>\n<li><strong>Explainability</strong>: Providing reasonable explanations for AI outputs</li>\n<li><strong>Communication</strong>: Clear information sharing with stakeholders</li>\n</ul>\n<p><strong>Stakeholder Requirements</strong>:</p>\n<ul>\n<li><strong>Users</strong>: Understanding what the system is doing and why</li>\n<li><strong>Creators</strong>: Validation and certification of AI systems</li>\n<li><strong>Operators</strong>: Understanding processes and input data</li>\n<li><strong>Investigators</strong>: Accident investigation capabilities</li>\n<li><strong>Regulators</strong>: Investigation and compliance support</li>\n<li><strong>Legal System</strong>: Evidence and decision-making support</li>\n<li><strong>Public</strong>: Building confidence in technology</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"2-fairness\">2. Fairness<a href=\"https://gracefullight.dev/en/2025/08/06/fundamentals-of-data-analytics-002/#2-fairness\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<blockquote>\n<p>A complex, multi-faceted concept ensuring AI systems do not discriminate against individuals or groups.</p>\n</blockquote>\n<p><strong>Types of Fairness</strong>:</p>\n<ul>\n<li><strong>Process Fairness</strong>: Ethical methods regardless of outcome</li>\n<li><strong>Outcome Fairness</strong>: Ensuring algorithmic outputs don't perpetuate bias</li>\n</ul>\n<p><strong>Ethical Perspectives</strong>:</p>\n<ul>\n<li><strong>Equity</strong>: Discretion and fairness in applying justice</li>\n<li><strong>Social Justice</strong>: Equality and solidarity in society</li>\n<li><strong>Distributive Justice</strong>: Appropriate distribution of benefits</li>\n<li><strong>Procedural Justice</strong>: Fair allocation procedures</li>\n<li><strong>Interactional Justice</strong>: Appropriate interpersonal treatment</li>\n</ul>\n<p><strong>EU AI HLEG Components</strong>:</p>\n<ul>\n<li>Avoidance of bias</li>\n<li>Accessibility and universal design</li>\n<li>Stakeholder participation</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"3-accountability\">3. Accountability<a href=\"https://gracefullight.dev/en/2025/08/06/fundamentals-of-data-analytics-002/#3-accountability\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<blockquote>\n<p>Clear acknowledgement and assumption of responsibility for AI actions, decisions, and impacts.</p>\n</blockquote>\n<p><strong>Three Types of AI Accountability</strong>:</p>\n<ol>\n<li><strong>System-Level</strong>: AI's ability to explain and justify decisions</li>\n<li><strong>Individual/Group</strong>: Determining who is responsible for AI impacts</li>\n<li><strong>Sociotechnical</strong>: Broader system accountability for development and deployment</li>\n</ol>\n<p><strong>EU AI HLEG Components</strong>:</p>\n<ul>\n<li><strong>Auditability</strong>: Systems can be examined and verified</li>\n<li><strong>Impact Reporting</strong>: Minimizing and documenting negative effects</li>\n<li><strong>Trade-off Documentation</strong>: Recording decision rationales</li>\n<li><strong>Redress Ability</strong>: Mechanisms for addressing harm</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"4-privacy\">4. Privacy<a href=\"https://gracefullight.dev/en/2025/08/06/fundamentals-of-data-analytics-002/#4-privacy\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<blockquote>\n<p>The right to control how personal data is collected, stored, modified, used, and exchanged.</p>\n</blockquote>\n<p><strong>Seven Types of Privacy</strong> (Finn et al.):</p>\n<ol>\n<li><strong>Privacy of the Person</strong>: Body functions and characteristics (biometrics, genetics)</li>\n<li><strong>Privacy of Behaviour</strong>: Sensitive activities (political, religious, sexual preferences)</li>\n<li><strong>Privacy of Communication</strong>: Private communications protection</li>\n<li><strong>Privacy of Data and Image</strong>: Control over personal data and images</li>\n<li><strong>Privacy of Thoughts and Feelings</strong>: Mental privacy rights</li>\n<li><strong>Privacy of Location and Space</strong>: Movement without tracking</li>\n<li><strong>Privacy of Association</strong>: Freedom to associate without monitoring</li>\n</ol>\n<p><strong>Key Considerations</strong>:</p>\n<ul>\n<li><strong>GDPR Compliance</strong>: EU data protection regulations</li>\n<li><strong>Data Minimization</strong>: Using only necessary data</li>\n<li><strong>Consent Management</strong>: Clear user permissions</li>\n<li><strong>Data Security</strong>: Protecting against breaches</li>\n</ul>\n<p><strong>EU AI HLEG Components</strong>:</p>\n<ul>\n<li>Respect for privacy and data protection</li>\n<li>Quality and integrity of data</li>\n<li>Access to data</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"5-community-benefit\">5. Community Benefit<a href=\"https://gracefullight.dev/en/2025/08/06/fundamentals-of-data-analytics-002/#5-community-benefit\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<blockquote>\n<p>AI should deliver clear community or government benefits and maximize social value.</p>\n</blockquote>\n<p><strong>Core Requirements</strong>:</p>\n<ul>\n<li><strong>Public Good</strong>: Solutions must serve broader community interests</li>\n<li><strong>Benefit Maximization</strong>: Optimizing positive social impact</li>\n<li><strong>Alternative Consideration</strong>: Evaluating AI against other analysis tools</li>\n<li><strong>Default Principle</strong>: Should be standard for all AI solutions</li>\n</ul>\n<!-- -->\n<h2 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"knime\">KNIME<a href=\"https://gracefullight.dev/en/2025/08/06/fundamentals-of-data-analytics-002/#knime\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<p><img decoding=\"async\" loading=\"lazy\" alt=\"KNIME\" src=\"https://gracefullight.dev/en/assets/images/fundamentals-of-data-analytics-knime-002-27b9c836c08c087c91757fd8e2186d94.png\" width=\"1072\" height=\"508\" class=\"img_f7zd\"></p>",
            "url": "https://gracefullight.dev/en/2025/08/06/fundamentals-of-data-analytics-002/",
            "title": "Fundamentals of Data Analytics @002",
            "summary": "Fundamentals of Data Analytics @002",
            "date_modified": "2025-08-06T02:58:52.085Z",
            "author": {
                "name": "Gracefullight",
                "url": "https://github.com/gracefullight"
            },
            "tags": [
                "fda"
            ]
        },
        {
            "id": "https://gracefullight.dev/en/vocab/vocab-ai-003/",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"vocabulary--expressions\">Vocabulary &amp; Expressions<a href=\"https://gracefullight.dev/en/vocab/vocab-ai-003/#vocabulary--expressions\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<table><thead><tr><th>Term/Expression</th><th>Definition</th><th>Simpler Paraphrase</th><th>Meaning</th></tr></thead><tbody><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/asymptotic\" target=\"_blank\" rel=\"noopener noreferrer\">asymptotic</a></td><td>Approaching a limit as a variable approaches infinity; not reaching it but getting infinitely close</td><td>Getting closer and closer to a value without actually reaching it</td><td>점근적인, 무한히 가까워지는</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/consult\" target=\"_blank\" rel=\"noopener noreferrer\">consult</a></td><td>to get information or advice from a person, book, etc. with special knowledge on a particular subject</td><td>refer to</td><td>참고하다</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/applicable\" target=\"_blank\" rel=\"noopener noreferrer\">applicable</a></td><td>relevant or appropriate to a particular situation</td><td>relevant</td><td>적용 가능한, 관련 있는</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/proximity\" target=\"_blank\" rel=\"noopener noreferrer\">proximity</a></td><td>nearness in space, time, or relationship</td><td>closeness</td><td>근접성, 가까움</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/swamp\" target=\"_blank\" rel=\"noopener noreferrer\">swamp</a></td><td>to exchange or trade one thing for another</td><td>exchange</td><td>교환하다, 바꾸다</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/concise\" target=\"_blank\" rel=\"noopener noreferrer\">concise</a></td><td>giving a lot of information clearly and in a few words; brief but comprehensive</td><td>brief and clear</td><td>간결한, 요약된</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/idiosyncratic\" target=\"_blank\" rel=\"noopener noreferrer\">idiosyncratic</a></td><td>peculiar or individual; unique to a particular person or group</td><td>unique or characteristic</td><td>특이한, 개인적인</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/designate\" target=\"_blank\" rel=\"noopener noreferrer\">designate</a></td><td>to officially assign a specified role or purpose</td><td>appoint or assign</td><td>지정하다, 임명하다</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/egocentric\" target=\"_blank\" rel=\"noopener noreferrer\">egocentric</a></td><td>thinking only of oneself, without regard for the feelings or desires of others; self-centered</td><td>self-centered</td><td>자기중심적인, 이기적인</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/conjecture\" target=\"_blank\" rel=\"noopener noreferrer\">conjecture</a></td><td>to guess, based on the appearance of a situation and not on proof</td><td>guess or speculate</td><td>추측하다, 억측하다</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/closure\" target=\"_blank\" rel=\"noopener noreferrer\">closure</a></td><td>the act of stopping operations of a business, school, hospital, etc</td><td>the act of closing something</td><td>폐쇄, 종료</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/complication\" target=\"_blank\" rel=\"noopener noreferrer\">complication</a></td><td>a factor that makes something more difficult or complex</td><td>difficulty or complexity</td><td>복잡함, 어려움</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/segment\" target=\"_blank\" rel=\"noopener noreferrer\">segment</a></td><td>a part or section of something, especially a larger whole</td><td>part or section</td><td>부분, 구간</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/monetary\" target=\"_blank\" rel=\"noopener noreferrer\">monetary</a></td><td>relating to money or currency</td><td>financial</td><td>화폐의, 금전적인</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/byzantine\" target=\"_blank\" rel=\"noopener noreferrer\">byzantine</a></td><td>excessively complicated, typically involving a great deal of administrative detail</td><td>overly complex</td><td>복잡한, 비잔틴식의</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/contingency\" target=\"_blank\" rel=\"noopener noreferrer\">contingency</a></td><td>a future event or circumstance that is possible but cannot be predicted with certainty</td><td>possibility</td><td>우발성, 불확실성</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/capacitance\" target=\"_blank\" rel=\"noopener noreferrer\">capacitance</a></td><td>the ability of a system to store an electric charge</td><td>ability to store charge</td><td>전기 용량, 축전 능력</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/roam\" target=\"_blank\" rel=\"noopener noreferrer\">roam</a></td><td>to move about or travel aimlessly or unsystematically, especially over a wide area</td><td>wander or travel freely</td><td>돌아다니다, 방랑하다</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/superimpose\" target=\"_blank\" rel=\"noopener noreferrer\">superimpose</a></td><td>to place or lay one thing over another, typically so that both are still evident</td><td>overlay or place on top</td><td>겹치다, 중첩하다</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/correspond\" target=\"_blank\" rel=\"noopener noreferrer\">correspond</a></td><td>to be in agreement or conformity with something; to match or be similar</td><td>match or agree</td><td>일치하다, 부합하다</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/separation\" target=\"_blank\" rel=\"noopener noreferrer\">separation</a></td><td>the action or state of moving or being moved apart; the division of something into parts</td><td>division or disconnection</td><td>분리, 구분</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/clockwise\" target=\"_blank\" rel=\"noopener noreferrer\">clockwise</a></td><td>in a circular direction, like the hands of a clock</td><td>in a circular direction</td><td>시계 방향으로</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/superimpose\" target=\"_blank\" rel=\"noopener noreferrer\">superimpose</a></td><td>to put especially a picture, words, etc. on top of something else, especially another picture, words, etc., so that what is in the lower position can still be seen, heard, etc</td><td>overlay or place on top</td><td>겹치다, 중첩하다</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/indication\" target=\"_blank\" rel=\"noopener noreferrer\">indication</a></td><td>a sign or piece of information that indicates something; a suggestion or hint</td><td>sign or suggestion</td><td>표시, 징후</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/assemblage\" target=\"_blank\" rel=\"noopener noreferrer\">assemblage</a></td><td>a collection or gathering of things or people; a group of items or individuals that are put together</td><td>collection or group</td><td>집합, 모임</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/explicit\" target=\"_blank\" rel=\"noopener noreferrer\">explicit</a></td><td>stated clearly and in detail, leaving no room for confusion or doubt; fully expressed</td><td>clear and detailed</td><td>명시적인, 분명한</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/implicitly\" target=\"_blank\" rel=\"noopener noreferrer\">implicitly</a></td><td>in a way that is not directly expressed but understood; implied or suggested without being stated</td><td>indirectly implied</td><td>암묵적으로, 내포되어</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/exponential\" target=\"_blank\" rel=\"noopener noreferrer\">exponential</a></td><td>relating to or denoting an increase that becomes more and more rapid as the amount increases; characterized by a rapid increase</td><td>rapidly increasing</td><td>기하급수적인, 지수의</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/heuristic\" target=\"_blank\" rel=\"noopener noreferrer\">heuristic</a></td><td>a problem-solving approach that employs a practical method not guaranteed to be optimal or perfect, but sufficient for immediate goals</td><td>practical problem-solving method</td><td>휴리스틱, 경험적 방법</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/correlate\" target=\"_blank\" rel=\"noopener noreferrer\">correlate</a></td><td>to show or establish a relationship between two or more things; to connect or associate</td><td>connect or associate</td><td>상관관계가 있다, 관련시키다</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/contradiction\" target=\"_blank\" rel=\"noopener noreferrer\">contradiction</a></td><td>a situation in which two or more statements, ideas, or actions are opposed to one another; a statement that asserts the opposite of another</td><td>opposition or inconsistency</td><td>모순, 반대</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/supposition\" target=\"_blank\" rel=\"noopener noreferrer\">supposition</a></td><td>an uncertain belief or idea that is accepted as true for the sake of argument or investigation; an assumption</td><td>assumption or belief</td><td>가정, 추정</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/suboptimal\" target=\"_blank\" rel=\"noopener noreferrer\">suboptimal</a></td><td>not the best or most effective; less than optimal in quality or performance</td><td>less than ideal</td><td>최적 이하의, 비효율적인</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/stipulate\" target=\"_blank\" rel=\"noopener noreferrer\">stipulate</a></td><td>to demand or specify a requirement, typically as part of an agreement; to make an express condition</td><td>require or specify</td><td>규정하다, 명시하다</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/implementer\" target=\"_blank\" rel=\"noopener noreferrer\">implementer</a></td><td>a person or entity that puts a plan, decision, or agreement into effect; someone who carries out a task or policy</td><td>executor or enforcer</td><td>실행자, 이행자</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/contour\" target=\"_blank\" rel=\"noopener noreferrer\">contour</a></td><td>the outline or shape of something, especially as it relates to its surface; the outer boundary or edge</td><td>outline or shape</td><td>윤곽, 외형</td></tr><tr><td><a href=\"https://dictionary.cambridge.org/dictionary/english/admissibility\" target=\"_blank\" rel=\"noopener noreferrer\">admissibility</a></td><td>the fact of being considered satisfactory and acceptable in a law court</td><td>acceptability or permissibility</td><td>수용 가능성, 허용 가능성</td></tr></tbody></table>",
            "url": "https://gracefullight.dev/en/vocab/vocab-ai-003/",
            "title": "Vocabulary for AI @003",
            "summary": "Vocabulary for AI @003",
            "date_modified": "2025-08-05T10:23:00.000Z",
            "author": {
                "name": "Gracefullight",
                "url": "https://github.com/gracefullight"
            },
            "tags": [
                "vocab"
            ]
        },
        {
            "id": "https://gracefullight.dev/en/2025/08/05/introduction-to-ai-001/",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"ai\">AI<a href=\"https://gracefullight.dev/en/2025/08/05/introduction-to-ai-001/#ai\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<blockquote>\n<p>AI refers to the simulation of human intelligence in machines that are programmed to think like humans and mimic their actions.</p>\n</blockquote>\n<ul>\n<li>As a research field, AI aims to develop techniques including algorithms, methods and models to enable systems to perform tasks which require intelligence when performed by humans.</li>\n<li>AI is concerned with developing machines or computer agents that are capable of performing tasks that typically require human intelligence.</li>\n<li>AI is about the study and construction of agent programs that perform well in a given environment, for a given agent architecture.</li>\n<li>AI is a true universal field.</li>\n<li>The term \"Artificial Intelligence\" was coined by John McCarthy for the Dartmouth Summer Research Project in 1956, marking the formal beginning of AI as a research field.</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"history\">History<a href=\"https://gracefullight.dev/en/2025/08/05/introduction-to-ai-001/#history\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<ul>\n<li>1943-1956: Inception of AI</li>\n<li>1966-1973: A dose of reality</li>\n<li>1969-1986: Expert systems</li>\n<li>2011-present: Deep learning</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"turing-reward-winners\">Turing reward winners<a href=\"https://gracefullight.dev/en/2025/08/05/introduction-to-ai-001/#turing-reward-winners\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<ul>\n<li>Defining the foundation of the field based on representation and reasoning<!-- -->\n<ul>\n<li>1969 Marvin Minsky</li>\n<li>1971 John McCarthy</li>\n</ul>\n</li>\n<li>Making fundamental contributions to AI and human cognition<!-- -->\n<ul>\n<li>1975 Allen Newell &amp; Herbert Simon</li>\n</ul>\n</li>\n<li>Developing expert systems that encode human knowledge to solve real-world problems<!-- -->\n<ul>\n<li>Ed Feigenbaum &amp; Raj Reddy</li>\n</ul>\n</li>\n<li>Honored for \"probably approximately correct learning (PAC learning)\", a foundational theoretical framework for AI and ML<!-- -->\n<ul>\n<li>2010 Leslie Valiant</li>\n</ul>\n</li>\n<li>Developing probabilistic reasoning techniques that deal with uncertainty in a principled manner<!-- -->\n<ul>\n<li>2011 Judea Pearl</li>\n</ul>\n</li>\n<li>Making \"deep learning\" a critical part of modern computing.<!-- -->\n<ul>\n<li>2018 Yoshua Bengio &amp; Geoffrey Hinton &amp; Yann LeCun</li>\n</ul>\n</li>\n<li>Recognized for lifetime contributions to reinforcement learning, a core method in modern AI<!-- -->\n<ul>\n<li>2024 Andrew Barto &amp; Richard Sutton</li>\n</ul>\n</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"nobel-prize-in-physics\">Nobel Prize in Physics<a href=\"https://gracefullight.dev/en/2025/08/05/introduction-to-ai-001/#nobel-prize-in-physics\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<ul>\n<li>For foundational discoveries and inventions that enable machine learning with artificial neural networks<!-- -->\n<ul>\n<li>2024 John J. Hopfield &amp; Geoffrey Hinton</li>\n</ul>\n</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"dimensions-of-ai\">Dimensions of AI<a href=\"https://gracefullight.dev/en/2025/08/05/introduction-to-ai-001/#dimensions-of-ai\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<blockquote>\n<p>Action (Behavior) vs Thinking (Thought)</p>\n</blockquote>\n<!-- -->\n<h2 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"ai-tree\">AI Tree<a href=\"https://gracefullight.dev/en/2025/08/05/introduction-to-ai-001/#ai-tree\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<!-- -->\n<h2 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"peas\">PEAS<a href=\"https://gracefullight.dev/en/2025/08/05/introduction-to-ai-001/#peas\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<p><img decoding=\"async\" loading=\"lazy\" alt=\"PEAS\" src=\"https://gracefullight.dev/en/assets/images/peas-925bfa41135b93dc5461e17a24bfe85a.png\" width=\"1206\" height=\"586\" class=\"img_f7zd\"></p>\n<ul>\n<li>Performance: The performance measure that defines the criterion of success</li>\n<li>Environment: The agent’s prior knowledge of the environment</li>\n<li>Actuators: The actions that the agent can perform through actuators</li>\n<li>Sensors: The agent’s percept sequence to date through sensors</li>\n</ul>\n<table><thead><tr><th>Agent Type</th><th>Performance Measure</th><th>Environment</th><th>Actuators</th><th>Sensors</th></tr></thead><tbody><tr><td>Taxi driver</td><td>Safe, fast, comfortable transportation</td><td>Roads, traffic, passengers</td><td>Steering wheel, accelerator, brakes</td><td>Cameras, GPS, speedometer</td></tr><tr><td>Medical diagnosis system</td><td>Healthy patient, reduced costs</td><td>Patient, hospital, staff</td><td>Display of questions, tests, diagnosis, treatments</td><td>Touchscreen/voice entry of symptoms and findings</td></tr><tr><td>Satellite image analysis system</td><td>Correct categorization of objects, terrain</td><td>Orbiting satellite, downlink weather</td><td>Display of scene categorization</td><td>High-resolution digital camera</td></tr></tbody></table>\n<h2 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"rational-agent\">Rational Agent<a href=\"https://gracefullight.dev/en/2025/08/05/introduction-to-ai-001/#rational-agent\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<blockquote>\n<p>Agent = architecture + program</p>\n</blockquote>\n<ul>\n<li>Agent function: abstract mathematical description</li>\n<li>Agent program: concrete implementation, running within some physical system</li>\n<li>Agent architecture: running on some sort of computing device with physical sensors and actuators</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"weak-vs-strong-ai\">Weak vs Strong AI<a href=\"https://gracefullight.dev/en/2025/08/05/introduction-to-ai-001/#weak-vs-strong-ai\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<ul>\n<li>Weak AI: treats a computer as a device that can simulate the performance of a brain</li>\n<li>Strong AI: a theoretical form of machine intelligence that is equal to human intelligence.</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"why-ai-becoming-so-hot\">Why AI becoming so hot<a href=\"https://gracefullight.dev/en/2025/08/05/introduction-to-ai-001/#why-ai-becoming-so-hot\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<ul>\n<li>Big data</li>\n<li>Cloud computing</li>\n<li>Deep learning</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"risks\">Risks<a href=\"https://gracefullight.dev/en/2025/08/05/introduction-to-ai-001/#risks\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<ul>\n<li>Lethal autonomous weapons</li>\n<li>Surveillance and persuasion</li>\n<li>Biased decision making</li>\n</ul>",
            "url": "https://gracefullight.dev/en/2025/08/05/introduction-to-ai-001/",
            "title": "Introduction to Artificial Intelligence @001",
            "summary": "Introduction to Artificial Intelligence @001",
            "date_modified": "2025-08-05T04:44:13.745Z",
            "author": {
                "name": "Gracefullight",
                "url": "https://github.com/gracefullight"
            },
            "tags": [
                "iai"
            ]
        },
        {
            "id": "https://gracefullight.dev/en/2025/08/04/fundamentals-of-software-development-002/",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"classes--objects\">Classes &amp; Objects<a href=\"https://gracefullight.dev/en/2025/08/04/fundamentals-of-software-development-002/#classes--objects\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"class\">Class<a href=\"https://gracefullight.dev/en/2025/08/04/fundamentals-of-software-development-002/#class\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<ul>\n<li>A template that defines the attributes and methods of an object, which can be used to create many objects.</li>\n<li>Name of the class is noun.</li>\n<li>Functions are defined in the class, containing the function data.</li>\n<li>Many objects can be created from the same class.</li>\n<li>A class can be inherited by many sub-classes</li>\n<li>A child class can have one or more parent classes. (super-classes)</li>\n<li>Encapsulated data</li>\n<li>Behaviors of a class are exposed while the implementation is hidden.</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"object\">Object<a href=\"https://gracefullight.dev/en/2025/08/04/fundamentals-of-software-development-002/#object\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<ul>\n<li>An instance of a class, created the class template during runtime.</li>\n<li>Object-oriented software is composed of many objects</li>\n<li>a composite data type identified by its attributes (fields) and behaviors (functions), which are defined in the class.</li>\n<li>object-oriented design analysis: to identify the classes and relationships between the classes to model how the system would work.</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"procedure--function\">Procedure &amp; Function<a href=\"https://gracefullight.dev/en/2025/08/04/fundamentals-of-software-development-002/#procedure--function\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<table><thead><tr><th>Aspect</th><th>Procedure</th><th>Function</th></tr></thead><tbody><tr><td>Returns value?</td><td>❌ Usually does <strong>not</strong> return a value</td><td>✅ Usually <strong>returns</strong> a value</td></tr><tr><td>Purpose</td><td>Perform an action</td><td>Compute and return a result</td></tr></tbody></table>\n<h2 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"object-oriented-paradigm-principles\">Object-Oriented Paradigm Principles<a href=\"https://gracefullight.dev/en/2025/08/04/fundamentals-of-software-development-002/#object-oriented-paradigm-principles\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"abstraction\">Abstraction<a href=\"https://gracefullight.dev/en/2025/08/04/fundamentals-of-software-development-002/#abstraction\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<ul>\n<li>hides the internal implementation of functions and expose to other class the behavior of those functions.</li>\n<li>Data abstraction: hide the variables stored the data and only expose the values.</li>\n<li>Function abstraction: hide the function code and only export the function behavior.</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"encapsulation\">Encapsulation<a href=\"https://gracefullight.dev/en/2025/08/04/fundamentals-of-software-development-002/#encapsulation\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<ul>\n<li>a fundamental principle of OOP, increases data and code security, enhances performance by reducing object interactions.</li>\n<li>minimize the number of interactions from outside.</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"inheritance\">Inheritance<a href=\"https://gracefullight.dev/en/2025/08/04/fundamentals-of-software-development-002/#inheritance\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<ul>\n<li>allows classes to have sub-classes.</li>\n<li>a parent class can have many children.</li>\n<li>a child class can have more than one parent.</li>\n<li>a child class inherits their parent class and can also override them.</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"polymorphism\">Polymorphism<a href=\"https://gracefullight.dev/en/2025/08/04/fundamentals-of-software-development-002/#polymorphism\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<ul>\n<li>more of the same type of object can be used interchangeably.</li>\n<li>object of different types to be treated as objects of a common parent.</li>\n<li>multiple object types with the same parent can implement the same function in different ways.</li>\n<li>multiple object types with the same parent can use the same attributes with different values.</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"object-oriented-design\">Object-Oriented Design<a href=\"https://gracefullight.dev/en/2025/08/04/fundamentals-of-software-development-002/#object-oriented-design\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<ul>\n<li>The process of designing a software using oop.</li>\n<li>Identify the classes\n-&gt; Identify the classes' attributes and behaviors\n-&gt; Identify the how classes interact with each other and create a visual class model</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"identify-classes\">Identify classes<a href=\"https://gracefullight.dev/en/2025/08/04/fundamentals-of-software-development-002/#identify-classes\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<ul>\n<li>Classes are derived from use cases and actors described in the requirement analysis process.</li>\n<li>Classes should be identified exactly as needed.</li>\n<li>Reduce coupling and enable extensibility.</li>\n<li>Identifying a class always requires to identify the fields and methods.</li>\n<li>A class can use the methods of another class.\n-&gt; one class (the client) uses or depends on another class (the supplier).</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"uml-class-diagram\">UML Class diagram<a href=\"https://gracefullight.dev/en/2025/08/04/fundamentals-of-software-development-002/#uml-class-diagram\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<ul>\n<li>UML visual representation of the object-oriented software system.</li>\n<li>Describes the attributes and operations of classes, relationships, and any constraints.</li>\n<li>Used as a plan to construct executable code and define the way in which objects may interact.</li>\n</ul>\n<!-- -->\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"associations\">Associations<a href=\"https://gracefullight.dev/en/2025/08/04/fundamentals-of-software-development-002/#associations\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<ul>\n<li>a relationship between classes indicating a meaningful connection.</li>\n<li>Labelled by<!-- -->\n<ul>\n<li>Association name</li>\n<li>Role name</li>\n<li>Multiplicity</li>\n<li>Navigability</li>\n</ul>\n</li>\n</ul>\n<!-- -->\n<h4 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"multiplicity\">Multiplicity<a href=\"https://gracefullight.dev/en/2025/08/04/fundamentals-of-software-development-002/#multiplicity\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h4>\n<ul>\n<li>how many instances of type A can be associated with on instance of type B.</li>\n</ul>\n<!-- -->\n<h4 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"recursive-or-reflexive-association\">Recursive or reflexive association<a href=\"https://gracefullight.dev/en/2025/08/04/fundamentals-of-software-development-002/#recursive-or-reflexive-association\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h4>\n<ul>\n<li>a class can have an association with itself.</li>\n</ul>\n<!-- -->\n<h4 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"attributes\">Attributes<a href=\"https://gracefullight.dev/en/2025/08/04/fundamentals-of-software-development-002/#attributes\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h4>\n<!-- -->\n<ul>\n<li>m<!-- -->:m<!-- --> association can be divided into two 1<!-- -->:m<!-- --> associations.</li>\n</ul>\n<!-- -->\n<h4 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"association-classes\">Association Classes<a href=\"https://gracefullight.dev/en/2025/08/04/fundamentals-of-software-development-002/#association-classes\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h4>\n<ul>\n<li>An attribute is related to an association.</li>\n<li>Instance of the association class have a life-time dependency on the association.</li>\n</ul>\n<!-- -->\n<ul>\n<li>an associative type should exist in the background somewhere.</li>\n</ul>\n<!-- -->\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"generalization--specialization\">Generalization &amp; Specialization<a href=\"https://gracefullight.dev/en/2025/08/04/fundamentals-of-software-development-002/#generalization--specialization\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<ul>\n<li>Generalization: the activity of identifying commonalities among concepts and defining superclass (general concept) and subclass (specialized concepts) relationships.</li>\n<li>\"is-a\" relationship</li>\n<li>a subclass inherits from a superclass.</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"benefits-of-generalization\">Benefits of generalization<a href=\"https://gracefullight.dev/en/2025/08/04/fundamentals-of-software-development-002/#benefits-of-generalization\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<ul>\n<li>Code Reusability</li>\n<li>Cleaner/Simplified design</li>\n<li>Scalability</li>\n<li>Extensibility</li>\n<li>Easier Maintenance</li>\n<li>Testability</li>\n<li>Modularity</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"class-inheritance\">Class inheritance<a href=\"https://gracefullight.dev/en/2025/08/04/fundamentals-of-software-development-002/#class-inheritance\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<ul>\n<li>same as generalization and specialization.</li>\n<li>the subclasses inherit the attributes and methods of the superclasses.</li>\n</ul>\n<!-- -->\n<ul>\n<li>When a hierarchy is created, statements about the superclass apply to subclasses.</li>\n<li>A conceptual subclass should be a member of the set of the superclass.</li>\n<li>The conceptual subclass is a kind of superclass.</li>\n<li><code>&lt;subclass&gt; is a &lt;superclass&gt;</code></li>\n<li>Every instance of the <code>&lt;subclass&gt;</code> can be viewed as an instance of the <code>&lt;superclass&gt;</code>.</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"subclass\">Subclass<a href=\"https://gracefullight.dev/en/2025/08/04/fundamentals-of-software-development-002/#subclass\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<ul>\n<li>has additional attributes of interest.</li>\n<li>has additional associations of interest.</li>\n<li>is handled differently than the superclass or other subclasses.</li>\n<li>represents an object that behaves differently than the superclass or other subclasses.</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"superclass\">Superclass<a href=\"https://gracefullight.dev/en/2025/08/04/fundamentals-of-software-development-002/#superclass\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<ul>\n<li>Create a conceptual superclass when:<!-- -->\n<ul>\n<li>The potential conceptual subclasses represent variations of a similar concept.</li>\n<li>The subclass fully conforms to the attributes and associations of its superclass. (100% rule)</li>\n</ul>\n</li>\n<li>All subclasses have the same attributes and operations which can be factored out and expressed in the superclass.</li>\n<li>All subclasses have the same associations which can be factored out and related to the superclass.</li>\n</ul>\n<!-- -->\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"abstract-class\">Abstract Class<a href=\"https://gracefullight.dev/en/2025/08/04/fundamentals-of-software-development-002/#abstract-class\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<ul>\n<li>a parent class that cannot be instantiated.</li>\n<li>at least one of its operations is abstract.</li>\n<li>an abstract operation has its signature defined in the abstract parent class, but the implementation is defined in the child class.</li>\n<li>create a high-level modelling vocabulary.</li>\n</ul>\n<!-- -->\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"interface--realization\">Interface &amp; Realization<a href=\"https://gracefullight.dev/en/2025/08/04/fundamentals-of-software-development-002/#interface--realization\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<ul>\n<li>a class with no attributes.</li>\n<li>can't be instantiated.</li>\n<li>simply declares a contract that may be realized by zero or more classes.</li>\n<li>to separate the specification from its implementation.</li>\n<li>only defines a specification for what the class should do and it never implies how it should do it.</li>\n<li>the class implementing an interface has a realization relationship with the interface.</li>\n</ul>\n<!-- -->\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"aggregation\">Aggregation<a href=\"https://gracefullight.dev/en/2025/08/04/fundamentals-of-software-development-002/#aggregation\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<ul>\n<li>a type of whole-part relationship in which the aggregate is made up of many parts.</li>\n<li>Signified with a hollow diamond.</li>\n<li>implies the part may be in many composite instances.</li>\n</ul>\n<!-- -->\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"composition\">Composition<a href=\"https://gracefullight.dev/en/2025/08/04/fundamentals-of-software-development-002/#composition\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<ul>\n<li>a stronger form of aggregation.</li>\n<li>the multiplicity at the composite end may be at most one</li>\n<li>Signified with a filled diamond.</li>\n<li>There is a create-delete dependency. Their lifetime is bound within the lifetime of the composite.</li>\n</ul>\n<!-- -->\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"dependency\">Dependency<a href=\"https://gracefullight.dev/en/2025/08/04/fundamentals-of-software-development-002/#dependency\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<ul>\n<li>a relationship between two or more model elements whereby a change to one element</li>\n<li>The most common dependency stereotype is <code>&lt;&lt;use&gt;&gt;</code>, which simply states that the client makes use of the supplier in some way.</li>\n</ul>\n<!-- -->\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"visibility\">Visibility<a href=\"https://gracefullight.dev/en/2025/08/04/fundamentals-of-software-development-002/#visibility\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<ul>\n<li><code>+</code> public</li>\n<li><code>-</code> private</li>\n<li><code>#</code> protected</li>\n<li><code>~</code> package</li>\n</ul>\n<!-- -->\n<h3 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"example\">Example<a href=\"https://gracefullight.dev/en/2025/08/04/fundamentals-of-software-development-002/#example\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<!-- -->\n<h2 class=\"anchor anchorWithStickyNavbar_IhMp\" id=\"uml-tools\">UML Tools<a href=\"https://gracefullight.dev/en/2025/08/04/fundamentals-of-software-development-002/#uml-tools\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<ul>\n<li><a href=\"https://www.draw.io/\" target=\"_blank\" rel=\"noopener noreferrer\">Draw.io</a></li>\n<li><a href=\"https://www.lucidchart.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Lucidchart</a></li>\n<li><a href=\"https://www.visual-paradigm.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Visual Paradigm</a></li>\n<li><a href=\"https://staruml.io/\" target=\"_blank\" rel=\"noopener noreferrer\">StarUML</a></li>\n<li><a href=\"https://creately.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Creately</a></li>\n<li><a href=\"https://www.planttext.com/\" target=\"_blank\" rel=\"noopener noreferrer\">PlantUML</a></li>\n</ul>",
            "url": "https://gracefullight.dev/en/2025/08/04/fundamentals-of-software-development-002/",
            "title": "Fundamentals of software development @002",
            "summary": "Fundamentals of software development @002",
            "date_modified": "2025-08-04T02:49:53.887Z",
            "author": {
                "name": "Gracefullight",
                "url": "https://github.com/gracefullight"
            },
            "tags": [
                "fsd"
            ]
        }
    ]
}