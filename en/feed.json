{
    "version": "https://jsonfeed.org/version/1",
    "title": "gracefullight.dev Blog",
    "home_page_url": "https://gracefullight.dev/en/",
    "description": "gracefullight.dev Blog",
    "items": [
        {
            "id": "https://gracefullight.dev/en/pe/ca/tia-942/",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"tia-942-개념\">TIA-942 개념<a href=\"https://gracefullight.dev/en/pe/ca/tia-942/#tia-942-%EA%B0%9C%EB%85%90\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<ul>\n<li>미 통신산업협회가 제정한 데이터센터 설계 및 운영에 필요한 최소 요건을 규정한 데이터 센터 인프라의 Defacto 표준</li>\n<li>데이터센터 안정성, 신뢰성, 확장성, 보안지침 제공, 데이터센터 품질 평가기준</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"tia-942-구성도-품질등급\">TIA-942 구성도, 품질등급<a href=\"https://gracefullight.dev/en/pe/ca/tia-942/#tia-942-%EA%B5%AC%EC%84%B1%EB%8F%84-%ED%92%88%EC%A7%88%EB%93%B1%EA%B8%89\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<h3 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"tia-942-구성도\">TIA-942 구성도<a href=\"https://gracefullight.dev/en/pe/ca/tia-942/#tia-942-%EA%B5%AC%EC%84%B1%EB%8F%84\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<!-- -->\n<h3 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"tia-942-품질등급-개념도\">TIA-942 품질등급 개념도<a href=\"https://gracefullight.dev/en/pe/ca/tia-942/#tia-942-%ED%92%88%EC%A7%88%EB%93%B1%EA%B8%89-%EA%B0%9C%EB%85%90%EB%8F%84\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<p><img decoding=\"async\" loading=\"lazy\" alt=\"tia-942\" src=\"https://gracefullight.dev/en/assets/images/tia-942-06f4e5bd7969b8b60766e56180ae4c00.jpg\" width=\"1278\" height=\"620\" class=\"img_xC7_\"></p>\n<h3 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"tia-942-품질등급-상세설명\">TIA-942 품질등급 상세설명<a href=\"https://gracefullight.dev/en/pe/ca/tia-942/#tia-942-%ED%92%88%EC%A7%88%EB%93%B1%EA%B8%89-%EC%83%81%EC%84%B8%EC%84%A4%EB%AA%85\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<table><thead><tr><th>구분</th><th>Tier1</th><th>Tier2</th><th>Tier3</th><th>Tier4</th></tr></thead><tbody><tr><td>장애영향</td><td>비/계획된 액티비티에 대한 사이트 영향 높음</td><td>비/계획된 액티비티에 대한 사이트 영향 보통</td><td>계획된 액티비티에 대한 컴퓨팅 HW 운영지장 없음</td><td>계획된 액티비티에 대한 임계부하 없음</td></tr><tr><td></td><td></td><td></td><td>비계획 작업은 영향</td><td>비계획 액티비티 임계부하 적어도 1번 방어</td></tr><tr><td>전력/냉방시설 이중화</td><td>필요</td><td>N+1</td><td>N+1, 동시 활성화</td><td>2(N+1), 무정지상태</td></tr><tr><td>백본/라우터 이중화</td><td>없음</td><td>없음</td><td>필요</td><td>필요</td></tr><tr><td>적용기간</td><td>3개월</td><td>~6개월</td><td>15~20개월</td><td>15~20개월</td></tr><tr><td>MTTR</td><td>28.8h</td><td>22.0h</td><td>1.6h</td><td>0.4h</td></tr><tr><td>보안시설</td><td>일반 잠금장치</td><td>카드인식</td><td>생체인식</td><td>생체인식</td></tr></tbody></table>",
            "url": "https://gracefullight.dev/en/pe/ca/tia-942/",
            "title": "TIA-942",
            "summary": "TIA-942",
            "date_modified": "2025-01-28T01:08:36.602Z",
            "author": {
                "name": "Gracefullight",
                "url": "https://github.com/gracefullight"
            },
            "tags": [
                "professional-engineer",
                "pe/computer-architecture"
            ]
        },
        {
            "id": "https://gracefullight.dev/en/pe/ca/pim/",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"pim-개념\">PIM 개념<a href=\"https://gracefullight.dev/en/pe/ca/pim/#pim-%EA%B0%9C%EB%85%90\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<ul>\n<li>메모리 내부 연산 기능을 추가하여, 데이터 이동 없이 메모리 자체 연산 수행으로 성능 개선 및 에너지 효율을 높이는 메모리 반도체</li>\n<li>폰 논이만 구조 한계 극복, 추론 AI 패러다임, 데이ㅓ 병목 최소화, 저전력 설계</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"pim-개념도-pnm과의-비교-적용방안\">PIM 개념도, PNM과의 비교, 적용방안<a href=\"https://gracefullight.dev/en/pe/ca/pim/#pim-%EA%B0%9C%EB%85%90%EB%8F%84-pnm%EA%B3%BC%EC%9D%98-%EB%B9%84%EA%B5%90-%EC%A0%81%EC%9A%A9%EB%B0%A9%EC%95%88\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<h3 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"pim-개념도\">PIM 개념도<a href=\"https://gracefullight.dev/en/pe/ca/pim/#pim-%EA%B0%9C%EB%85%90%EB%8F%84\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<p><img decoding=\"async\" loading=\"lazy\" alt=\"pim\" src=\"https://gracefullight.dev/en/assets/images/pim-cdbd67f2a21eb186a72aac5e839f3967.jpg\" width=\"2262\" height=\"648\" class=\"img_xC7_\"></p>\n<h3 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"pim-pnm-비교\">PIM, PNM 비교<a href=\"https://gracefullight.dev/en/pe/ca/pim/#pim-pnm-%EB%B9%84%EA%B5%90\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<table><thead><tr><th>구분</th><th>PIM</th><th>PNM</th></tr></thead><tbody><tr><td>연산기 위치</td><td>DRAM 칩 내부</td><td>DRAM 근처 별도 칩</td></tr><tr><td>전송지연</td><td>없음</td><td>일부 있음</td></tr><tr><td>장점</td><td>데이터 이동 제거</td><td>범용성 확보</td></tr><tr><td></td><td>병렬처리 극대화</td><td>전력효율성</td></tr><tr><td>단점</td><td>범용성 낮음</td><td>상대적 낮은 성능</td></tr><tr><td>분야</td><td>추론 AI 등</td><td>고성능컴퓨팅, 데이터센터</td></tr></tbody></table>\n<h3 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"pim-적용바안\">PIM 적용바안<a href=\"https://gracefullight.dev/en/pe/ca/pim/#pim-%EC%A0%81%EC%9A%A9%EB%B0%94%EC%95%88\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<table><thead><tr><th>구분</th><th>내용</th><th>비고</th></tr></thead><tbody><tr><td>AI 가속기</td><td>AI 작업의 대규모 병렬 처리시 활용</td><td>음성인식, 이미지 처리</td></tr><tr><td>빅데이터 분석</td><td>대량 데이터 실시간 처리 최적화</td><td>SEM, EPM 등</td></tr><tr><td>고성능 컴퓨팅</td><td>GPU와 협업하여 워크로드 분산</td><td>MAC 연산 수행</td></tr></tbody></table>",
            "url": "https://gracefullight.dev/en/pe/ca/pim/",
            "title": "PIM, Processing In Memory",
            "summary": "Processing In Memory",
            "date_modified": "2025-01-28T00:46:42.874Z",
            "author": {
                "name": "Gracefullight",
                "url": "https://github.com/gracefullight"
            },
            "tags": [
                "professional-engineer",
                "pe/computer-architecture"
            ]
        },
        {
            "id": "https://gracefullight.dev/en/pe/ca/chiplet/",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"칩렛-개념\">칩렛 개념<a href=\"https://gracefullight.dev/en/pe/ca/chiplet/#%EC%B9%A9%EB%A0%9B-%EA%B0%9C%EB%85%90\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<ul>\n<li>여러 개의 작은 칩(다이)을 모듈화하여 하나의 패키지 안에서 상호연결하는 기술</li>\n<li>무어의 법칙 한계, 단일 SoC를 나누고 조합하여 유연한 아키텍처 제공, 설계/생산비용 절감</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"칩렛-개념도-구현-방법-장점\">칩렛 개념도, 구현 방법, 장점<a href=\"https://gracefullight.dev/en/pe/ca/chiplet/#%EC%B9%A9%EB%A0%9B-%EA%B0%9C%EB%85%90%EB%8F%84-%EA%B5%AC%ED%98%84-%EB%B0%A9%EB%B2%95-%EC%9E%A5%EC%A0%90\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<h3 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"칩렛-개념도\">칩렛 개념도<a href=\"https://gracefullight.dev/en/pe/ca/chiplet/#%EC%B9%A9%EB%A0%9B-%EA%B0%9C%EB%85%90%EB%8F%84\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<p><img decoding=\"async\" loading=\"lazy\" alt=\"chiplet\" src=\"https://gracefullight.dev/en/assets/images/chiplet-a826476a0852a685f6afac429cc48485.jpg\" width=\"2722\" height=\"798\" class=\"img_xC7_\"></p>\n<ul>\n<li>다이 슬롯 모듈화로 다양항 기능을 가진 이기종 칩을 결합하여 사용 가능</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"칩렛-구현-방법\">칩렛 구현 방법<a href=\"https://gracefullight.dev/en/pe/ca/chiplet/#%EC%B9%A9%EB%A0%9B-%EA%B5%AC%ED%98%84-%EB%B0%A9%EB%B2%95\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<table><thead><tr><th>구분</th><th>와이어본딩</th><th>플립칩 본딩</th><th>TSV</th></tr></thead><tbody><tr><td>개념도</td><td><img decoding=\"async\" loading=\"lazy\" alt=\"wire-bonding\" src=\"https://gracefullight.dev/en/assets/images/wire-bonding-63918e5feb718aac0666a4d6c822bfe7.jpg\" width=\"634\" height=\"294\" class=\"img_xC7_\"></td><td><img decoding=\"async\" loading=\"lazy\" alt=\"filp-chip-bonding\" src=\"https://gracefullight.dev/en/assets/images/flip-chip-bonding-97ca8c0ddee6d434640d79eafa6de79a.jpg\" width=\"620\" height=\"314\" class=\"img_xC7_\"></td><td><img decoding=\"async\" loading=\"lazy\" alt=\"through silicon via\" src=\"https://gracefullight.dev/en/assets/images/tsv-df25fdbe21e266d7b2180fd73833905b.jpg\" width=\"646\" height=\"282\" class=\"img_xC7_\"></td></tr><tr><td>개념</td><td>칩과 기판 또는 칩 간 연결을 금속 와이어를 통해 구현하는 전통적인 본딩 방식</td><td>칩과 기판을 플립(뒤집어) 배치한 후, 범프(땜납)로 연결하는 본딩 방식</td><td>실리콘 웨이퍼에 수직으로 뚫린 구멍(비아)를 통해 칩 내부 및 칩 간 전기 신호를 연결하는 3D 본딩 방식</td></tr><tr><td>특징</td><td>전기적 신호 전달거리 짧음</td><td>작은 전기저항, 빠른 속도</td><td>칩 간 인터커넥션 길이 감소, 빠른 신호전달</td></tr><tr><td></td><td>전기적 특성 우수</td><td>작은 폼팩터 구현 가능</td><td>고용량, 저전력</td></tr></tbody></table>\n<h3 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"칩렛-장점\">칩렛 장점<a href=\"https://gracefullight.dev/en/pe/ca/chiplet/#%EC%B9%A9%EB%A0%9B-%EC%9E%A5%EC%A0%90\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<table><thead><tr><th>구분</th><th>측면</th><th>장점</th></tr></thead><tbody><tr><td>기술적</td><td>품질측면</td><td>칩 분할 생산 통한 수율향상</td></tr><tr><td></td><td>제조측면</td><td>바른 설계와 제작 가능</td></tr><tr><td></td><td>결합측면</td><td>상이한 이종칩 결합 가능</td></tr><tr><td>산업적</td><td>비용측면</td><td>제작 및 설계 비용 감소</td></tr><tr><td></td><td>개발측면</td><td>핵심 기술 개발 효율</td></tr><tr><td></td><td>시장측면</td><td>웨이퍼 칩 설계, 제작 진입장벽 낮춤</td></tr></tbody></table>\n<h2 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"soc-sip-chiplet-비교\">SoC, SiP, Chiplet 비교<a href=\"https://gracefullight.dev/en/pe/ca/chiplet/#soc-sip-chiplet-%EB%B9%84%EA%B5%90\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<table><thead><tr><th>구분</th><th>SoC</th><th>SiP</th><th>Chiplet</th></tr></thead><tbody><tr><td>구조</td><td>단일 칩 내 모든 기능 통합</td><td>여러 다이를 하나의 패키지로 통합</td><td>개별/기능별 모듈형 칩 통합</td></tr><tr><td>유연성</td><td>낮음</td><td>중간</td><td>높음</td></tr><tr><td>성능최적화</td><td>제한적</td><td>제한적</td><td>각 기능별 최적화 가능</td></tr><tr><td>비용효율성</td><td>낮음</td><td>중간</td><td>높음</td></tr><tr><td>개발기간</td><td>김</td><td>중간</td><td>짧음</td></tr></tbody></table>",
            "url": "https://gracefullight.dev/en/pe/ca/chiplet/",
            "title": "칩렛",
            "summary": "Chiplet",
            "date_modified": "2025-01-28T00:19:18.460Z",
            "author": {
                "name": "Gracefullight",
                "url": "https://github.com/gracefullight"
            },
            "tags": [
                "professional-engineer",
                "pe/computer-architecture"
            ]
        },
        {
            "id": "https://gracefullight.dev/en/pe/ca/cache/",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"캐시-개념\">캐시 개념<a href=\"https://gracefullight.dev/en/pe/ca/cache/#%EC%BA%90%EC%8B%9C-%EA%B0%9C%EB%85%90\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<!-- -->\n<ul>\n<li>CPU와 주기억장치 간의 속도차를 완화시켜 프로세서 대기시간을 최소화를 위한 고속 메모리</li>\n<li>캐시 용량이 메인 메모리보다 작아 일부분만 적재되므로 최고의 적중률을 내기 위해 매핑 기법 필요</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"캐시메모리-매핑-방식\">캐시메모리 매핑 방식<a href=\"https://gracefullight.dev/en/pe/ca/cache/#%EC%BA%90%EC%8B%9C%EB%A9%94%EB%AA%A8%EB%A6%AC-%EB%A7%A4%ED%95%91-%EB%B0%A9%EC%8B%9D\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<table><thead><tr><th>구분</th><th>직접 사상</th><th>연관 사상</th><th>집합 연관 사상</th></tr></thead><tbody><tr><td>개념도</td><td><img decoding=\"async\" loading=\"lazy\" alt=\"direct\" src=\"https://gracefullight.dev/en/assets/images/direct-mapping-7f5a88ad42347a48f42b02fca85320cd.png\" width=\"1096\" height=\"842\" class=\"img_xC7_\"></td><td><img decoding=\"async\" loading=\"lazy\" alt=\"associative\" src=\"https://gracefullight.dev/en/assets/images/associative-mapping-e4cc7d722108d948813d0803e801c9fd.png\" width=\"1158\" height=\"862\" class=\"img_xC7_\"></td><td><img decoding=\"async\" loading=\"lazy\" alt=\"set-associative\" src=\"https://gracefullight.dev/en/assets/images/set-associative-mapping-5eab21235ddef4acccd1c5881c83097c.png\" width=\"1150\" height=\"800\" class=\"img_xC7_\"></td></tr><tr><td>개념</td><td>메모리 블록이 캐시의 특정 라인으로만 로딩 가능</td><td>메모리 블록이 임의의 라인으로 로딩 가능</td><td>메모리 블록이 특정 집합의 모든 라인에 로딩 가능</td></tr><tr><td>장점</td><td>회로 구현 간단, 처리 속도 향상</td><td>캐시 적중률 향상</td><td>캐시:메모리 = N:1로 효율적</td></tr><tr><td>단점</td><td>캐시 실패율 높음</td><td>회로 복잡, 처리 속도 느림</td><td>회로 복잡</td></tr><tr><td>구조</td><td>지정된 특정 라인으로 로딩 가능</td><td>임의의 라인으로 로딩 가능</td><td>특정 집합의 모든 라인에 로딩 가능</td></tr></tbody></table>\n<h2 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"캐시-쓰기-정책\">캐시 쓰기 정책<a href=\"https://gracefullight.dev/en/pe/ca/cache/#%EC%BA%90%EC%8B%9C-%EC%93%B0%EA%B8%B0-%EC%A0%95%EC%B1%85\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<table><thead><tr><th>구분</th><th>Write-Through</th><th>Write-Back</th></tr></thead><tbody><tr><td>개념도</td><td><img decoding=\"async\" loading=\"lazy\" alt=\"write-through\" src=\"https://gracefullight.dev/en/assets/images/write-through-d10b6e19cb0bd4363958f26e1ffe7661.png\" width=\"600\" height=\"314\" class=\"img_xC7_\"></td><td><img decoding=\"async\" loading=\"lazy\" alt=\"write-back\" src=\"https://gracefullight.dev/en/assets/images/write-back-c3d8158a711c16a30d9d3ab49c5f947a.png\" width=\"602\" height=\"302\" class=\"img_xC7_\"></td></tr><tr><td>개념</td><td>모든 쓰기 동작들이 캐시와 주기억장치에 동시에 수행되는 방식</td><td>캐시에서 데이터 변경 후 주기억장치에는 나중에 블록을 복사하여 갱신하는 방식</td></tr><tr><td>특징</td><td>단순, 일관성 보장</td><td>쓰기동작 최소화, 짧은 쓰기 시간</td></tr><tr><td></td><td>긴 쓰기 시간, 많은 트래픽</td><td>일관성 유지 어려움, 블록 교체시 상태 확인 필요</td></tr><tr><td>일관성 문제</td><td><img decoding=\"async\" loading=\"lazy\" alt=\"write-through\" src=\"https://gracefullight.dev/en/assets/images/write-through-issue-6e112735e46403c6afc8f475ca51c7f5.png\" width=\"1228\" height=\"396\" class=\"img_xC7_\"></td><td><img decoding=\"async\" loading=\"lazy\" alt=\"write-back\" src=\"https://gracefullight.dev/en/assets/images/write-back-issue-f818fc8d3b1d8471e43e805276f1ee43.png\" width=\"1426\" height=\"388\" class=\"img_xC7_\"></td></tr></tbody></table>\n<h2 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"캐시-일관성-유지-기법\">캐시 일관성 유지 기법<a href=\"https://gracefullight.dev/en/pe/ca/cache/#%EC%BA%90%EC%8B%9C-%EC%9D%BC%EA%B4%80%EC%84%B1-%EC%9C%A0%EC%A7%80-%EA%B8%B0%EB%B2%95\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<table><thead><tr><th>구분</th><th>기법</th><th>설명</th></tr></thead><tbody><tr><td>SW 기법</td><td>공유 캐시 사용</td><td>모든 프로세서가 하나의 공유 캐시를 사용</td></tr><tr><td></td><td></td><td>항상 캐시 일관성이 유지</td></tr><tr><td></td><td></td><td>프로세서 간 캐시 액세스 충돌로 성능 저하 초래</td></tr><tr><td></td><td>공유 변수 캐시 미사용</td><td>공유변수를 캐시에 저장하지 않는 기법</td></tr><tr><td></td><td></td><td>캐시 저장 불가능 데이터: Lock 변수, 프로세스 큐와 같은 공유 데이터 구조, 입출력 영역에 의해 보호되는 데이터</td></tr><tr><td></td><td></td><td>캐시 적중률 저하 및 I/O 성능 저하 초래</td></tr><tr><td>HW 기법</td><td>디렉토리 프로토콜</td><td>캐시의 정보 상태(캐시 블록 공유상태, 노드 등)을 주기억장치 디렉토리에 저장하여 일관성을 보장하는 방법</td></tr><tr><td></td><td></td><td>Full Map 디렉토리: 디렉토리에 모든 캐시의 포인터와 데이터 저장</td></tr><tr><td></td><td></td><td>Limited 디렉토리: Full Map 디렉토리의 기억장소 부담 감소</td></tr><tr><td></td><td></td><td>Chained 디렉토리: 캐시 포인터를 linked list로 연결, 기억장소 부담 감소</td></tr><tr><td></td><td></td><td>Passive한 방법이며 다중서버 복잡한 시스템에 적합</td></tr><tr><td></td><td>스누피 프로토콜</td><td>멀티 프로세서 내의 모든 캐시 제어기에 캐시 일관성 유지를 위한 정보를 브로드캐스트하는 기법</td></tr><tr><td></td><td></td><td>스누피 제어기: 다른 프로세서에 의한 메모리 액세스 감지 후 상태 조절</td></tr><tr><td></td><td></td><td>쓰기 갱신(Write Update): Write 발생 시 모든 캐시에 갱신된 정보 전송</td></tr><tr><td></td><td></td><td>쓰기 무효(Write Invalidate): Write 발생 시 Invalid 메시지로 브로드캐스팅</td></tr><tr><td></td><td></td><td>MESI 프로토콜: Modified(수정), Exclusive(배타), Shared(2개 이상의 캐시에 공유), Invalid(무효, 다른 캐시가 수정) 4가지 상태로 데이터 유효성 여부 판단</td></tr><tr><td></td><td></td><td>Active한 방법, 소규모 시스템, 높은 버스 대역폭</td></tr><tr><td>프로토콜</td><td>기타 프로토콜</td><td>MEI, MSI, MOESI, MESIF 프로토콜</td></tr><tr><td></td><td></td><td>O(Owned): 변경 상태의 캐시 블록을 다른 곳에서 읽은 경우</td></tr><tr><td></td><td></td><td>F(Forwarding): 여러 프로세서가 공유한 캐시 블록 접근 시</td></tr></tbody></table>",
            "url": "https://gracefullight.dev/en/pe/ca/cache/",
            "title": "캐시",
            "summary": "Cache",
            "date_modified": "2025-01-27T13:13:52.870Z",
            "author": {
                "name": "Gracefullight",
                "url": "https://github.com/gracefullight"
            },
            "tags": [
                "professional-engineer",
                "pe/computer-architecture"
            ]
        },
        {
            "id": "https://gracefullight.dev/en/pe/ca/control-unit-hardwired-vs-microprogrammed/",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"제어장치-개념\">제어장치 개념<a href=\"https://gracefullight.dev/en/pe/ca/control-unit-hardwired-vs-microprogrammed/#%EC%A0%9C%EC%96%B4%EC%9E%A5%EC%B9%98-%EA%B0%9C%EB%85%90\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<!-- -->\n<ul>\n<li>프로그램 명령어를 해석하고, 레지스터에 명령실행 제어 신호를 발생시키는 CPU 구성요소</li>\n<li>명령어 해독, 제어신호 생성, 제어신호 인가 기능 수행</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"micro-programmed-구현방법-개념-및-구성요소\">Micro-programmed 구현방법 개념 및 구성요소<a href=\"https://gracefullight.dev/en/pe/ca/control-unit-hardwired-vs-microprogrammed/#micro-programmed-%EA%B5%AC%ED%98%84%EB%B0%A9%EB%B2%95-%EA%B0%9C%EB%85%90-%EB%B0%8F-%EA%B5%AC%EC%84%B1%EC%9A%94%EC%86%8C\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<h3 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"micro-programmed-개념\">Micro-programmed 개념<a href=\"https://gracefullight.dev/en/pe/ca/control-unit-hardwired-vs-microprogrammed/#micro-programmed-%EA%B0%9C%EB%85%90\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<p><img decoding=\"async\" loading=\"lazy\" alt=\"Micro-programmed\" src=\"https://gracefullight.dev/en/assets/images/micro-programmed-b474904168c13307f5674b9c48fa97e6.jpg\" width=\"1316\" height=\"700\" class=\"img_xC7_\"></p>\n<h3 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"micro-programmed-구성요소\">Micro-programmed 구성요소<a href=\"https://gracefullight.dev/en/pe/ca/control-unit-hardwired-vs-microprogrammed/#micro-programmed-%EA%B5%AC%EC%84%B1%EC%9A%94%EC%86%8C\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<table><thead><tr><th>구성요소</th><th>역할</th><th>설명</th></tr></thead><tbody><tr><td>IR (Instruction Register)</td><td>명령어 저장</td><td>현재 실행 중인 명령어를 저장하고 제어 메모리 주소를 생성하는 데 사용</td></tr><tr><td>Address Generator</td><td>마이크로 명령 주소 생성</td><td>현재 명령어와 상태를 기반으로 제어 메모리의 다음 주소를 생성</td></tr><tr><td>CAR (Control Address Register)</td><td>제어 메모리 주소 저장</td><td>제어 메모리에서 접근할 주소를 저장</td></tr><tr><td>Control Memory (ROM)</td><td>마이크로코드 저장</td><td>제어 신호 생성을 위한 마이크로 명령어들을 저장</td></tr><tr><td>CDR (Control Data Register)</td><td>제어 데이터 저장</td><td>제어 메모리에서 읽어온 마이크로 명령어를 저장</td></tr><tr><td>Control Signals</td><td>제어 신호</td><td>마이크로 명령어에 따라 생성된 최종 제어 신호</td></tr></tbody></table>\n<h2 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"hard-wired-구현방법-개념-및-구성요소\">Hard-wired 구현방법 개념 및 구성요소<a href=\"https://gracefullight.dev/en/pe/ca/control-unit-hardwired-vs-microprogrammed/#hard-wired-%EA%B5%AC%ED%98%84%EB%B0%A9%EB%B2%95-%EA%B0%9C%EB%85%90-%EB%B0%8F-%EA%B5%AC%EC%84%B1%EC%9A%94%EC%86%8C\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<h3 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"hard-wired-개념\">Hard-wired 개념<a href=\"https://gracefullight.dev/en/pe/ca/control-unit-hardwired-vs-microprogrammed/#hard-wired-%EA%B0%9C%EB%85%90\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<p><img decoding=\"async\" loading=\"lazy\" alt=\"Hard-wired\" src=\"https://gracefullight.dev/en/assets/images/hard-wired-f76becd9ef64da999798cc3948b963e8.jpg\" width=\"1328\" height=\"710\" class=\"img_xC7_\"></p>\n<h3 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"hard-wired-구성요소\">Hard-wired 구성요소<a href=\"https://gracefullight.dev/en/pe/ca/control-unit-hardwired-vs-microprogrammed/#hard-wired-%EA%B5%AC%EC%84%B1%EC%9A%94%EC%86%8C\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<table><thead><tr><th>구성요소</th><th>역할</th><th>설명</th></tr></thead><tbody><tr><td>IR (Instruction Register)</td><td>명령어 저장</td><td>현재 실행 중인 명령어를 저장하고 디코더에 전달</td></tr><tr><td>Instruction Decoder</td><td>명령어 해독</td><td>IR에서 전달받은 명령어를 해독하여 제어 신호 생성을 준비</td></tr><tr><td>Control Step Counter</td><td>클록 기반 스텝 제어</td><td>클록 신호를 기반으로 명령 실행 단계를 순차적으로 관리</td></tr><tr><td>Control Signal Generator</td><td>제어 신호 생성</td><td>디코더와 스텝 카운터의 정보를 기반으로 제어 신호를 생성</td></tr><tr><td>Flags</td><td>상태 플래그</td><td>연산 결과나 상태 정보를 저장하고 제어 신호 생성에 활용</td></tr></tbody></table>\n<h2 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"micro-programmed-hard-wired-비교\">Micro-programmed, Hard-wired 비교<a href=\"https://gracefullight.dev/en/pe/ca/control-unit-hardwired-vs-microprogrammed/#micro-programmed-hard-wired-%EB%B9%84%EA%B5%90\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<table><thead><tr><th>구분</th><th>Micro-programmed</th><th>Hard-wired</th></tr></thead><tbody><tr><td>개념</td><td>제어 메모리에 저장된 마이크로코드를 사용하여 제어 신호를 생성하는 방식</td><td>고정된 논리 회로를 사용하여 제어 신호를 생성하는 방식</td></tr><tr><td>속도</td><td>느림, SW 처리</td><td>빠름, HW 회로</td></tr><tr><td>비용</td><td>저가</td><td>고가</td></tr><tr><td>전력소비</td><td>많음</td><td>적음</td></tr><tr><td>적용방식</td><td>CISC</td><td>RISC</td></tr><tr><td>오류발생률</td><td>디버깅 용이, 수정 가능</td><td>설계 오류 시 수정 어려움</td></tr></tbody></table>",
            "url": "https://gracefullight.dev/en/pe/ca/control-unit-hardwired-vs-microprogrammed/",
            "title": "제어장치, 마이크로프로그램, 하드와이어",
            "summary": "The differences between Micro-programmed and Hard-wired Control Units",
            "date_modified": "2025-01-27T12:34:26.441Z",
            "author": {
                "name": "Gracefullight",
                "url": "https://github.com/gracefullight"
            },
            "tags": [
                "professional-engineer",
                "pe/computer-architecture"
            ]
        },
        {
            "id": "https://gracefullight.dev/en/pe/ca/interrupt/",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"인터럽트의-개요\">인터럽트의 개요<a href=\"https://gracefullight.dev/en/pe/ca/interrupt/#%EC%9D%B8%ED%84%B0%EB%9F%BD%ED%8A%B8%EC%9D%98-%EF%BF%BD%EF%BF%BD%EA%B0%9C%EC%9A%94\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<h3 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"인터럽트-개념\">인터럽트 개념<a href=\"https://gracefullight.dev/en/pe/ca/interrupt/#%EC%9D%B8%ED%84%B0%EB%9F%BD%ED%8A%B8-%EA%B0%9C%EB%85%90\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<ul>\n<li>컴퓨터 시스템 외부, 내부, SW적 원인으로 CPU에서 처리하던 프로그램을 중단하고 해당 동작을 처리할 수 있도록 보내는 제어신호</li>\n<li>인터럽트는 SW/HW 방식으로 우선순위 판별을 통해 인터럽트 서비스 루틴 수행</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"인터럽트-유형\">인터럽트 유형<a href=\"https://gracefullight.dev/en/pe/ca/interrupt/#%EC%9D%B8%ED%84%B0%EB%9F%BD%ED%8A%B8-%EC%9C%A0%ED%98%95\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<table><thead><tr><th>구분</th><th>방법</th><th>설명</th></tr></thead><tbody><tr><td>SW</td><td>Polling 방식</td><td>프로그램을 통해 장치 Flag에 의한 우선순위 검사 방식</td></tr><tr><td>HW</td><td>Daisy-Chain 방식</td><td>우선순위 높은 장치를 물리적으로 상위에 배치하는 방식</td></tr><tr><td></td><td>Vector Interrupt 방식</td><td>고유한 번호를 부여하고 해당 번호에 대응하는 ISR 방식</td></tr></tbody></table>\n<h2 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"폴링\">폴링<a href=\"https://gracefullight.dev/en/pe/ca/interrupt/#%ED%8F%B4%EB%A7%81\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<h3 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"폴링-개념\">폴링 개념<a href=\"https://gracefullight.dev/en/pe/ca/interrupt/#%ED%8F%B4%EB%A7%81-%EA%B0%9C%EB%85%90\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<!-- -->\n<ul>\n<li>SW적으로 CPU가 외부 장치의 상태를 지속적으로 검사하여 인터럽트 요청여부를 확인하는 방식</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"폴링-동작방식\">폴링 동작방식<a href=\"https://gracefullight.dev/en/pe/ca/interrupt/#%ED%8F%B4%EB%A7%81-%EB%8F%99%EC%9E%91%EB%B0%A9%EC%8B%9D\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<table><thead><tr><th>구분</th><th>동작 방식</th><th>설명</th></tr></thead><tbody><tr><td>초기화 및 확인</td><td>초기화</td><td>CPU는 외부 장치와의 통신을 위한 인터럽트 관련 레지스터 및 플래그를 초기화</td></tr><tr><td></td><td>장치 확인, 상태 확인</td><td>CPU는 특정 외부 장치(예: 입출력 장치, 타이머 등)의 상태를 주기적으로 확인하기 위해 루프를 실행하며, 루프 내에서 특정 장치에 대한 상태를 확인</td></tr><tr><td></td><td>인터럽트 여부 판단</td><td>CPU는 장치의 상태를 확인한 후 인터럽트가 발생했는지 여부를 판단하며, 특정 플래그나 레지스터의 값을 확인하여 인터럽트 여부를 판단</td></tr><tr><td>처리</td><td>인터럽트 처리</td><td>인터럽트가 발생한 경우, CPU는 해당 인터럽트에 대한 처리를 위해 인터럽트 서비스 루틴을 실행</td></tr><tr><td></td><td>루프 반복</td><td>처리가 완료되면 CPU는 다시 루프를 시작하여 다음 인터럽트가 발생했는지를 확인하고 처리</td></tr></tbody></table>\n<h2 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"데이지-체인\">데이지 체인<a href=\"https://gracefullight.dev/en/pe/ca/interrupt/#%EB%8D%B0%EC%9D%B4%EC%A7%80-%EC%B2%B4%EC%9D%B8\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<h3 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"데이지-체인-개념\">데이지 체인 개념<a href=\"https://gracefullight.dev/en/pe/ca/interrupt/#%EB%8D%B0%EC%9D%B4%EC%A7%80-%EC%B2%B4%EC%9D%B8-%EA%B0%9C%EB%85%90\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<!-- -->\n<ul>\n<li>CPU와 가까운 장치가 우선순위가 높게 처리되고, 하나의 인터럽트가 다음 인터럽트를 호출하는 직렬 연계 방식</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"데이지-체인-동작방식\">데이지 체인 동작방식<a href=\"https://gracefullight.dev/en/pe/ca/interrupt/#%EB%8D%B0%EC%9D%B4%EC%A7%80-%EC%B2%B4%EC%9D%B8-%EB%8F%99%EC%9E%91%EB%B0%A9%EC%8B%9D\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<table><thead><tr><th>구분</th><th>동작 방식</th><th>설명</th></tr></thead><tbody><tr><td>발생 및 우선순위 전달</td><td>인터럽트 발생 및 신호 전달</td><td>외부 장치에서 인터럽트가 발생하고, 인터럽트 신호가 체인의 시작점에 있는 인터럽트 컨트롤러에게 전달</td></tr><tr><td></td><td>우선순위 확인 및 결정</td><td>체인 내의 각 인터럽트 컨트롤러는 자신의 우선순위를 확인하고, 처리할 인터럽트를 결정</td></tr><tr><td>처리 및 전달</td><td>인터럽트 처리</td><td>우선순위가 가장 높은 인터럽트 컨트롤러는 해당 인터럽트를 처리하고, 서비스 루틴을 실행</td></tr><tr><td></td><td>인터럽트 전달</td><td>처리가 완료된 인터럽트는 다음 인터럽트 컨트롤러로 전달되며, 다음 우선순위가 높은 인터럽트를 처리</td></tr><tr><td>완료 및 대기</td><td>인터럽트 처리 반복</td><td>처리가 완료되면 다음 인터럽트 컨트롤러로 넘어가며, 이 과정을 반복</td></tr><tr><td></td><td>우선순위 갱신 및 대기</td><td>모든 인터럽트가 처리되면 인터럽트 컨트롤러들은 우선순위를 다시 확인하고 새로운 인터럽트를 대기</td></tr></tbody></table>\n<h2 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"벡터-인터럽트\">벡터 인터럽트<a href=\"https://gracefullight.dev/en/pe/ca/interrupt/#%EB%B2%A1%ED%84%B0-%EC%9D%B8%ED%84%B0%EB%9F%BD%ED%8A%B8\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<h3 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"벡터-인터럽트-개념\">벡터 인터럽트 개념<a href=\"https://gracefullight.dev/en/pe/ca/interrupt/#%EB%B2%A1%ED%84%B0-%EC%9D%B8%ED%84%B0%EB%9F%BD%ED%8A%B8-%EA%B0%9C%EB%85%90\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<!-- -->\n<ul>\n<li>각 인터럽트를 참조하는 인터럽트 벡터 테이블을 관리, 고유 벡터 주소로 서브루틴을 실행하는 방식</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"벡터-인터럽트-동작방식\">벡터 인터럽트 동작방식<a href=\"https://gracefullight.dev/en/pe/ca/interrupt/#%EB%B2%A1%ED%84%B0-%EC%9D%B8%ED%84%B0%EB%9F%BD%ED%8A%B8-%EB%8F%99%EC%9E%91%EB%B0%A9%EC%8B%9D\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<table><thead><tr><th>구분</th><th>동작 방식</th><th>설명</th></tr></thead><tbody><tr><td>인터럽트 발생 및 동작</td><td>인터럽트 발생</td><td>외부 장치에서 인터럽트가 발생</td></tr><tr><td></td><td>인터럽트 컨트롤러 동작</td><td>인터럽트 컨트롤러는 발생한 인터럽트를 CPU에 알리고 해당 인터럽트의 번호(인터럽트 벡터)를 제공</td></tr><tr><td>확인 및 처리</td><td>인터럽트 벡터 확인</td><td>CPU는 인터럽트 컨트롤러로부터 받은 인터럽트 벡터를 이용하여 인터럽트 서비스 루틴의 주소를 확인</td></tr><tr><td></td><td>인터럽트 서비스 루틴 실행</td><td>CPU는 찾아낸 인터럽트 서비스 루틴의 주소로 점프하여 해당 인터럽트를 처리</td></tr><tr><td></td><td>인터럽트 서비스 루틴 종료</td><td>인터럽트 서비스 루틴의 실행이 완료되었음을 CPU가 인식</td></tr><tr><td>복귀</td><td>프로그램 복귀</td><td>인터럽트 서비스 루틴 실행 후, CPU는 원래의 프로그램 또는 작업으로 돌아가 수행을 계속 진행</td></tr></tbody></table>\n<h2 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"인터럽트-유형-비교\">인터럽트 유형 비교<a href=\"https://gracefullight.dev/en/pe/ca/interrupt/#%EC%9D%B8%ED%84%B0%EB%9F%BD%ED%8A%B8-%EC%9C%A0%ED%98%95-%EB%B9%84%EA%B5%90\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<table><thead><tr><th>구분</th><th>폴링</th><th>데이지체인</th><th>벡터인터럽트</th></tr></thead><tbody><tr><td>개념</td><td>CPU가 주기적으로 장치 상태를 확인하여 인터럽트를 처리하는 방식</td><td>인터럽트 신호가 장치 간 체인을 따라 전달되며, 우선순위가 높은 장치가 처리되는 방식</td><td>각 장치가 고유의 인터럽트 벡터를 가지며, 벡터를 통해 해당 장치를 즉시 처리하는 방식</td></tr><tr><td>방식</td><td>SW</td><td>HW</td><td>HW</td></tr><tr><td>속도</td><td>느림</td><td>중간, 체인 길이에 따른 지연</td><td>빠름, 벡터 주소로 즉시 처리</td></tr><tr><td>장점</td><td>구현 간단, 추가 HW 불필요</td><td>단일 인터럽트 라인으로 여러 장치 처리 가능</td><td>빠른 속도, 유연한 우선순위</td></tr><tr><td></td><td>단순한 시스템에 효율적</td><td>우선순위 제어 용이</td><td>복잡한 시스템에서 효율적</td></tr><tr><td>단점</td><td>CPU 자원 소모, 성능 저하</td><td>체인 길이가 길어질 시 병목 발생</td><td>구현 복잡, 추가 HW 비용</td></tr><tr><td></td><td>느린 반응 속도</td><td>장치 추가 시 체인 구조 변경 필요</td><td>벡터 테이블 구성/관리 비용</td></tr></tbody></table>",
            "url": "https://gracefullight.dev/en/pe/ca/interrupt/",
            "title": "인터럽트",
            "summary": "Interrupt",
            "date_modified": "2025-01-27T11:44:23.768Z",
            "author": {
                "name": "Gracefullight",
                "url": "https://github.com/gracefullight"
            },
            "tags": [
                "professional-engineer",
                "pe/computer-architecture"
            ]
        },
        {
            "id": "https://gracefullight.dev/en/pe/sec/iec-62443/",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"iec-62443-개념\">IEC 62443 개념<a href=\"https://gracefullight.dev/en/pe/sec/iec-62443/#iec-62443-%EA%B0%9C%EB%85%90\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<ul>\n<li>산업제어시스템(IACS) 보안관리 요구사항과 보안기술, 제품의 개발 요구사항 및 구성요소에 대한 기술적 보안 요구사항 등이 정의되어 있는 산업제어시스템 보안 국제 표준</li>\n<li>스마트팩토리, 에너지 관리, 공공 인프라의 실시간 데이터 처리와 안정적 운영, 제어시스템 보안을 위해 필요</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"iec-62443-구성도-구성요소-보안안정성기준\">IEC 62443 구성도, 구성요소, 보안안정성기준<a href=\"https://gracefullight.dev/en/pe/sec/iec-62443/#iec-62443-%EA%B5%AC%EC%84%B1%EB%8F%84-%EA%B5%AC%EC%84%B1%EC%9A%94%EC%86%8C-%EB%B3%B4%EC%95%88%EC%95%88%EC%A0%95%EC%84%B1%EA%B8%B0%EC%A4%80\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<h3 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"iec-62443-구성도\">IEC 62443 구성도<a href=\"https://gracefullight.dev/en/pe/sec/iec-62443/#iec-62443-%EA%B5%AC%EC%84%B1%EB%8F%84\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<!-- -->\n<h3 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"iec-62443-구성요소\">IEC 62443 구성요소<a href=\"https://gracefullight.dev/en/pe/sec/iec-62443/#iec-62443-%EA%B5%AC%EC%84%B1%EC%9A%94%EC%86%8C\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<table><thead><tr><th>구분</th><th>항목</th><th>내용</th></tr></thead><tbody><tr><td>General (Part 1)</td><td>용어 정의, 개념, 모델</td><td>7가지 FR(Foundational Requirements) 정의: 식별 및 인증(FR1), 사용자 제어(FR2), 시스템 무결성(FR3), 데이터 기밀성(FR4), 제한된 데이터 흐름(FR5), 이벤트 대응(FR6), 자원 가용성(FR7)</td></tr><tr><td></td><td>용어 및 약어 사전</td><td>IACS 보안에서 사용하는 용어와 약어의 정의 제공, 마스터 용어집 작성</td></tr><tr><td></td><td>시스템 보안 적합성 측정</td><td>IACS의 보안 적합성을 측정할 수 있는 기준과 메트릭 정의</td></tr><tr><td>Policies &amp; Procedures (Part 2)</td><td>보안 프로그램 수립</td><td>사이버 보안 관리 시스템 구축을 위한 정책, 운영 절차 정의</td></tr><tr><td></td><td>보안 관리 가이드</td><td>보안 관리 시스템의 설계, 구현, 운영, 유지보수 가이드를 제공</td></tr><tr><td></td><td>환경 패치 관리</td><td>IT 환경과 다른 IACS 보안 패치 관리 요건 기술</td></tr><tr><td>System (Part 3)</td><td>보안 기술 및 시스템 설계</td><td>IACS 설계 및 유지보수 시 필요한 보안 기술과 요구사항 정의</td></tr><tr><td></td><td>네트워크 및 데이터 보안</td><td>IACS 네트워크 및 데이터 흐름의 보안 목표와 구현 방식 정의</td></tr><tr><td></td><td>위험 관리 및 요구 사항</td><td>시스템 운영 중 발생할 수 있는 위험 요소를 식별하고, 이에 대응하기 위한 요구 사항 정의</td></tr><tr><td>Component (Part 4)</td><td>제품 보안 개발 요구 사항</td><td>보안개발생명주기(SDLC) 요구 사항 및 제품 설계에 따른 보안 기술 정의</td></tr><tr><td></td><td>IACS 컴포넌트 요구 사항</td><td>7가지 FR에 기반하여 각 컴포넌트의 구체적인 보안 요구 사항 제시</td></tr></tbody></table>\n<h3 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"iec-62443-보안안정성기준\">IEC 62443 보안안정성기준<a href=\"https://gracefullight.dev/en/pe/sec/iec-62443/#iec-62443-%EB%B3%B4%EC%95%88%EC%95%88%EC%A0%95%EC%84%B1%EA%B8%B0%EC%A4%80\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<table><thead><tr><th>레벨</th><th>설명</th><th>비고</th></tr></thead><tbody><tr><td>SL 1</td><td>무의도적 위협에 대한 보호</td><td>인적 오류로 인한 시스템 오작동 방지</td></tr><tr><td>SL 2</td><td>의도적이지만 단순한 위협에 대한 보호</td><td>저숙련 해커의 단순 공격 방지</td></tr><tr><td>SL 3</td><td>의도적이고 복잡한 위협에 대한 보호</td><td>숙련된 해커의 정교한 공격 방지</td></tr><tr><td>SL 4</td><td>고도의 의도적이고 복잡한 위협에 대한 보호</td><td>자원이 풍부한 공격자의 지속적이고 정교한 공격 방지</td></tr></tbody></table>",
            "url": "https://gracefullight.dev/en/pe/sec/iec-62443/",
            "title": "IEC 62443",
            "summary": "IEC 62443",
            "date_modified": "2025-01-27T06:57:38.848Z",
            "author": {
                "name": "Gracefullight",
                "url": "https://github.com/gracefullight"
            },
            "tags": [
                "professional-engineer",
                "pe/security"
            ]
        },
        {
            "id": "https://gracefullight.dev/en/pe/sec/iso-31000/",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"iso-31000-개념\">ISO 31000 개념<a href=\"https://gracefullight.dev/en/pe/sec/iso-31000/#iso-31000-%EA%B0%9C%EB%85%90\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<ul>\n<li>조직의 효과적인 리스크 관리를 위한 세부 원칙, 프레임워크, 프로세스를 제시하고 가이드라인을 제공하는 국제 표준</li>\n<li>리스크기반 의사결정 / 조직 회복력 강화 / 조직 목표달성 지원</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"iso-31000-프레임워크-세부-절차\">ISO 31000 프레임워크, 세부 절차<a href=\"https://gracefullight.dev/en/pe/sec/iso-31000/#iso-31000-%ED%94%84%EB%A0%88%EC%9E%84%EC%9B%8C%ED%81%AC-%EC%84%B8%EB%B6%80-%EC%A0%88%EC%B0%A8\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<h3 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"iso-31000-프레임워크\">ISO 31000 프레임워크<a href=\"https://gracefullight.dev/en/pe/sec/iso-31000/#iso-31000-%ED%94%84%EB%A0%88%EC%9E%84%EC%9B%8C%ED%81%AC\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<!-- -->\n<h3 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"iso-31000-세부-절차\">ISO 31000 세부 절차<a href=\"https://gracefullight.dev/en/pe/sec/iso-31000/#iso-31000-%EC%84%B8%EB%B6%80-%EC%A0%88%EC%B0%A8\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<table><thead><tr><th>절차</th><th>내용</th><th>설명</th></tr></thead><tbody><tr><td>의사소통 및 협의</td><td>조직의 위험 인식에 대한 공유 및 협의</td><td>조직의 위험 관리 프로세스에서 모든 이해관계자의 참여를 유도</td></tr><tr><td>맥락 이해</td><td>조직의 운영 현황과 주변 환경에 대한 이해</td><td>위험 관리의 배경 및 범위를 정의</td></tr><tr><td>위험식별</td><td>조직의 목표에 위협할 영향을 줄 수 있는 내·외부 사건의 파악</td><td>위험사건이 어떻게 발생하고 영향을 줄 것인지 분석</td></tr><tr><td>위험분석</td><td>위험사건의 확률과 피해에 대한 예측 및 위험수용</td><td>정량적/정성적 분석을 통해 위험의 심각성 평가</td></tr><tr><td>위험평가</td><td>정책 대응 여부 판단</td><td>위험등급을 기반으로 직면한 위험 대응</td></tr><tr><td>위험대응</td><td>위험 발생을 줄이거나 통제하는 행동</td><td>회피, 전가, 감수, 수용, 이관, 종료</td></tr><tr><td>감독 및 보고</td><td>모니터링과 평가를 통한 조직 학습</td><td>위험관리 후 지속적인 평가와 개선</td></tr></tbody></table>",
            "url": "https://gracefullight.dev/en/pe/sec/iso-31000/",
            "title": "ISO 31000",
            "summary": "ISO 31000",
            "date_modified": "2025-01-27T06:19:33.633Z",
            "author": {
                "name": "Gracefullight",
                "url": "https://github.com/gracefullight"
            },
            "tags": [
                "professional-engineer",
                "pe/security"
            ]
        },
        {
            "id": "https://gracefullight.dev/en/pe/sec/vpn-ipsec-ssl/",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"vpn-개요\">VPN 개요<a href=\"https://gracefullight.dev/en/pe/sec/vpn-ipsec-ssl/#vpn-%EA%B0%9C%EC%9A%94\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<h3 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"vpn-개념\">VPN 개념<a href=\"https://gracefullight.dev/en/pe/sec/vpn-ipsec-ssl/#vpn-%EA%B0%9C%EB%85%90\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<!-- -->\n<ul>\n<li>인터넷 같은 공중망에서 터널링 기법을 통해 사용자가 사설망에 연결된 것처럼 기밀성, 무결성을 보장하는 네트워크 통신 기술</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"vpn-특징\">VPN 특징<a href=\"https://gracefullight.dev/en/pe/sec/vpn-ipsec-ssl/#vpn-%ED%8A%B9%EC%A7%95\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<table><thead><tr><th>구분</th><th>특징</th><th>설명</th></tr></thead><tbody><tr><td>보안 측면</td><td>데이터 기밀성</td><td>암호화를 이용하여 메시지의 내용을 은폐</td></tr><tr><td></td><td>데이터 무결성</td><td>데이터 전송 중 제3자에 의해 변환되지 않았음을 보장</td></tr><tr><td></td><td>데이터 원본 인증</td><td>요청한 수신인에 의해 각 데이터 원본 여부 확인</td></tr><tr><td></td><td>재전송 공격 방지</td><td>인증 헤더에 일련번호를 부여하여 재전송 공격 방지</td></tr><tr><td>비즈니스 측면</td><td>비용 절감</td><td>가상화를 통해 전용망과 같은 효과 기대</td></tr><tr><td></td><td>QoS 보장</td><td>네트워크 사용자 품질 보증 기술로 활용</td></tr></tbody></table>\n<h2 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"ipsec-vpn-ssl-vpn\">IPSec VPN, SSL VPN<a href=\"https://gracefullight.dev/en/pe/sec/vpn-ipsec-ssl/#ipsec-vpn-ssl-vpn\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<h3 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"ipsec-vpn\">IPSec VPN<a href=\"https://gracefullight.dev/en/pe/sec/vpn-ipsec-ssl/#ipsec-vpn\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<p><img decoding=\"async\" loading=\"lazy\" alt=\"IPSec VPN\" src=\"https://gracefullight.dev/en/assets/images/ipsec-vpn-6739c40a5089cec24e3e9d4611caf29f.png\" width=\"489\" height=\"172\" class=\"img_xC7_\"></p>\n<ul>\n<li>단말간 안전한 통신망 연결을 위해 IPSec Tunneling 기술 이용하는 OSI 3계층 VPN 보안 기술</li>\n</ul>\n<h3 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"ssl-vpn\">SSL VPN<a href=\"https://gracefullight.dev/en/pe/sec/vpn-ipsec-ssl/#ssl-vpn\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<p><img decoding=\"async\" loading=\"lazy\" alt=\"SSL VPN\" src=\"https://gracefullight.dev/en/assets/images/ssl-vpn-1e4f932cf4c0d9b88a2ca3bffa47d8c1.png\" width=\"486\" height=\"202\" class=\"img_xC7_\"></p>\n<ul>\n<li>OSI 4~7계층에서 웹 브라우저를 통해 원격 액세스를 제공하며, 사용자 인증, 데이터 암호화 및 데이터 무결성을 보장하는 VPN 보안 기술</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"ipsec-vpn-ssl-vpn-비교\">IPSec VPN, SSL VPN 비교<a href=\"https://gracefullight.dev/en/pe/sec/vpn-ipsec-ssl/#ipsec-vpn-ssl-vpn-%EB%B9%84%EA%B5%90\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<table><thead><tr><th>구분</th><th>IPSec VPN</th><th>SSL VPN</th></tr></thead><tbody><tr><td>OSI 레이어</td><td>Layer 3</td><td>Layer 4 ~ 7</td></tr><tr><td>표준</td><td>RFC 4301 (IPSec 기준)</td><td>RFC 5246 (TLS 1.2 기준)</td></tr><tr><td>프로토콜</td><td>IP</td><td>TCP</td></tr><tr><td>인증방식</td><td>비밀키 공유</td><td>X.509 인증서</td></tr><tr><td>구현방식</td><td>Site to Site (Lan to Lan)</td><td>Client to Site</td></tr><tr><td>장점</td><td>높은 안정성</td><td>브라우저 및 Agent 방식 구현</td></tr><tr><td>단점</td><td>고비용 (전용 장비 설치 및 양단 설치)</td><td>저비용 (전용 장비 서버측 설치)</td></tr><tr><td>사례</td><td>본사와 지사의 VPN 연결</td><td>브라우저를 통한 기업 내부망 접속, 재택근무</td></tr></tbody></table>",
            "url": "https://gracefullight.dev/en/pe/sec/vpn-ipsec-ssl/",
            "title": "VPN, IPSec VPN, SSL VPN",
            "summary": "Virtual Private Network, Internet Protocol Security VPN, Secure Socket Layer VPN",
            "date_modified": "2025-01-27T06:05:25.840Z",
            "author": {
                "name": "Gracefullight",
                "url": "https://github.com/gracefullight"
            },
            "tags": [
                "professional-engineer",
                "pe/security"
            ]
        },
        {
            "id": "https://gracefullight.dev/en/pe/sec/multi-party-computation/",
            "content_html": "<h2 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"다자간-계산-개념\">다자간 계산 개념<a href=\"https://gracefullight.dev/en/pe/sec/multi-party-computation/#%EB%8B%A4%EC%9E%90%EF%BF%BD%EA%B0%84-%EA%B3%84%EC%82%B0-%EA%B0%9C%EB%85%90\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<ul>\n<li>여러 참여자가 각자의 비밀 정보를 제공하지 않고도 공동 계산을 수행할 수 있도록 하는 암호학 기법</li>\n<li>프라이버시 보호, 신뢰 없는 환경에서 협업, 데이터 보안, 확장성</li>\n</ul>\n<h2 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"다자간-계산-개념도-핵심요소-활용방안\">다자간 계산 개념도, 핵심요소, 활용방안<a href=\"https://gracefullight.dev/en/pe/sec/multi-party-computation/#%EB%8B%A4%EC%9E%90%EA%B0%84-%EA%B3%84%EC%82%B0-%EA%B0%9C%EB%85%90%EB%8F%84-%ED%95%B5%EC%8B%AC%EC%9A%94%EC%86%8C-%ED%99%9C%EC%9A%A9%EB%B0%A9%EC%95%88\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h2>\n<h3 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"다자간-계산-개념도\">다자간 계산 개념도<a href=\"https://gracefullight.dev/en/pe/sec/multi-party-computation/#%EB%8B%A4%EC%9E%90%EA%B0%84-%EA%B3%84%EC%82%B0-%EA%B0%9C%EB%85%90%EB%8F%84\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<!-- -->\n<h3 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"다자간-계산-핵심요소\">다자간 계산 핵심요소<a href=\"https://gracefullight.dev/en/pe/sec/multi-party-computation/#%EB%8B%A4%EC%9E%90%EA%B0%84-%EA%B3%84%EC%82%B0-%ED%95%B5%EC%8B%AC%EC%9A%94%EC%86%8C\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<table><thead><tr><th>구분</th><th>기술</th><th>설명</th></tr></thead><tbody><tr><td>암호화</td><td>동형 암호화</td><td>데이터가 암호화된 상태로 연산 가능</td></tr><tr><td></td><td>비밀 분할</td><td>데이터를 다수의 셰어로 나누어 저장하고, 계산 후 결과 복원.</td></tr><tr><td>프로토콜</td><td>Yao’s Garbled Circuit</td><td>안전한 회로 기반의 계산을 수행하며, 효율적 보안 제공</td></tr><tr><td></td><td>Threshold Cryptography</td><td>일정 수 이상의 셰어가 합쳐질 때만 계산이 가능</td></tr><tr><td></td><td>블라인드 평가</td><td>비밀번호 확인 없이 전송, 내용확인 없이 본인이 질문내역 확인</td></tr></tbody></table>\n<h3 class=\"anchor anchorWithStickyNavbar_OSIK\" id=\"다자간-계산-활용분야\">다자간 계산 활용분야<a href=\"https://gracefullight.dev/en/pe/sec/multi-party-computation/#%EB%8B%A4%EC%9E%90%EA%B0%84-%EA%B3%84%EC%82%B0-%ED%99%9C%EC%9A%A9%EB%B6%84%EC%95%BC\" class=\"hash-link\" aria-label=\"Direct link to heading\" title=\"Direct link to heading\">​</a></h3>\n<table><thead><tr><th>구분</th><th>내용</th><th>비고</th></tr></thead><tbody><tr><td>공공</td><td>전자 투표 시스템에서 투표자의 익명성을 유지하며 투명한 결과 제공</td><td>선거 공정성과 신뢰 확보</td></tr><tr><td></td><td>민감한 의료 데이터를 보호하면서 병원 간 협력 연구 수행</td><td>환자 데이터 보호 및 연구 효율성 강화</td></tr><tr><td>금융</td><td>암호화폐 지갑에서 개인 키 분산 저장 및 복구 기능 제공</td><td>키 분실 방지 및 보안 강화 (예: ZenGo, Fireblocks)</td></tr><tr><td></td><td>은행 간 신용 평가 및 사기 탐지를 위해 데이터를 비공개 상태로 분석</td><td>금융 기밀 보호와 협력 가능</td></tr><tr><td>민간</td><td>경쟁 기업 간 시장 점유율 분석 시 데이터 보호</td><td>데이터 유출 방지 및 협력 증대</td></tr><tr><td></td><td>블록체인 기반 기업 지갑에서 멀티시그(Multi-Signature) 대체</td><td>분산 서명으로 보안 및 효율성 향상</td></tr><tr><td></td><td>프라이버시를 강화한 연합 학습으로 AI 모델 학습</td><td>데이터 보호 상태에서 AI 성능 향상</td></tr></tbody></table>",
            "url": "https://gracefullight.dev/en/pe/sec/multi-party-computation/",
            "title": "MPC, 다자간 계산",
            "summary": "Multi-Party Computation",
            "date_modified": "2025-01-27T05:05:51.842Z",
            "author": {
                "name": "Gracefullight",
                "url": "https://github.com/gracefullight"
            },
            "tags": [
                "professional-engineer",
                "pe/security"
            ]
        }
    ]
}