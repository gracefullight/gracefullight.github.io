"use strict";(self.webpackChunkgracefullight_github_io=self.webpackChunkgracefullight_github_io||[]).push([[54858],{49613:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>d});var r=n(59496);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),u=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(i.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=u(n),h=a,d=m["".concat(i,".").concat(h)]||m[h]||c[h]||o;return n?r.createElement(d,p(p({ref:t},s),{},{components:n})):r.createElement(d,p({ref:t},s))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,p=new Array(o);p[0]=h;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[m]="string"==typeof e?e:a,p[1]=l;for(var u=2;u<o;u++)p[u]=n[u];return r.createElement.apply(null,p)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},17986:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>p,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var r=n(31966),a=(n(59496),n(49613));const o={title:"Laravel 5.5 - \ub2e4\ud615\uc131 \uad00\uacc4",authors:"me",tags:["php","laravel"],date:new Date("2017-08-02T23:29:36.000Z")},p=void 0,l={permalink:"/en/2017/08/02/Laravel-5-4-Polymorphic-Relations",source:"@site/blog/2017/08/02/Laravel-5-4-Polymorphic-Relations.md",title:"Laravel 5.5 - \ub2e4\ud615\uc131 \uad00\uacc4",description:"\ub313\uae00 \ud14c\uc774\ube14\uc774 \uc788\uace0 \uc774 \ub313\uae00\uc740 \uc5ec\ub7ec \ud14c\uc774\ube14\uc5d0\uc11c \uc0ac\uc6a9\ub41c\ub2e4\uace0 \uce58\uc790.",date:"2017-08-02T23:29:36.000Z",formattedDate:"August 2, 2017",tags:[{label:"php",permalink:"/en/tags/php"},{label:"laravel",permalink:"/en/tags/laravel"}],readingTime:5.29,hasTruncateMarker:!1,authors:[{name:"Gracefullight",title:"Owner",url:"https://github.com/gracefullight",imageURL:"https://avatars.githubusercontent.com/u/11773683?v=4",key:"me"}],frontMatter:{title:"Laravel 5.5 - \ub2e4\ud615\uc131 \uad00\uacc4",authors:"me",tags:["php","laravel"],date:"2017-08-02T23:29:36.000Z"},prevItem:{title:"Centos7 Timezone \ubcc0\uacbd\ud558\uae30",permalink:"/en/2017/08/09/CentOS7-Timezone-\ubcc0\uacbd\ud558\uae30"},nextItem:{title:"Laravel 5.5 - Multi DB Connection",permalink:"/en/2017/07/31/Laravel-5-4-Multi-Database-Connection"}},i={authorsImageUrls:[void 0]},u=[{value:"\uae30\ubcf8 \ubb38\ubc95",id:"\uae30\ubcf8-\ubb38\ubc95",level:2},{value:"\ud544\ub4dc\uba85 \uc815\uc758",id:"\ud544\ub4dc\uba85-\uc815\uc758",level:2},{value:"\ud0c0\uc785-\ubaa8\ub378 \ubc14\uc778\ub529",id:"\ud0c0\uc785-\ubaa8\ub378-\ubc14\uc778\ub529",level:2}],s={toc:u},m="wrapper";function c(e){let{components:t,...n}=e;return(0,a.kt)(m,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"\ub313\uae00 \ud14c\uc774\ube14\uc774 \uc788\uace0 \uc774 \ub313\uae00\uc740 \uc5ec\ub7ec \ud14c\uc774\ube14\uc5d0\uc11c \uc0ac\uc6a9\ub41c\ub2e4\uace0 \uce58\uc790.\n\uadf8\ub7fc \ub313\uae00 \ud14c\uc774\ube14\uc5d0 type\uacfc type_id\ub97c \uac00\uc838\uac00\uc57c\ud560 \uac83\uc774\ub2e4.\n\uc774 \ub54c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uad00\uacc4\uac00 \ub2e4\ud615\uc131 \uad00\uacc4(\ub9b4\ub808\uc774\uc158)\uc778\ub370, ",(0,a.kt)("a",{parentName:"p",href:"https://laravel.com/docs/5.4/eloquent-relationships#polymorphic-relations"},"\uacf5\uc2dd \ubb38\uc11c"),"\uc758 \uc124\uba85\uc774 \uc870\uae08\uc740 \ubd80\uc871\ud558\ub2e4\uace0 \ub290\uaf08\ub2e4. \ud30c\ud5e4\uccd0\ubcf4\uc790."),(0,a.kt)("h1",{id:"morphto"},"morphTo"),(0,a.kt)("p",null,"morphTo\ub294 type\uacfc type_id\ub97c \uac00\uc9c4, \uc5ec\ub7ec \ud14c\uc774\ube14\ub85c \uc5f0\uacb0\ub418\uc5b4\uc57c\ud560 \ud14c\uc774\ube14\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 \ub9b4\ub808\uc774\uc158 \uba54\uc18c\ub4dc\uc774\ub2e4.\n\uacf5\uc2dd \ubb38\uc11c\uc5d0\ub294 \ub370\uc774\ud130\ub97c \uac00\uc838\uc628 \ub4a4 \ub9b4\ub808\uc774\uc158\uc744 \uc5f0\uacb0\ud558\ub294 \uc608\uc2dc\ub9cc \uc788\uace0, Eager \ub85c\ub529 (With \uad6c\ubb38\uc744 \uc0ac\uc6a9\ud558\ub294 \ubc29\ubc95) \ud6c4 specific\ud55c \ud544\ub4dc\ub97c \uc0ac\uc6a9\ud558\uac8c \ubcc0\uacbd\ud558\ub294 \uacbd\uc6b0\uc5d0 \ub300\ud55c \uc815\ubcf4\ub294 \uc5c6\ub2e4."),(0,a.kt)("h2",{id:"\uae30\ubcf8-\ubb38\ubc95"},"\uae30\ubcf8 \ubb38\ubc95"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="YourModel.php"',title:'"YourModel.php"'},"<?php\n\nclass YourModel extends Model {\n  ...\n\n  // \ub2e4\ud615\uc131 \uad00\uacc4\ub97c \uac00\uc9c8 \ud568\uc218\ub97c data\ub85c \uc815\uc758\ud588\ub2e4\n  public function data() {\n    return $this->morphTo();\n  }\n}\n")),(0,a.kt)("p",null,"\uc774\ub807\uac8c \uc815\uc758\uc2dc\uc5d0 ",(0,a.kt)("inlineCode",{parentName:"p"},"YourModel::with('data')->get()")," \uc73c\ub85c \ud638\ucd9c\ud558\uba74 \ubd88\ub7ec\uc640\uc838\uc57c\ub418\uc9c0\ub9cc, \ud544\ub4dc\uba85, \ubaa8\ub378\uba85\uc774 \uc815\ud655\ud558\uc9c0 \uc54a\uc73c\uba74 \ucffc\ub9ac \ud638\ucd9c\uc870\ucc28 \ub418\uc9c0 \uc54a\ub294\ub2e4.\n(\uc2ec\uc9c0\uc5b4 \uc5d0\ub7ec\ub3c4 \ubc1c\uc0dd\ud558\uc9c0 \uc54a\ub294\ub2e4)"),(0,a.kt)("h2",{id:"\ud544\ub4dc\uba85-\uc815\uc758"},"\ud544\ub4dc\uba85 \uc815\uc758"),(0,a.kt)("p",null,"\uba3c\uc800 morphTo\uc758 ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/laravel/framework/blob/5.4/src/Illuminate/Database/Eloquent/Concerns/HasRelationships.php#L133-L150"},"\uc18c\uc2a4\ucf54\ub4dc"),"\ub97c \ub97c \uc0b4\ud3b4\ubcf4\uc790."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="morphTo"',title:'"morphTo"'},"<?php\n/**\n  * Define a polymorphic, inverse one-to-one or many relationship.\n  *\n  * @param  string  $name\n  * @param  string  $type\n  * @param  string  $id\n  * @return \\Illuminate\\Database\\Eloquent\\Relations\\MorphTo\n  */\npublic function morphTo($name = null, $type = null, $id = null)\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"name"),", ",(0,a.kt)("strong",{parentName:"p"},"type"),", ",(0,a.kt)("strong",{parentName:"p"},"id"),"\ub97c \ud30c\ub77c\ubbf8\ud130\ub85c \ubc1b\ub294\ub2e4. \uadf8\ub7fc \ud30c\ub77c\ubbf8\ud130\ub97c \ub118\uaca8\ubcf4\uc790."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="YourModel.php"',title:'"YourModel.php"'},"<?php\n\nclass YourModel extends Model {\n  ...\n\n  public function data() {\n    // morphTo\uc758 paremeter\ub85c null, \ud0c0\uc785\ud544\ub4dc\uba85, \ud0c0\uc785\uc778\ub371\uc2a4 \ud544\ub4dc\uba85\uc744 \ub118\uae34\ub2e4.\n    return $this->morphTo(null, 'type', 'type_idx');\n  }\n}\n")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\uc5ec\uae30\uc11c ",(0,a.kt)("strong",{parentName:"p"},"name"),"\uc5d4 \ub3c4\ub300\uccb4 \ubb58 \ub123\uc5b4\uc57c \ub418\ub294\uac70\uc57c? \ub77c\uace0 \uc758\ubb38\uc774 \uc0dd\uae38 \uc218\uac00 \uc788\ub2e4.\n\ud568\uc218 \ub0b4\uc5d0\uc11c ",(0,a.kt)("strong",{parentName:"p"},"name")," \ubcc0\uc218\ub294 ",(0,a.kt)("inlineCode",{parentName:"p"},"$this->getMorphs(Str::snake($name), $type, $id);")," \uc5d0\ub9cc \ub531 \ud55c \ubc88 \uc0ac\uc6a9\ub41c\ub2e4.")),(0,a.kt)("p",null,"getMorphs \ud568\uc218\ub97c \ub530\ub77c\uac00\ubcf4\uc790."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="getMorphs"',title:'"getMorphs"'},"<?php\nprotected function getMorphs($name, $type, $id) {\n  // $type\uacfc $id\uac00 \uba85\uc2dc\ub418\uba74 \uadf8 \uac12\uc744 \uba3c\uc800 \ubc18\ud658\ud55c\ub2e4.\n  return [$type ?: $name.'_type', $id ?: $name.'_id'];\n}\n")),(0,a.kt)("p",null,"\uc8fc\uc11d\ucc98\ub7fc ",(0,a.kt)("strong",{parentName:"p"},"type"),"\uacfc ",(0,a.kt)("strong",{parentName:"p"},"id"),"\uac00 \uba85\uc2dc\ub418\uba74 ",(0,a.kt)("strong",{parentName:"p"},"name"),"\uac12\uc740 \uc0ac\uc6a9\ub418\uc9c0 \uc54a\ub294 \uc4f0\ub808\uae30 \uac12\uc774 \ub418\uc5b4\ubc84\ub9b0\ub2e4.\n\ub530\ub77c\uc11c ",(0,a.kt)("inlineCode",{parentName:"p"},"null"),"\ub85c \ub118\uaca8\uc8fc\uba74 \ub41c\ub2e4."),(0,a.kt)("h2",{id:"\ud0c0\uc785-\ubaa8\ub378-\ubc14\uc778\ub529"},"\ud0c0\uc785-\ubaa8\ub378 \ubc14\uc778\ub529"),(0,a.kt)("p",null,"\ud0c0\uc785\uacfc \uc778\ub371\uc2a4\ub97c \uba85\uc2dc\ud558\uba74 \ub4dc\ub514\uc5b4 \uc624\ub958\uba54\uc138\uc9c0\uac00 \ub178\ucd9c\ub41c\ub2e4.\n\ub0b4\uac00 \uc815\uc758\ud55c type\uba85\uc744 \uac00\uc9c4 Class\uac00 \uc5c6\ub2e4 \ub77c\ub294 \ub0b4\uc6a9\uc778\ub370, \uc774\uc81c \ud0c0\uc785\uacfc \ubaa8\ub378\uc744 \uc5f0\uacb0\uc2dc\ucf1c\ubcf4\uc790."),(0,a.kt)("p",null,"\uc774 \ub54c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uba54\uc18c\ub4dc\uac00 ",(0,a.kt)("a",{parentName:"p",href:"https://laravel.com/docs/5.4/eloquent-relationships#polymorphic-relations"},"\uacf5\uc2dd \ubb38\uc11c"),"\uc5d0\uc11c \uc870\uae08 \uc2a4\ud06c\ub864\uc744 \ub0b4\ub9ac\uba74 \uc788\ub294 ",(0,a.kt)("strong",{parentName:"p"},"Custom Polymorphic Types"),"\uc5d0 \uc798 \uc124\uba85\ub418\uc5b4 \uc788\ub2e4."),(0,a.kt)("p",null,"\ud558\uc9c0\ub9cc \ub4f1\ub85d\ud558\ub294 \ubd80\ubd84\uc5d0 \ub300\ud55c \uc124\uba85\uc774 ",(0,a.kt)("strong",{parentName:"p"},"You may register the morphMap in the boot function of your AppServiceProvider or create a separate service provider if you wish."),"\ub77c\uace0 \ub418\uc5b4\uc788\ub2e4. \uc989 AppServiceProvider\uc5d0 \ub123\ub358\uc9c0 Service Provider\ub85c \uc0dd\uc131\uc774\ub2e4."),(0,a.kt)("p",null,"\ud55c \ubaa8\ub378\uc5d0\ub9cc \uc4f8 \uac74\ub370 \uc804\uccb4\uc5d0 \ub4f1\ub85d\uc744 \ud560 \ud544\uc694\uac00 \uc5c6\uc73c\ub2c8, \uc0ac\uc6a9\ud560 \ubaa8\ub378\uc5d0 \uae30\ub2a5\uc744 \ub123\uc5b4\ubcf4\uc790."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="YourModel.php"',title:'"YourModel.php"'},"// Relation\uc744 \uc0ac\uc6a9\ud574\uc57c\ud55c\ub2e4.\nuse Illuminate\\Database\\Eloquent\\Relations\\Relation;\n\n<?php\nclass YourModel extends Model {\n  // \uc774 \uba54\uc18c\ub4dc\ub294 \ubaa8\ub378\uc774 initialize\ub420 \ub54c \uc2e4\ud589\ub41c\ub2e4.\n  protected static function boot() {\n    parent::boot();\n\n    // \uc5ec\uae30\uc5d0 \ud0c0\uc785 \ubcc4\ub85c \ubaa8\ub378\uc744 \ubc14\uc778\ub529\ud55c\ub2e4.\n    Relation::morphMap([\n      // type\uc774 product\uc77c \uacbd\uc6b0 id\ub294 product_id\ub97c \uac00\ub9ac\ud0a8\ub2e4.\n      'product' => 'App\\Models\\Product',\n      // type\uc774 order\uc77c \uacbd\uc6b0 id\ub294 order_id\ub97c \uac00\ub9ac\ud0a8\ub2e4.\n      'order' => 'App\\Models\\Order'\n    ]);\n  }\n\n  public function data() {\n    // morphTo\uc758 paremeter\ub85c null, \ud0c0\uc785\ud544\ub4dc\uba85, \ud0c0\uc785\uc778\ub371\uc2a4 \ud544\ub4dc\uba85\uc744 \ub118\uae34\ub2e4.\n    return $this->morphTo(null, 'type', 'type_idx');\n  }\n}\n")),(0,a.kt)("p",null,"\uc644\ubcbd\ud574\uc84c\ub2e4. \uc774\uc81c \uc624\ub958 \uc5c6\uc774 \uc2e4\ud589\ub418\ub294 \uac83\uc744 \ud655\uc778\ud560 \uc218 \uc788\ub2e4."),(0,a.kt)("h1",{id:"morphone"},"morphOne"),(0,a.kt)("p",null,"\ubb38\uc11c \uc0c1\uc5d0\ub294 \uc124\uba85 \ub418\uc9c0 \uc54a\uc740 morphOne \uc774\ub780 \uba54\uc18c\ub4dc\ub3c4 \uc788\ub2e4.\nmorphMany\ub294 \uad00\uacc4\uac00 \uc124\uc815\ub41c \uac12\uc744 \ubc30\uc5f4\ub85c \ubc18\ud658\ud558\uc9c0\ub9cc morphOne\uc740 \ud558\ub098\uc758 \ub370\uc774\ud130\ub85c \ubc18\ud658\ud55c\ub2e4. (hasOne\uacfc hasMany\ucc98\ub7fc)"),(0,a.kt)("p",null,"\uad6c\uc870\ub294 \ub2e4\uc74c\uacfc \uac19\ub2e4."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"<?php\npublic function morphOne($related, $name, $type = null, $id = null, $localKey = null)\n")),(0,a.kt)("h1",{id:"morphtomany"},"morphToMany"),(0,a.kt)("h1",{id:"morphedbymany"},"morphedByMany"),(0,a.kt)("h1",{id:"\uc5ec\ub2f4"},"\uc5ec\ub2f4"),(0,a.kt)("p",null,"\ub2e4\ub300\ub2e4 \ub2e4\ud615\uc131 \uad00\uacc4 \uba54\uc18c\ub4dc (morphToMany, morphedByMany)\uc758 \uacbd\uc6b0\ub294 \ub098\uc911\uc5d0 \uc0ac\uc6a9\ud558\uac8c \ub418\uba74 \uc815\ub9ac\ud574\uc57c\uaca0\ub2e4.\nRelation \uba54\uc18c\ub4dc\ub4e4\uc740 \ubb38\uc11c\ub97c \ub300\ucda9 \ud6d1\uace0 API Docs\ub97c \uc9c1\uc811 \uae4c\ubcf4\ub294\uac8c, \ud6a8\uc728\uc801\uc778 \uac83 \uac19\ub2e4."))}c.isMDXComponent=!0}}]);