"use strict";(self.webpackChunkgracefullight_github_io=self.webpackChunkgracefullight_github_io||[]).push([[52955],{51224:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>n,toc:()=>c});var n=a(56676),i=a(86070),s=a(33763);const o={title:"Atom-based state management and Valtio",date:new Date("2023-06-25T07:45:45.480Z"),description:"Shifting from Redux and Recoil to embracing Valtio for efficient state management.",authors:"me",tags:["react","javascript"]},r=void 0,l={authorsImageUrls:[void 0]},c=[{value:"Overview",id:"overview",level:2},{value:"atom",id:"atom",level:2},{value:"valtio",id:"valtio",level:2}];function d(e){const t={a:"a",code:"code",h2:"h2",li:"li",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"At one point, redux-saga seemed like a cool way to solve redux's tired state management, and then a combination of atomic states seemed like the way to go."}),"\n",(0,i.jsx)(t.li,{children:"That's why I've mostly used recoil, but if you're using query or swr, you don't need such a complicated feature to manage local UI state."}),"\n",(0,i.jsxs)(t.li,{children:["recoil seems to be an almost abandoned project with only bug fixes in the meta. ",(0,i.jsx)(t.a,{href:"https://github.com/facebookexperimental/Recoil/discussions/2171",children:"discussion#2171"})]}),"\n",(0,i.jsx)(t.li,{children:"Anyway, local UI state just needs to have a pub/sub pattern."}),"\n",(0,i.jsxs)(t.li,{children:["The winner of the 2023 state management library seems to be ",(0,i.jsx)(t.strong,{children:"zustand"}),".","\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"If you're building an event/messaging based system, it makes sense to use that library with the Flux pattern."}),"\n",(0,i.jsx)(t.li,{children:"If you're building an editor with action-based behavior for all front-end features, or if you're integrating with a chat system that receives function call requests, that's one thing."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.li,{children:"But for a typical use case, Flux is overkill, except for cascading forms, badges, modals, etc."}),"\n",(0,i.jsx)(t.li,{children:"If I were developing alone, I would want to separate the backend from the frontend, separate the Local, Dev, Stage, and Prod stages, and have a DB, scheduler, queue, API, and SSR stack."}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"atom",children:"atom"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Read first; ",(0,i.jsx)(t.a,{href:"https://medium.com/@yujso66/%EB%B2%88%EC%97%AD-%EB%A6%AC%EC%95%A1%ED%8A%B8-%EC%83%81%ED%83%9C-%EA%B4%80%EB%A6%AC%EC%9D%98-%EC%83%88%EB%A1%9C%EC%9A%B4-%ED%9D%90%EB%A6%84-6e5ed0022e39",children:"The new wave of React state management"}),"\uc744 \ubcf4\uc790."]}),"\n",(0,i.jsx)(t.li,{children:"Atomic, pub/sub, and derived are possible."}),"\n",(0,i.jsx)(t.li,{children:"Using derived state is also rarely necessary unless you need a new state per ID. For data, query already does the job."}),"\n",(0,i.jsx)(t.li,{children:"Atomic design and atomic state management became a necessity."}),"\n",(0,i.jsx)(t.li,{children:"With many developers working asynchronously, it was important to keep track of which files were atoms and what they were for."}),"\n",(0,i.jsxs)(t.li,{children:["We have a ",(0,i.jsx)(t.code,{children:"*.atom.ts"})," file superfix and a ",(0,i.jsx)(t.code,{children:"*State"})," variable name superfix."]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"valtio",children:"valtio"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Both ",(0,i.jsx)(t.a,{href:"https://github.com/pmndrs/jotai/blob/main/src/vanilla/atom.ts#L83",children:"jotai/atom"})," and ",(0,i.jsx)(t.a,{href:"https://github.com/facebookexperimental/Recoil/blob/main/packages/recoil/recoil_values/Recoil_atom.js#L185",children:"Recoil/atom"})," manage atom-based state and propagate state."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/pmndrs/valtio/blob/main/src/vanilla.ts#L156",children:"valtio/proxy"})," implements the same functionality using Proxy and Reflect."]}),"\n",(0,i.jsxs)(t.li,{children:["Memory management is not the worst, as you can see from the ",(0,i.jsx)(t.a,{href:"https://krausest.github.io/js-framework-benchmark/2023/table_chrome_114.0.5735.90.html",children:"Results for js web frameworks benchmark"}),"."]}),"\n",(0,i.jsxs)(t.li,{children:["zustand, jotai, and valtio are all open source, covered by the ",(0,i.jsx)(t.a,{href:"https://github.com/orgs/pmndrs/repositories?q=&type=all&language=&sort=stargazers",children:"pmndrs"})," community, with ",(0,i.jsx)(t.a,{href:"https://github.com/dai-shi",children:"the same person"})," as a contributor and maintainer."]}),"\n",(0,i.jsxs)(t.li,{children:["It just works, as his comments in ",(0,i.jsx)(t.a,{href:"https://github.com/pmndrs/valtio/discussions/128",children:"valito/discussion#128"})," show."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/pmndrs/valtio/issues/141#issuecomment-891214314",children:"valito/issues#141"})," Having spent a year on Redux and Redux-saga, and two years on Mobx POC and Recoil, this comment really resonated with me."]}),"\n",(0,i.jsx)(t.li,{children:"For the time being, I'm going to create several projects and try to use this state management library in all of them."}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},33763:(e,t,a)=>{a.d(t,{R:()=>o,x:()=>r});var n=a(30758);const i={},s=n.createContext(i);function o(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),n.createElement(s.Provider,{value:t},e.children)}},56676:e=>{e.exports=JSON.parse('{"permalink":"/en/2023/06/25/atomic-state-management-with-valtio","source":"@site/i18n/en/docusaurus-plugin-content-blog/2023/06/25/atomic-state-management-with-valtio.mdx","title":"Atom-based state management and Valtio","description":"Shifting from Redux and Recoil to embracing Valtio for efficient state management.","date":"2023-06-25T07:45:45.480Z","tags":[{"inline":true,"label":"react","permalink":"/en/tags/react"},{"inline":false,"label":"javascript","permalink":"/en/tags/javascript","description":"Any application that can be written in JavaScript, will eventually be written in JavaScript"}],"readingTime":2.045,"hasTruncateMarker":false,"authors":[{"name":"Gracefullight","title":"Owner","url":"https://github.com/gracefullight","imageURL":"https://avatars.githubusercontent.com/u/11773683?v=4","key":"me","page":null}],"frontMatter":{"title":"Atom-based state management and Valtio","date":"2023-06-25T07:45:45.480Z","description":"Shifting from Redux and Recoil to embracing Valtio for efficient state management.","authors":"me","tags":["react","javascript"]},"unlisted":false,"prevItem":{"title":"Prisma troubleshooting","permalink":"/en/2023/07/09/prisma-troubleshooting"},"nextItem":{"title":"A 10-year programmer\'s tech retrospective","permalink":"/en/2023/06/17/tech-retrospective"}}')}}]);