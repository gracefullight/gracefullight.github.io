"use strict";(self.webpackChunkgracefullight_github_io=self.webpackChunkgracefullight_github_io||[]).push([["54653"],{96107:function(e,n,s){s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>d});var t=s(92771),i=s(65813),r=s(661);let l={title:"FSD +001",date:new Date("2025-07-29T09:05:17.618Z"),description:"Fundamentals of software development 001",authors:"me",tags:["fsd"]},a,o={authorsImageUrls:[void 0]},d=[{value:"Software Engineering",id:"software-engineering",level:2},{value:"SDLC",id:"sdlc",level:3},{value:"SW Development Methodologies",id:"sw-development-methodologies",level:3},{value:"Waterfall",id:"waterfall",level:4},{value:"Agile",id:"agile",level:4},{value:"SW Development Paradigms",id:"sw-development-paradigms",level:3},{value:"Procedural Programming",id:"procedural-programming",level:4},{value:"Object-Oriented Programming",id:"object-oriented-programming",level:4},{value:"Requirements Analysis",id:"requirements-analysis",level:2},{value:"Requirements Validation",id:"requirements-validation",level:3},{value:"Use Case",id:"use-case",level:3},{value:"Use Case Backlog Template",id:"use-case-backlog-template",level:3},{value:"User Stories",id:"user-stories",level:3},{value:"UML",id:"uml",level:2},{value:"Use Case Model",id:"use-case-model",level:3},{value:"UML Use Case Model",id:"uml-use-case-model",level:3}];function c(e){let n={blockquote:"blockquote",h2:"h2",h3:"h3",h4:"h4",li:"li",mermaid:"mermaid",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"software-engineering",children:"Software Engineering"}),"\n",(0,i.jsx)(n.mermaid,{value:"graph TD\n  SWE[Software Engineering]\n  SWE --\x3e Systematic[Systematic<br/>SDLC]\n  SWE --\x3e Disciplined[Disciplined<br/>Methodologies]\n  SWE --\x3e Quantifiable[Quantifiable<br/>Measurable outcomes]"}),"\n",(0,i.jsx)(n.h3,{id:"sdlc",children:"SDLC"}),"\n",(0,i.jsx)(n.mermaid,{value:"graph LR\n  Ideation --\x3e Requirements --\x3e Design --\x3e Development --\x3e Testing --\x3e Deployment --\x3e Maintenance"}),"\n",(0,i.jsx)(n.h3,{id:"sw-development-methodologies",children:"SW Development Methodologies"}),"\n",(0,i.jsx)(n.h4,{id:"waterfall",children:"Waterfall"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Pros","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Simple & easy: each phase has specific deliverables"}),"\n",(0,i.jsx)(n.li,{children:"Clear & set milestones"}),"\n",(0,i.jsx)(n.li,{children:"Fixed requirements"}),"\n",(0,i.jsx)(n.li,{children:"Works well for small projects with specific set of requirements"}),"\n",(0,i.jsx)(n.li,{children:"Determine the schedule early"}),"\n",(0,i.jsx)(n.li,{children:"Clear structure"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Cons","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Working sw produced only at the end"}),"\n",(0,i.jsx)(n.li,{children:"High uncertainty of sw quality and functionality"}),"\n",(0,i.jsx)(n.li,{children:"Delayed testing, delays sw bugs discovery"}),"\n",(0,i.jsx)(n.li,{children:"After completion, no formal way to change the requirements"}),"\n",(0,i.jsx)(n.li,{children:"Fix working model, difficult to implement for complex projects"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"agile",children:"Agile"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Iterative cyclical progression of the SDLC","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Repetitive structure based on iterations (sprints)"}),"\n",(0,i.jsx)(n.li,{children:"2 ~ 4 weeks, SDLC repeats"}),"\n",(0,i.jsx)(n.li,{children:"Each release has 3 or more iterations"}),"\n",(0,i.jsx)(n.li,{children:"Working prototype is produced at the end of each iteration"}),"\n",(0,i.jsx)(n.li,{children:"Prototype is for QA and used as input for next iteration"}),"\n",(0,i.jsx)(n.li,{children:"Multiple releases"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Pros","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Innovation through team collaboration"}),"\n",(0,i.jsx)(n.li,{children:"Time to market"}),"\n",(0,i.jsx)(n.li,{children:"Continuous testing"}),"\n",(0,i.jsx)(n.li,{children:"Risk reduction, finding sw bugs early"}),"\n",(0,i.jsx)(n.li,{children:"Customer feedback loop"}),"\n",(0,i.jsx)(n.li,{children:"Flexibility to change requirements"}),"\n",(0,i.jsx)(n.li,{children:"Automates most of the SDLC === DevOps approach"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Cons","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Lack of long-term planning"}),"\n",(0,i.jsx)(n.li,{children:"Cost estimation is difficult"}),"\n",(0,i.jsx)(n.li,{children:"Limited documentation"}),"\n",(0,i.jsx)(n.li,{children:"No finite end"}),"\n",(0,i.jsx)(n.li,{children:"Difficult to see the end result due due to cyclic nature of agile"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"sw-development-paradigms",children:"SW Development Paradigms"}),"\n",(0,i.jsx)(n.mermaid,{value:"graph TB\n  ProgrammingParadigms[Programming Paradigms]\n  ProgrammingParadigms --\x3e Imperative[Imperative<br/>\uBA85\uB839\uD615]\n    Imperative --\x3e Procedural[Procedural<br/>\uC808\uCC28\uC801]\n    Imperative --\x3e ObjectOriented[Object-Oriented<br/>\uAC1D\uCCB4\uC9C0\uD5A5]\n  ProgrammingParadigms --\x3e Declarative[Declarative<br/>\uC120\uC5B8\uD615]\n    Declarative --\x3e Functional[Functional<br/>\uD568\uC218\uD615]\n    Declarative --\x3e Logical[Logical<br/>\uB17C\uB9AC\uC801]"}),"\n",(0,i.jsx)(n.h4,{id:"procedural-programming",children:"Procedural Programming"}),"\n",(0,i.jsx)(n.mermaid,{value:"graph TD\n  MainProgram[Main Program]\n  MainProgram --\x3e GlobalData1[Global Data]\n  MainProgram --\x3e GlobalData2[Global Data]\n  MainProgram --\x3e GlobalData3[Global Data]\n\n  GlobalData1 --- Function1[Function 1]\n  GlobalData1 --- Function2[Function 2]\n\n  GlobalData2 --- Function1[Function 1]\n  GlobalData2 --- Function2[Function 2]\n  GlobalData2 --- Function3[Function 3]\n\n  GlobalData3 --- Function3[Function 3]\n\n  GlobalData2 --- Function4[Function 4]\n  GlobalData3 --- Function4[Function 4] "}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Top-down decomposition: Each sub-problem is typically implemented as a function or procedure"}),"\n",(0,i.jsx)(n.li,{children:"Root represents the main program"}),"\n",(0,i.jsx)(n.li,{children:"Leaves denote individual procedures or functions"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"object-oriented-programming",children:"Object-Oriented Programming"}),"\n",(0,i.jsx)(n.mermaid,{value:"graph TD\n  subgraph Classes&Objects[Classes & Objects]\n    direction LR\n    Abstraction --- Polymorphism --- Encapsulation --- Inheritance --- Abstraction\n  end"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Abstraction: The process of hiding unnecessary details"}),"\n",(0,i.jsx)(n.li,{children:"Encapsulation: Restricts the direct access to components of an object, while using methods to access and modify the data"}),"\n",(0,i.jsx)(n.li,{children:"Inheritance: The process of creating sub-class"}),"\n",(0,i.jsx)(n.li,{children:"Polymorphism: Allows for the creation, use, and storage of multiple objects that inherit from the same parent class"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"requirements-analysis",children:"Requirements Analysis"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"Instructions provided by the stakeholder describe a target system"}),"\n"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"system properties, attributes and how a system should behave"}),"\n",(0,i.jsx)(n.li,{children:"Decomposed into Functional requirements / Non-functional requirements"}),"\n"]}),"\n",(0,i.jsx)(n.mermaid,{value:"graph LR\n  Gathering_Eliciting[Gathering & Eliciting Requirements] --\x3e Analyze[Analyze the documented Requirements<br/>Validate requirements]\n  Analyze --\x3e Identify[Identify use cases or user stories]\n  Identify --\x3e Use_case_modelling[Use case modeling<br/>High-level system functions into UML]"}),"\n",(0,i.jsx)(n.h3,{id:"requirements-validation",children:"Requirements Validation"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Compliance"}),"\n",(0,i.jsx)(n.li,{children:"Correctness"}),"\n",(0,i.jsx)(n.li,{children:"Completeness"}),"\n",(0,i.jsx)(n.li,{children:"Consistency"}),"\n",(0,i.jsx)(n.li,{children:"Usability"}),"\n"]}),"\n",(0,i.jsx)(n.mermaid,{value:"graph LR\n  Perform_the_testing[Perform the testing] --\x3e Record_the_results[Record the results] --\x3e Discuss_the_results[Discuss the results] --\x3e Implement_changes[Implement changes]"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Criteria"}),(0,i.jsx)(n.th,{children:"Description"}),(0,i.jsx)(n.th,{children:"Satisfactory Score (0-5)"}),(0,i.jsx)(n.th,{children:"Recommendations"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Compliance"}),(0,i.jsx)(n.td,{children:"Degree to which the requirements meet with industry standards and regulations"}),(0,i.jsx)(n.td,{children:"0"}),(0,i.jsx)(n.td,{children:"-"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Correctness"}),(0,i.jsx)(n.td,{children:"Degree to which the requirements is correct in terms of spelling, accuracy, grammatically."}),(0,i.jsx)(n.td,{children:"0"}),(0,i.jsx)(n.td,{children:"-"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Completeness"}),(0,i.jsx)(n.td,{children:"Degree to which the functional requirements match the intended software behavior"}),(0,i.jsx)(n.td,{children:"0"}),(0,i.jsx)(n.td,{children:"-"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Consistency"}),(0,i.jsx)(n.td,{children:"Degree to which the requirements can be mapped to use cases"}),(0,i.jsx)(n.td,{children:"0"}),(0,i.jsx)(n.td,{children:"-"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Expandability"}),(0,i.jsx)(n.td,{children:"Degree to which the requirements can be modified and improved to meet the project objectives"}),(0,i.jsx)(n.td,{children:"0"}),(0,i.jsx)(n.td,{children:"-"})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"use-case",children:"Use Case"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"an actor wants the system to, and captures functional requirements"}),"\n"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"always started by an actor, always written from the perspective of the actor"}),"\n",(0,i.jsxs)(n.li,{children:["a series of actions that a user must initiate to carry out some useful work and to achieve a goal","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"preconditions -> main flow -> alternative flow -> postconditions"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"reflects all the possible events in the system"}),"\n",(0,i.jsx)(n.li,{children:"complete set of use cases describes all the possible ways the system will behave and defines all the requirements"}),"\n"]}),"\n",(0,i.jsx)(n.mermaid,{value:"graph TD\n  UseCase[Use Case Analysis] --\x3e Q1[What functions will a specific<br/>actor want from the system?]\n  UseCase --\x3e Q2[Does the system store<br/>or retrieve information?]\n  UseCase --\x3e Q3[What happens when the<br/>system changes state?]\n  UseCase --\x3e Q4[Does the system interact<br/>with any external system?]\n  UseCase --\x3e Q5[Does the system<br/>generate any reports?]\n  \n  Q1 --\x3e Actor[Actor Requirements]\n  Q2 --\x3e Data[Data Management]\n  Q3 --\x3e State[State Management]\n  Q4 --\x3e External[External Integration]\n  Q5 --\x3e Reports[Report Generation]\n  \n  Actor --\x3e Complete[Complete Use Case Model]\n  Data --\x3e Complete\n  State --\x3e Complete\n  External --\x3e Complete\n  Reports --\x3e Complete\n  \n  style UseCase fill:#E6F3FF,stroke:#3366FF,stroke-width:2px\n  style Complete fill:#E6FFDD,stroke:#66BB66,stroke-width:2px\n  style Actor fill:#FFF2CC,stroke:#FFC000,stroke-width:1px\n  style Data fill:#FFF2CC,stroke:#FFC000,stroke-width:1px\n  style State fill:#FFF2CC,stroke:#FFC000,stroke-width:1px\n  style External fill:#FFF2CC,stroke:#FFC000,stroke-width:1px\n  style Reports fill:#FFF2CC,stroke:#FFC000,stroke-width:1px"}),"\n",(0,i.jsx)(n.h3,{id:"use-case-backlog-template",children:"Use Case Backlog Template"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"ID"}),(0,i.jsx)(n.th,{children:"Use Case Title"}),(0,i.jsx)(n.th,{children:"Actor(s)"}),(0,i.jsx)(n.th,{children:"Goal/Description"}),(0,i.jsx)(n.th,{children:"Preconditions"}),(0,i.jsx)(n.th,{children:"Postconditions"}),(0,i.jsx)(n.th,{children:"Priority"}),(0,i.jsx)(n.th,{children:"Status"}),(0,i.jsx)(n.th,{children:"Notes"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"UC-001"}),(0,i.jsx)(n.td,{children:"User Login"}),(0,i.jsx)(n.td,{children:"User"}),(0,i.jsx)(n.td,{children:"Allow users to log in to the system"}),(0,i.jsx)(n.td,{children:"User must have an account"}),(0,i.jsx)(n.td,{children:"User is logged in"}),(0,i.jsx)(n.td,{children:"High"}),(0,i.jsx)(n.td,{children:"Open"}),(0,i.jsx)(n.td,{children:"-"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"UC-002"}),(0,i.jsx)(n.td,{children:"View Profile"}),(0,i.jsx)(n.td,{children:"User"}),(0,i.jsx)(n.td,{children:"Allow users to view their profile information"}),(0,i.jsx)(n.td,{children:"User must be logged in"}),(0,i.jsx)(n.td,{children:"User profile is displayed"}),(0,i.jsx)(n.td,{children:"Medium"}),(0,i.jsx)(n.td,{children:"Open"}),(0,i.jsx)(n.td,{children:"-"})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"user-stories",children:"User Stories"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Planned to be delivered in a single iteration, some user stories may span multiple iterations"}),"\n",(0,i.jsx)(n.li,{children:"Single requirement expressed from developer's perspective"}),"\n",(0,i.jsx)(n.li,{children:"Describes a functional or non-functional requirement"}),"\n"]}),"\n",(0,i.jsx)(n.mermaid,{value:"graph TD\n  As[As a **role**] --\x3e IWant[I want to **goal**]\n  IWant --\x3e SoThat[So that **benefit**]"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"As a"})," student"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"I want to"})," submit assignments online"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"so that"})," I can receive feedback from my instructor."]}),"\n"]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"ID"}),(0,i.jsx)(n.th,{children:"User Story"}),(0,i.jsx)(n.th,{children:"Acceptance Criteria"}),(0,i.jsx)(n.th,{children:"Priority"}),(0,i.jsx)(n.th,{children:"Status"}),(0,i.jsx)(n.th,{children:"Story Points"}),(0,i.jsx)(n.th,{children:"Notes"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"US-001"}),(0,i.jsx)(n.td,{children:"As a student, I want to submit assignments online so that I can receive feedback from my instructor."}),(0,i.jsxs)(n.td,{children:["- User can upload assignment files",(0,i.jsx)("br",{}),"- User receives confirmation of submission",(0,i.jsx)("br",{}),"- Instructor can view submitted assignments"]}),(0,i.jsx)(n.td,{children:"High"}),(0,i.jsx)(n.td,{children:"Open"}),(0,i.jsx)(n.td,{children:"5"}),(0,i.jsx)(n.td,{children:"-"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"US-002"}),(0,i.jsx)(n.td,{children:"As a student, I want to view my grades online so that I can track my academic progress."}),(0,i.jsxs)(n.td,{children:["- User can view grades for each assignment",(0,i.jsx)("br",{}),"- User can see overall course grade",(0,i.jsx)("br",{}),"- Grades are updated in real-time"]}),(0,i.jsx)(n.td,{children:"Medium"}),(0,i.jsx)(n.td,{children:"Open"}),(0,i.jsx)(n.td,{children:"3"}),(0,i.jsx)(n.td,{children:"-"})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"uml",children:"UML"}),"\n",(0,i.jsx)(n.mermaid,{value:"graph TD\n  subgraph Behavior_Diagrams[Behavior Diagrams]\n    direction LR\n    UseCaseDiagram[Use Case Diagram]\n    SequenceDiagram[Sequence Diagram]\n    ActivityDiagram[Activity Diagram]\n    StateMachineDiagram[State Machine Diagram]\n  end \n  \n  subgraph Structure_Diagrams[Structure Diagrams]\n    direction LR\n    ClassDiagram[Class Diagram]\n    ObjectDiagram[Object Diagram]\n    ComponentDiagram[Component Diagram]\n    DeploymentDiagram[Deployment Diagram]\n  end"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Actors: Entity that performs actions in the system"}),"\n",(0,i.jsx)(n.li,{children:"Use Cases: Oval representation inside the system boundary of a functional requirement"}),"\n",(0,i.jsx)(n.li,{children:"System Boundary: Square representation of the system scope"}),"\n",(0,i.jsxs)(n.li,{children:["Relationships","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Association: Between an actor and a use case"}),"\n",(0,i.jsx)(n.li,{children:"Include: Between use cases, The included use case is always necessary for the completion of the activating use case."}),"\n",(0,i.jsx)(n.li,{children:"Extend: Between use cases, The extension use case is activated occasionally at specific extension point."}),"\n",(0,i.jsx)(n.li,{children:"Generalization/Inheritance: Between use cases, they achieve the same goal but in different ways."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.mermaid,{value:"graph LR\n  Choose_System_boundary[Choose System Boundary] --\x3e Identify_Actors[Identify Actors]\n  Identify_Actors --\x3e Identify_Their_Goals[Identify Their Goals<br/>goal-oriented, verb-noun phrases]\n  Identify_Their_Goals --\x3e Connect_Actors_use_cases[Connect Actors to Use Cases]"}),"\n",(0,i.jsx)(n.h3,{id:"use-case-model",children:"Use Case Model"}),"\n",(0,i.jsx)(n.mermaid,{value:'graph LR\n    %% Actors\n    Customer((Customer))\n    Clerk((Clerk))\n    \n    %% System Boundary\n    subgraph "Video Stream System"\n        %% Use Cases\n        UC1[Authenticate User]\n        UC1A[Login]\n        UC1B[Register]\n        UC2[Browse Videos]\n        UC3[Play Video]\n        UC4[Upload Video]\n        UC5[Manage Users]\n        UC6[Request Support]\n    end\n    \n    %% Customer Use Cases\n    Customer --- UC1A\n    Customer --- UC1B\n    Customer --- UC2\n    Customer --- UC3\n    Customer --- UC6\n    \n    %% Clerk Use Cases\n    Clerk --- UC1A\n    Clerk --- UC4\n    Clerk --- UC5\n    Clerk --- UC6\n    \n    %% Generalization/Inheritance Relationships\n    UC1A --\x3e UC1\n    UC1B --\x3e UC1\n    \n    %% Include Relationships\n    UC3 -.->|include| UC1A\n    UC4 -.->|include| UC1A\n    \n    %% Extend Relationships\n    UC2 -.->|extend| UC3\n    \n    %% Styling\n    style Customer fill:#E6F3FF,stroke:#3366FF,stroke-width:2px\n    style Clerk fill:#FFE6CC,stroke:#FF9900,stroke-width:2px\n    style UC1 fill:#FFE6E6,stroke:#FF6B6B,stroke-width:3px\n    style UC1A fill:#FFE6E6,stroke:#FF6B6B,stroke-width:1px\n    style UC1B fill:#FFE6E6,stroke:#FF6B6B,stroke-width:1px\n    style UC2 fill:#F0F8FF,stroke:#4682B4,stroke-width:1px\n    style UC3 fill:#F0F8FF,stroke:#4682B4,stroke-width:1px\n    style UC4 fill:#FFF8DC,stroke:#DAA520,stroke-width:1px\n    style UC5 fill:#FFF8DC,stroke:#DAA520,stroke-width:1px\n    style UC6 fill:#E6FFE6,stroke:#32CD32,stroke-width:2px'}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"System boundary: Defines the scope of the system"}),"\n",(0,i.jsxs)(n.li,{children:["Generalization: Describes the shared parts in a parent use case, then specializes in child use cases","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Inherit features from their parent use case"}),"\n",(0,i.jsx)(n.li,{children:"Add new features"}),"\n",(0,i.jsx)(n.li,{children:"Change inherited features"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Short, simple use cases on the core functionality may be completed within one iteration."}),"\n",(0,i.jsx)(n.li,{children:"Keep use cases short and simple"}),"\n",(0,i.jsx)(n.li,{children:"Focus on what, not the how"}),"\n",(0,i.jsx)(n.li,{children:"Avoid functional decomposition"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"uml-use-case-model",children:"UML Use Case Model"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["CRUD","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Create a record"}),"\n",(0,i.jsx)(n.li,{children:"Retrieve the record given a key"}),"\n",(0,i.jsx)(n.li,{children:"Update the record with new data and store it"}),"\n",(0,i.jsx)(n.li,{children:"Delete a record"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Each is a separate goal, possibly carried by a different person with a different security level."}),"\n"]})]})}function h(e={}){let{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},661:function(e,n,s){s.d(n,{R:()=>l,x:()=>a});var t=s(59729);let i={},r=t.createContext(i);function l(e){let n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),t.createElement(r.Provider,{value:n},e.children)}},92771:function(e){e.exports=JSON.parse('{"permalink":"/en/2025/07/29/fundamentals-of-software-development-001","source":"@site/blog/2025/07/29/fundamentals-of-software-development-001.md","title":"FSD +001","description":"Fundamentals of software development 001","date":"2025-07-29T09:05:17.618Z","tags":[{"inline":true,"label":"fsd","permalink":"/en/tags/fsd"}],"readingTime":7.32,"hasTruncateMarker":false,"authors":[{"name":"Gracefullight","title":"Owner","url":"https://github.com/gracefullight","imageURL":"https://avatars.githubusercontent.com/u/11773683?v=4","key":"me","page":null}],"frontMatter":{"title":"FSD +001","date":"2025-07-29T09:05:17.618Z","description":"Fundamentals of software development 001","authors":"me","tags":["fsd"]},"unlisted":false,"prevItem":{"title":"\uD638\uC8FC \uC9D1 \uAD6C\uD558\uAE30","permalink":"/en/2025/07/29/study-in-australia-housing"},"nextItem":{"title":"AI \uC5D0\uC774\uC804\uD2B8\uC640 \uD658\uACBD","permalink":"/en/2025/07/29/agent-and-environments"}}')}}]);