"use strict";(self.webpackChunkgracefullight_github_io=self.webpackChunkgracefullight_github_io||[]).push([[62638],{49613:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var r=n(59496);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(n),m=a,g=u["".concat(s,".").concat(m)]||u[m]||d[m]||o;return n?r.createElement(g,i(i({ref:t},p),{},{components:n})):r.createElement(g,i({ref:t},p))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},44714:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=n(31966),a=(n(59496),n(49613));const o={title:"Workbox5 \ubc84\uc804\uc758 \uc8fc\uc694 \ubcc0\uacbd\uc0ac\ud56d",authors:"me",tags:["javascript","pwa","serviceworker","workbox"],date:new Date("2020-02-02T16:47:22.000Z")},i="Workbox5 \ubc84\uc804",l={permalink:"/en/2020/02/02/Workbox5-breaking-changes",source:"@site/blog/2020/02/02/Workbox5-breaking-changes.md",title:"Workbox5 \ubc84\uc804\uc758 \uc8fc\uc694 \ubcc0\uacbd\uc0ac\ud56d",description:"\uc798 \ub3cc\ub358 workbox-cli \uac00 5\ubc84\uc804 \ub9b4\ub9ac\uc988 \ud6c4\ubd80\ud130 \ub3cc\uc9c0 \uc54a\uc544\uc11c \ud655\uc778\ud574\ubcf4\uc558\ub2e4.",date:"2020-02-02T16:47:22.000Z",formattedDate:"February 2, 2020",tags:[{label:"javascript",permalink:"/en/tags/javascript"},{label:"pwa",permalink:"/en/tags/pwa"},{label:"serviceworker",permalink:"/en/tags/serviceworker"},{label:"workbox",permalink:"/en/tags/workbox"}],readingTime:1.08,hasTruncateMarker:!1,authors:[{name:"Gracefullight",title:"Owner",url:"https://github.com/gracefullight",imageURL:"https://avatars.githubusercontent.com/u/11773683?v=4",key:"me"}],frontMatter:{title:"Workbox5 \ubc84\uc804\uc758 \uc8fc\uc694 \ubcc0\uacbd\uc0ac\ud56d",authors:"me",tags:["javascript","pwa","serviceworker","workbox"],date:"2020-02-02T16:47:22.000Z"},prevItem:{title:"NodeJS\uc5d0\uc11c \ucee4\ub9e8\ub4dc \ud30c\uc2f1\ud558\uae30",permalink:"/en/2020/02/16/NodeJS\uc5d0\uc11c-\ucee4\ub9e8\ub4dc-\ud30c\uc2f1\ud558\uae30"},nextItem:{title:"Pythonic - \ud578\ub4e4\ub9c1",permalink:"/en/2020/01/27/Pythonic-handling"}},s={authorsImageUrls:[void 0]},c=[{value:"injectManifest",id:"injectmanifest",level:2},{value:"NavigationRoute",id:"navigationroute",level:2},{value:"BroadcastChannel",id:"broadcastchannel",level:2}],p={toc:c},u="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"\uc798 \ub3cc\ub358 ",(0,a.kt)("inlineCode",{parentName:"p"},"workbox-cli")," \uac00 5\ubc84\uc804 \ub9b4\ub9ac\uc988 \ud6c4\ubd80\ud130 \ub3cc\uc9c0 \uc54a\uc544\uc11c \ud655\uc778\ud574\ubcf4\uc558\ub2e4.\n\uc804\uccb4 \ubb38\uc11c\ub294 ",(0,a.kt)("a",{parentName:"p",href:"https://developers.google.com/web/tools/workbox/guides/migrations/migrate-from-v4"},"\uc5ec\uae30"),"\uc11c \ud655\uc778 \uac00\ub2a5\ud558\ub2e4."),(0,a.kt)("h2",{id:"injectmanifest"},"injectManifest"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"self.__WB_MANIFEST")," \ub97c \uc8fc\uc785\ubc1b\ub294 \ubc29\uc2dd\uc73c\ub85c \ubcc0\uacbd\ub418\uc5c8\ub2e4."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"// v4:\nprecacheAndRoute([]);\n\n// v5:\nprecacheAndRoute(self.__WB_MANIFEST);\n")),(0,a.kt)("h2",{id:"navigationroute"},"NavigationRoute"),(0,a.kt)("p",null,"blacklist, whitelist \uc5d0\uc11c denylist, allowlist \ub85c \ud0a4 \uba85\uc774 \ubcc0\uacbd\ub418\uc5c8\ub2e4."),(0,a.kt)("h2",{id:"broadcastchannel"},"BroadcastChannel"),(0,a.kt)("p",null,"broadcast-update \uac00 \uc790\uccb4 API \uc5d0\uc11c ",(0,a.kt)("inlineCode",{parentName:"p"},"postMessage()"),"\ub85c \ubcc0\uacbd\ub418\uc5c8\ub2e4.\n\uc774\ubca4\ud2b8 \ub9ac\uc2a4\ub108\uac00 \ub9ce\uc544\uc838 \ubcf5\uc7a1\ud574\uc9c0\uace0, \uae30\uc874 API\uc5d0\uc11c\ub294 \uba54\uc138\uc9d5\uc758 \ubc84\ud37c \uae30\ub2a5\uc774 \uc5c6\uc5c8\uae30 \ub54c\ubb38\uc774\ub2e4."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'// v4:\nconst updatesChannel = new BroadcastChannel("api-updates");\nupdatesChannel.addEventListener("message", (event) => {\n  const { cacheName, updatedUrl } = event.data.payload;\n  // ... your code here ...\n});\n\n// v5:\n// This listener should be added as early as possible in your page\'s lifespan\n// to ensure that messages are properly buffered.\nnavigator.serviceWorker.addEventListener("message", (event) => {\n  // Optional: ensure the message came from workbox-broadcast-update\n  if (event.meta === "workbox-broadcast-update") {\n    const { cacheName, updatedUrl } = event.data.payload;\n    // ... your code here ...\n  }\n});\n')))}d.isMDXComponent=!0}}]);