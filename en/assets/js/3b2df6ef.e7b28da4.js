"use strict";(self.webpackChunkgracefullight_github_io=self.webpackChunkgracefullight_github_io||[]).push([[78194],{49613:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>h});var a=r(59496);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=a.createContext({}),p=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},m=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,l=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),c=p(r),d=n,h=c["".concat(l,".").concat(d)]||c[d]||u[d]||i;return r?a.createElement(h,o(o({ref:t},m),{},{components:r})):a.createElement(h,o({ref:t},m))}));function h(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[c]="string"==typeof e?e:n,o[1]=s;for(var p=2;p<i;p++)o[p]=r[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},78206:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var a=r(31966),n=(r(59496),r(49613));const i={title:"Prisma troubleshooting",date:new Date("2023-07-08T15:01:34.544Z"),description:"Exploring Prisma's read replicas support, single data source handling, and lack of polymorphism association support.",authors:"me",tags:["nodejs","prisma"]},o=void 0,s={permalink:"/en/2023/07/09/prisma-troubleshooting",source:"@site/i18n/en/docusaurus-plugin-content-blog/2023/07/09/prisma-troubleshooting.mdx",title:"Prisma troubleshooting",description:"Exploring Prisma's read replicas support, single data source handling, and lack of polymorphism association support.",date:"2023-07-08T15:01:34.544Z",formattedDate:"July 8, 2023",tags:[{label:"nodejs",permalink:"/en/tags/nodejs"},{label:"prisma",permalink:"/en/tags/prisma"}],readingTime:.515,hasTruncateMarker:!1,authors:[{name:"Gracefullight",title:"Owner",url:"https://github.com/gracefullight",imageURL:"https://avatars.githubusercontent.com/u/11773683?v=4",key:"me"}],frontMatter:{title:"Prisma troubleshooting",date:"2023-07-08T15:01:34.544Z",description:"Exploring Prisma's read replicas support, single data source handling, and lack of polymorphism association support.",authors:"me",tags:["nodejs","prisma"]},nextItem:{title:"Atom-based state management and Valtio",permalink:"/en/2023/06/25/atomic-state-management-with-valtio"}},l={authorsImageUrls:[void 0]},p=[{value:"Read replica",id:"read-replica",level:2},{value:"Data sources",id:"data-sources",level:2},{value:"Polymorphism",id:"polymorphism",level:2}],m={toc:p},c="wrapper";function u(e){let{components:t,...r}=e;return(0,n.kt)(c,(0,a.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"read-replica"},"Read replica"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"I thought it didn't exist due to the ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/prisma/prisma/issues/172"},"Support for Read Replicas #172")," issue."),(0,n.kt)("li",{parentName:"ul"},"But it is provided in the form of middleware at ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/prisma/prisma-read-replica-middleware"},"prisma/prisma-read-replica-middleware"),"."),(0,n.kt)("li",{parentName:"ul"},"e.g. ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/prisma/middleware-examples/tree/main/prisma-read-replica-middleware"},"prisma/middleware-examples/prisma-read-replica-middleware"))),(0,n.kt)("h2",{id:"data-sources"},"Data sources"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"In the ",(0,n.kt)("inlineCode",{parentName:"li"},"schema.prisma")," file, there can ",(0,n.kt)("a",{parentName:"li",href:"https://www.prisma.io/docs/concepts/components/prisma-schema/data-sources"},"only be one")," ",(0,n.kt)("inlineCode",{parentName:"li"},"datasource")," column."),(0,n.kt)("li",{parentName:"ul"},"In case the data source changes, the ",(0,n.kt)("inlineCode",{parentName:"li"},"migration.lock")," file must be deleted and the migration process must be run again.")),(0,n.kt)("h2",{id:"polymorphism"},"Polymorphism"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/prisma/prisma/issues/1644"},"Support for Polymorphic Associations #1644")," It seems there is no current plan to support this."),(0,n.kt)("li",{parentName:"ul"},"Polymorphic relationships are necessary in normalization but it de-normalizes by adding information to the column.")))}u.isMDXComponent=!0}}]);