<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xsl" href="atom.xsl"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://gracefullight.dev/</id>
    <title>gracefullight.dev Blog</title>
    <updated>2025-01-26T08:56:05.774Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://gracefullight.dev/"/>
    <subtitle>gracefullight.dev Blog</subtitle>
    <icon>https://gracefullight.dev/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[PET, 개인정보보호 강화기술]]></title>
        <id>https://gracefullight.dev/pe/sec/privacy-enhancing-technology/</id>
        <link href="https://gracefullight.dev/pe/sec/privacy-enhancing-technology/"/>
        <updated>2025-01-26T08:56:05.774Z</updated>
        <summary type="html"><![CDATA[Privacy Enhancing Technology]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_OSIK" id="pet-개념">PET 개념<a href="https://gracefullight.dev/pe/sec/privacy-enhancing-technology/#pet-%EA%B0%9C%EB%85%90" class="hash-link" aria-label="PET 개념에 대한 직접 링크" title="PET 개념에 대한 직접 링크">​</a></h2>
<ul>
<li>특정 개인정보 또는 데이터 보호 기능을 달성하거나 개인 또는 자연인 그룹의 개인정보를 위협으로 부터 보호하기 위한 기술 및 프로세스</li>
<li>AI 개인정보 학습/유출, 클라우드 등 공유 서버 환경 발달, 이동형 영상정보처리기기의 확산</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_OSIK" id="pet-유형-적용사례">PET 유형, 적용사례<a href="https://gracefullight.dev/pe/sec/privacy-enhancing-technology/#pet-%EC%9C%A0%ED%98%95-%EC%A0%81%EC%9A%A9%EC%82%AC%EB%A1%80" class="hash-link" aria-label="PET 유형, 적용사례에 대한 직접 링크" title="PET 유형, 적용사례에 대한 직접 링크">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_OSIK" id="개인정보-처리-기법-측면의-개인정보보호-강화기술">개인정보 처리 기법 측면의 개인정보보호 강화기술<a href="https://gracefullight.dev/pe/sec/privacy-enhancing-technology/#%EA%B0%9C%EC%9D%B8%EC%A0%95%EB%B3%B4-%EC%B2%98%EB%A6%AC-%EA%B8%B0%EB%B2%95-%EC%B8%A1%EB%A9%B4%EC%9D%98-%EA%B0%9C%EC%9D%B8%EC%A0%95%EB%B3%B4%EB%B3%B4%ED%98%B8-%EA%B0%95%ED%99%94%EA%B8%B0%EC%88%A0" class="hash-link" aria-label="개인정보 처리 기법 측면의 개인정보보호 강화기술에 대한 직접 링크" title="개인정보 처리 기법 측면의 개인정보보호 강화기술에 대한 직접 링크">​</a></h3>
<table><thead><tr><th>구분</th><th>기술</th><th>설명</th></tr></thead><tbody><tr><td>난독화</td><td>차분 프라이버시</td><td>개인과 연결된 데이터에 무작위성을 부여하거나 노이즈를 적용하여 재식별 가능성을 낮춤</td></tr><tr><td></td><td>합성 데이터 생성(SDG)</td><td>기존 지식을 사용하여 완전한 새로운 데이터를 생성</td></tr><tr><td></td><td>영지식 증명</td><td>정보를 노출하지 않고 진실 여부 검증</td></tr><tr><td>암호화</td><td>동형 암호화(HE)</td><td>일반 텍스트를 공개하지 않고 암호화된 데이터의 연산 수행</td></tr><tr><td></td><td>신원 기반 암호화(IBE)</td><td>전통적 공개키 대신 개인이 생성한 발신자에서 수신자 방향의 메시지에 암호화 적용</td></tr><tr><td></td><td>안전한 다자 연산(SMPC)</td><td>분산 컴퓨팅을 수행하면서 정확성과 최소한의 입력 및 출력 학습을 우선시하여 연산 과정 보호</td></tr><tr><td></td><td>신뢰받는 실행 환경(TEE)</td><td>데이터의 기밀성을 훼손하지 않고 암호화된 키와 민감 데이터를 안전하게 접근하는 기술</td></tr></tbody></table>
<h3 class="anchor anchorWithStickyNavbar_OSIK" id="개인정보-처리-환경-측면의-개인정보보호-강화기술">개인정보 처리 환경 측면의 개인정보보호 강화기술<a href="https://gracefullight.dev/pe/sec/privacy-enhancing-technology/#%EA%B0%9C%EC%9D%B8%EC%A0%95%EB%B3%B4-%EC%B2%98%EB%A6%AC-%ED%99%98%EA%B2%BD-%EC%B8%A1%EB%A9%B4%EC%9D%98-%EA%B0%9C%EC%9D%B8%EC%A0%95%EB%B3%B4%EB%B3%B4%ED%98%B8-%EA%B0%95%ED%99%94%EA%B8%B0%EC%88%A0" class="hash-link" aria-label="개인정보 처리 환경 측면의 개인정보보호 강화기술에 대한 직접 링크" title="개인정보 처리 환경 측면의 개인정보보호 강화기술에 대한 직접 링크">​</a></h3>
<table><thead><tr><th>구분</th><th>기술</th><th>특징</th></tr></thead><tbody><tr><td>연합 및 분석분석</td><td>연합 학습</td><td>개별 엔드포인트로 기계 학습 모델 훈련, 요약 데이터만 중앙 데이터 저장소에 전송할 수 있도록 허용</td></tr><tr><td></td><td>분산 분석</td><td>프라이버시를 보호하는 기계 학습</td></tr><tr><td>데이터 책임도구</td><td>책임 시스템</td><td>데이터에 접근할 수 있는 시기에 대한 규칙 설정 및 집행</td></tr><tr><td></td><td>개인정보 관리시스템</td><td>정보주체에게 자신의 개인정보에 대한 통제권 제공</td></tr></tbody></table>
<h3 class="anchor anchorWithStickyNavbar_OSIK" id="pet-적용사례">PET 적용사례<a href="https://gracefullight.dev/pe/sec/privacy-enhancing-technology/#pet-%EC%A0%81%EC%9A%A9%EC%82%AC%EB%A1%80" class="hash-link" aria-label="PET 적용사례에 대한 직접 링크" title="PET 적용사례에 대한 직접 링크">​</a></h3>
<table><thead><tr><th>구분</th><th>PET 기술</th><th>적용사례</th></tr></thead><tbody><tr><td>애플</td><td>차분 프라이버시 (Differential Privacy)</td><td>메시지 앱, 검색어 추천 시스템에 적용하여 개인 정보 보호 강화</td></tr><tr><td>구글</td><td>연합 학습 (Federated Learning)</td><td>키보드 앱에서 개인정보 전송 기능에 적용, 중앙 서버에 데이터 전송 없이 학습</td></tr><tr><td>메타</td><td>다자간 계산 (Multi-Party Computation, MPC)</td><td>광고 및 마케팅에 활용할 개인정보 수집, 여러 당사자가 협력하여 데이터 분석</td></tr><tr><td>통계청</td><td>안전한 다자 연산 (Secure Multi-Party Computation, SMPC)</td><td>개인정보 보호를 위한 데이터 허브 플랫폼 개발</td></tr></tbody></table>]]></content>
        <author>
            <name>Eunkwang Shin</name>
            <uri>https://github.com/gracefullight</uri>
        </author>
        <category label="professional-engineer" term="professional-engineer"/>
        <category label="pe/security" term="pe/security"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[소프트웨어 진흥법]]></title>
        <id>https://gracefullight.dev/pe/sw/소프트웨어-진흥법/</id>
        <link href="https://gracefullight.dev/pe/sw/소프트웨어-진흥법/"/>
        <updated>2025-01-26T07:04:21.459Z</updated>
        <summary type="html"><![CDATA[소프트웨어 진흥법]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_OSIK" id="소프트웨어-진흥법-개념">소프트웨어 진흥법 개념<a href="https://gracefullight.dev/pe/sw/%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4-%EC%A7%84%ED%9D%A5%EB%B2%95/#%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4-%EC%A7%84%ED%9D%A5%EB%B2%95-%EA%B0%9C%EB%85%90" class="hash-link" aria-label="소프트웨어 진흥법 개념에 대한 직접 링크" title="소프트웨어 진흥법 개념에 대한 직접 링크">​</a></h2>
<!-- -->
<ul>
<li>국가 전반의 소프트웨어 역량을 강화하고 소프트웨어산업 발전의 기반을 조성함으로써 국가경쟁력의 확보, 국민생활의 향상 및 국민경제의 건전하고 지속적인 발전에 기여</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_OSIK" id="소프트웨어-안전-확보-지침">소프트웨어 안전 확보 지침<a href="https://gracefullight.dev/pe/sw/%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4-%EC%A7%84%ED%9D%A5%EB%B2%95/#%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4-%EC%95%88%EC%A0%84-%ED%99%95%EB%B3%B4-%EC%A7%80%EC%B9%A8" class="hash-link" aria-label="소프트웨어 안전 확보 지침에 대한 직접 링크" title="소프트웨어 안전 확보 지침에 대한 직접 링크">​</a></h2>
<table><thead><tr><th>구분</th><th>지침</th><th>세부 내용</th></tr></thead><tbody><tr><td>위험 분석</td><td>소프트웨어 안전 위험 분석</td><td>- 소프트웨어의 잠재적 위험요소 식별<br>- 시스템 동작 시 발생 가능한 오류와 영향을 분석<br>- 위험 완화를 위한 우선순위 설정</td></tr><tr><td>설계 및 구현</td><td>안전 설계 및 구현</td><td>- 안전 관련 기능 설계 (예: 결함 허용, 오류 복구)<br>- 코드의 안전성 확보를 위한 코딩 표준 준수<br>- 위험 상황 식별 및 대응 로직 포함</td></tr><tr><td>검증</td><td>안전 검증 및 테스트</td><td>- 안전 요구사항 충족 여부 검증<br>- 단위 테스트, 통합 테스트, 시스템 테스트를 통해 오류 검출<br>- 안전 관련 기능 시험 및 검토</td></tr><tr><td>운영 관리</td><td>운영 환경에서의 안전 확보</td><td>- 운영환경 변경 시 안전 영향 분석<br>- 장애 발생 대비 안전 대책 수립<br>- 유지보수 중 발생 가능한 위험 관리</td></tr><tr><td>준수 및 개선</td><td>안전 준수와 지속적 개선</td><td>- 국제표준과 안전 지침 준수<br>- 안전사고 예방을 위한 프로세스 개선<br>- 피드백을 반영하여 안전성 강화</td></tr></tbody></table>
<h2 class="anchor anchorWithStickyNavbar_OSIK" id="소프트웨어-진흥-전략">소프트웨어 진흥 전략<a href="https://gracefullight.dev/pe/sw/%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4-%EC%A7%84%ED%9D%A5%EB%B2%95/#%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4-%EC%A7%84%ED%9D%A5-%EC%A0%84%EB%9E%B5" class="hash-link" aria-label="소프트웨어 진흥 전략에 대한 직접 링크" title="소프트웨어 진흥 전략에 대한 직접 링크">​</a></h2>
<!-- -->
<ul>
<li>디지털 시대를 선도, 글로벌 SW 경쟁력 강화, SW 활용 문화 확대를 위해 7가지 분야에서 혁신 필요</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_OSIK" id="참조">참조<a href="https://gracefullight.dev/pe/sw/%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4-%EC%A7%84%ED%9D%A5%EB%B2%95/#%EC%B0%B8%EC%A1%B0" class="hash-link" aria-label="참조에 대한 직접 링크" title="참조에 대한 직접 링크">​</a></h2>
<ul>
<li><a href="https://law.go.kr/%eb%b2%95%eb%a0%b9/%ec%86%8c%ed%94%84%ed%8a%b8%ec%9b%a8%ec%96%b4%ec%a7%84%ed%9d%a5%eb%b2%95" target="_blank" rel="noopener noreferrer">국가법령정보센터: 소프트웨어 진흥법</a></li>
</ul>]]></content>
        <author>
            <name>Eunkwang Shin</name>
            <uri>https://github.com/gracefullight</uri>
        </author>
        <category label="professional-engineer" term="professional-engineer"/>
        <category label="pe/software-engineering" term="pe/software-engineering"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[좋은 소프트웨어 특징]]></title>
        <id>https://gracefullight.dev/pe/sw/software-characteristics/</id>
        <link href="https://gracefullight.dev/pe/sw/software-characteristics/"/>
        <updated>2025-01-26T06:56:41.559Z</updated>
        <summary type="html"><![CDATA[Software Characteristics]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_OSIK" id="좋은-소프트웨어의-개념">좋은 소프트웨어의 개념<a href="https://gracefullight.dev/pe/sw/software-characteristics/#%EC%A2%8B%EC%9D%80-%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EC%9D%98-%EA%B0%9C%EB%85%90" class="hash-link" aria-label="좋은 소프트웨어의 개념에 대한 직접 링크" title="좋은 소프트웨어의 개념에 대한 직접 링크">​</a></h2>
<ul>
<li>SW 발주자, 개발자, 사용자 모두에게 이점을 제공하는 소프트웨어로서 기능성, 신뢰성, 사용성, 효율성, 유지보수성, 이식성, 호환성, 보안성 등 소프트웨어 품질특성을 만족하는 소프트웨어</li>
<li>ISO 25010 국제 표준 기반 특성 정의 및 품질 확보</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_OSIK" id="좋은-소프트웨어-개념도">좋은 소프트웨어 개념도<a href="https://gracefullight.dev/pe/sw/software-characteristics/#%EC%A2%8B%EC%9D%80-%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4-%EA%B0%9C%EB%85%90%EB%8F%84" class="hash-link" aria-label="좋은 소프트웨어 개념도에 대한 직접 링크" title="좋은 소프트웨어 개념도에 대한 직접 링크">​</a></h2>
<!-- -->
<h3 class="anchor anchorWithStickyNavbar_OSIK" id="좋은-소프트웨어-조건">좋은 소프트웨어 조건<a href="https://gracefullight.dev/pe/sw/software-characteristics/#%EC%A2%8B%EC%9D%80-%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4-%EC%A1%B0%EA%B1%B4" class="hash-link" aria-label="좋은 소프트웨어 조건에 대한 직접 링크" title="좋은 소프트웨어 조건에 대한 직접 링크">​</a></h3>
<table><thead><tr><th>구분</th><th>특징</th><th>설명</th></tr></thead><tbody><tr><td>기본 요구</td><td>정확성 (Correctness)</td><td>기능이 요구사항과 일치하며 표준에 적합</td></tr><tr><td></td><td>신뢰성 (Reliability)</td><td>오류 없이 일정 기간 안정적으로 작동</td></tr><tr><td>안정성과 성능</td><td>강인성 (Robustness)</td><td>예상하지 못한 상황에서도 정상 작동</td></tr><tr><td></td><td>성능 (Performance)</td><td>처리 속도와 자원 활용 효율성</td></tr><tr><td>사용자 경험</td><td>사용 용이성 (Usability)</td><td>사용자 친화적이고 쉽게 사용할 수 있음</td></tr><tr><td>유지 및 확장성</td><td>유지보수성 (Maintainability)</td><td>결함 수정 및 기능 확장이 용이</td></tr><tr><td></td><td>재사용성 (Reusability)</td><td>기존 소프트웨어를 재사용 가능</td></tr></tbody></table>]]></content>
        <author>
            <name>Eunkwang Shin</name>
            <uri>https://github.com/gracefullight</uri>
        </author>
        <category label="professional-engineer" term="professional-engineer"/>
        <category label="pe/software-engineering" term="pe/software-engineering"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[신뢰성 테스트, 이식성 테스트]]></title>
        <id>https://gracefullight.dev/pe/sw/reliability-portability-test/</id>
        <link href="https://gracefullight.dev/pe/sw/reliability-portability-test/"/>
        <updated>2025-01-26T06:08:36.302Z</updated>
        <summary type="html"><![CDATA[Reliability and Portability Test]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_OSIK" id="소프트웨어-테스트의-종류">소프트웨어 테스트의 종류<a href="https://gracefullight.dev/pe/sw/reliability-portability-test/#%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4-%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%9D%98-%EC%A2%85%EB%A5%98" class="hash-link" aria-label="소프트웨어 테스트의 종류에 대한 직접 링크" title="소프트웨어 테스트의 종류에 대한 직접 링크">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_OSIK" id="소프트웨어-테스트-분류">소프트웨어 테스트 분류<a href="https://gracefullight.dev/pe/sw/reliability-portability-test/#%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EB%B6%84%EB%A5%98" class="hash-link" aria-label="소프트웨어 테스트 분류에 대한 직접 링크" title="소프트웨어 테스트 분류에 대한 직접 링크">​</a></h3>
<p><img decoding="async" loading="lazy" alt="Software testing classification" src="https://gracefullight.dev/assets/images/software-testing-classification-4ce15d468e6cc24d21501671274218e5.png" width="1272" height="1357" class="img_xC7_"></p>
<ul>
<li>소프트웨어 테스트는 테스트 레벨, 테스트 유형, 테스트 설계 기법에 따라 분류</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_OSIK" id="소프트웨어-테스트-분류-상세설명">소프트웨어 테스트 분류 상세설명<a href="https://gracefullight.dev/pe/sw/reliability-portability-test/#%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EB%B6%84%EB%A5%98-%EC%83%81%EC%84%B8%EC%84%A4%EB%AA%85" class="hash-link" aria-label="소프트웨어 테스트 분류 상세설명에 대한 직접 링크" title="소프트웨어 테스트 분류 상세설명에 대한 직접 링크">​</a></h3>
<table><thead><tr><th>분류</th><th>테스트 종류</th><th>설명</th></tr></thead><tbody><tr><td><strong>테스트 레벨</strong></td><td>컴포넌트/단위 테스트</td><td>각각의 컴포넌트를 테스트</td></tr><tr><td></td><td>통합 테스트</td><td>컴포넌트 간의 인터페이스 테스트</td></tr><tr><td></td><td>시스템 테스트</td><td>전체 시스템의 목적 만족 여부 테스트</td></tr><tr><td></td><td>인수 테스트</td><td>사용자의 요구사항 만족 여부 테스트</td></tr><tr><td><strong>테스트 설계</strong></td><td>명세 기반 테스트</td><td>명세를 바탕으로 테스트케이스 생성</td></tr><tr><td></td><td>구조 기반 테스트</td><td>프로그램 코드를 기반으로 테스트케이스 생성</td></tr><tr><td></td><td>경험 기반 테스트</td><td>테스트의 경험을 기반으로 테스트케이스 생성</td></tr><tr><td>정적테스트</td><td>리뷰</td><td>산출물 검토, 프로젝트 진행사항 점검</td></tr><tr><td></td><td>정적 분석</td><td>자동화된 도구로 결함을 검출 및 점검</td></tr><tr><td><strong>테스트 유형</strong></td><td>기능 테스트</td><td>사용자의 요구사항 충족 여부 검출</td></tr><tr><td>비기능테스트</td><td>기능 적합성 테스트</td><td>사용자의 요구사항 만족 기능 제공 여부 테스트</td></tr><tr><td></td><td>성능 효율성 테스트</td><td>시스템의 응답시간/처리량 테스트</td></tr><tr><td></td><td>호환성 테스트</td><td>다른 시스템과의 상호 연동성/공존성 테스트</td></tr><tr><td></td><td>보안성 테스트</td><td>시스템의 보안성 점검을 위한 능동 테스트</td></tr><tr><td></td><td>사용성 테스트</td><td>사용자가 시스템을 효율적으로 용이성 테스트</td></tr><tr><td></td><td>유지보수성 테스트</td><td>규정된 조건/기간에 오동작 없이 수행능력 테스트</td></tr><tr><td></td><td>이식성 테스트</td><td>다양한 환경에서 운영가능 여부 테스트</td></tr></tbody></table>
<h2 class="anchor anchorWithStickyNavbar_OSIK" id="신뢰성-테스트-이식성-테스트">신뢰성 테스트, 이식성 테스트<a href="https://gracefullight.dev/pe/sw/reliability-portability-test/#%EC%8B%A0%EB%A2%B0%EC%84%B1-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%9D%B4%EC%8B%9D%EC%84%B1-%ED%85%8C%EC%8A%A4%ED%8A%B8" class="hash-link" aria-label="신뢰성 테스트, 이식성 테스트에 대한 직접 링크" title="신뢰성 테스트, 이식성 테스트에 대한 직접 링크">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_OSIK" id="신뢰성-테스트">신뢰성 테스트<a href="https://gracefullight.dev/pe/sw/reliability-portability-test/#%EC%8B%A0%EB%A2%B0%EC%84%B1-%ED%85%8C%EC%8A%A4%ED%8A%B8" class="hash-link" aria-label="신뢰성 테스트에 대한 직접 링크" title="신뢰성 테스트에 대한 직접 링크">​</a></h3>
<ul>
<li>소프트웨어가 정해진 조건 하에서 일정 기간동안 정상적으로 작동하는지를 확인하는 테스트</li>
</ul>
<table><thead><tr><th>분류</th><th>종류</th><th>설명</th></tr></thead><tbody><tr><td>목적</td><td>오류 및 결함 발견</td><td>장시간 사용 시 발생할 수 있는 잠재적인 오류와 결함을 조기에 발견하여 수정</td></tr><tr><td></td><td>시스템 안정성 보장</td><td>다양한 환경과 조건에서 시스템이 안정적으로 작동하는지 확인하여 신뢰성을 보장</td></tr><tr><td></td><td>품질 향상</td><td>신뢰성 테스트를 통해 발견된 문제를 개선함으로써 소프트웨어 품질을 높이고 사용자 만족도 향상</td></tr><tr><td>종류</td><td>부하 테스트 (Load Testing)</td><td>시스템에 예상되는 최대 부하를 가하여 성능과 안정성 확인</td></tr><tr><td></td><td>스트레스 테스트 (Stress Testing)</td><td>시스템의 한계를 넘는 부하를 가하여 얼마나 잘 버티는지, 실패 시 어떻게 복구되는지 평가</td></tr><tr><td></td><td>지속적 테스트 (Soak Testing)</td><td>장시간동안 시스템을 가동하여 장기적인 안정성과 메모리 누수 등의 문제를 발견</td></tr><tr><td>절차</td><td>계획 수립</td><td>테스트 목적, 범위, 방법, 성공 기준 정의</td></tr><tr><td></td><td>환경 구성</td><td>테스트 환경과 유사한 테스트 환경 구성</td></tr><tr><td></td><td>시나리오 작성</td><td>다양한 시나리오를 통해 시스템의 신뢰성 평가</td></tr><tr><td></td><td>실행</td><td>계획된 시나리오에 따라 테스트 수행</td></tr><tr><td></td><td>결과 분석 및 보고</td><td>결과 분석을 통해 문제를 발견하고 해결 방안 제시</td></tr></tbody></table>
<h3 class="anchor anchorWithStickyNavbar_OSIK" id="이식성-테스트">이식성 테스트<a href="https://gracefullight.dev/pe/sw/reliability-portability-test/#%EC%9D%B4%EC%8B%9D%EC%84%B1-%ED%85%8C%EC%8A%A4%ED%8A%B8" class="hash-link" aria-label="이식성 테스트에 대한 직접 링크" title="이식성 테스트에 대한 직접 링크">​</a></h3>
<ul>
<li>소프트웨어가 다양한 환경에서 동일하게 작동하는지 확인하는 테스트</li>
</ul>
<table><thead><tr><th>분류</th><th>항목</th><th>설명</th></tr></thead><tbody><tr><td>목적</td><td>호환성 확인</td><td>소프트웨어가 다양한 플랫폼과 환경에서 호환성을 유지하도록 보장</td></tr><tr><td></td><td>사용자 경험 일관성 유지</td><td>여러 환경에서 동일한 사용자 경험을 제공하여 사용자의 만족도 향상</td></tr><tr><td></td><td>시장 범위 확대</td><td>다양한 환경에서 작동하는 소프트웨어를 통해 더 넓은 시장에 접근성 보장</td></tr><tr><td>종류</td><td>하드웨어 독립성 테스트</td><td>다양한 하드웨어 환경에서 소프트웨어가 정상적으로 작동하는지 확인</td></tr><tr><td></td><td>운영체제 독립성 테스트</td><td>서로 다른 운영 체제에서 소프트웨어의 호환성 평가</td></tr><tr><td></td><td>브라우저 독립성 테스트</td><td>웹 애플리케이션의 다양한 브라우저에서 동일한 기능이 작동하는지 확인</td></tr><tr><td></td><td>언어 및 지역 독립성 테스트</td><td>다국어 지원 소프트웨어의 다양한 언어 및 지역 설정에 서서히 작동하는지 평가</td></tr><tr><td>고려 사항</td><td>테스트 환경 구축의 어려움</td><td>다양한 플랫폼과 환경을 모두 구성하는 난이도 증가</td></tr><tr><td></td><td>테스트 시간 및 비용</td><td>시간과 비용이 많이 소요</td></tr><tr><td></td><td>복잡성 증가</td><td>다양한 테스트 케이스와 시나리오를 구성하는 과정에서 복잡성이 증가</td></tr></tbody></table>]]></content>
        <author>
            <name>Eunkwang Shin</name>
            <uri>https://github.com/gracefullight</uri>
        </author>
        <category label="professional-engineer" term="professional-engineer"/>
        <category label="pe/software-engineering" term="pe/software-engineering"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[요구 공학]]></title>
        <id>https://gracefullight.dev/pe/sw/requirements-engineering/</id>
        <link href="https://gracefullight.dev/pe/sw/requirements-engineering/"/>
        <updated>2025-01-26T05:51:30.366Z</updated>
        <summary type="html"><![CDATA[Requirements Engineering]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_OSIK" id="요구공학-개념">요구공학 개념<a href="https://gracefullight.dev/pe/sw/requirements-engineering/#%EC%9A%94%EA%B5%AC%EA%B3%B5%ED%95%99-%EA%B0%9C%EB%85%90" class="hash-link" aria-label="요구공학 개념에 대한 직접 링크" title="요구공학 개념에 대한 직접 링크">​</a></h2>
<ul>
<li>시스템의 개발, 변경의 목적(What)을 식별하기 위해 이해관계자들의 요구를 이해 및 조정하여 체계적으로 수집, 분석, 명세화, 확인하는 공정 또는 학문</li>
<li>비지니스 연속성, 확장성 / 비용절감, 효율성 / 기능 구현 완정성, 오류율 감소 / 조직구성원 이해관계자 만족도, 이해도 증가, 생산성 향상</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_OSIK" id="요구공학-절차">요구공학 절차<a href="https://gracefullight.dev/pe/sw/requirements-engineering/#%EC%9A%94%EA%B5%AC%EA%B3%B5%ED%95%99-%EC%A0%88%EC%B0%A8" class="hash-link" aria-label="요구공학 절차에 대한 직접 링크" title="요구공학 절차에 대한 직접 링크">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_OSIK" id="요구공학-절차-개념도">요구공학 절차 개념도<a href="https://gracefullight.dev/pe/sw/requirements-engineering/#%EC%9A%94%EA%B5%AC%EA%B3%B5%ED%95%99-%EC%A0%88%EC%B0%A8-%EA%B0%9C%EB%85%90%EB%8F%84" class="hash-link" aria-label="요구공학 절차 개념도에 대한 직접 링크" title="요구공학 절차 개념도에 대한 직접 링크">​</a></h3>
<!-- -->
<h3 class="anchor anchorWithStickyNavbar_OSIK" id="요구공학-절차-상세">요구공학 절차 상세<a href="https://gracefullight.dev/pe/sw/requirements-engineering/#%EC%9A%94%EA%B5%AC%EA%B3%B5%ED%95%99-%EC%A0%88%EC%B0%A8-%EC%83%81%EC%84%B8" class="hash-link" aria-label="요구공학 절차 상세에 대한 직접 링크" title="요구공학 절차 상세에 대한 직접 링크">​</a></h3>
<table><thead><tr><th>구분</th><th>프로세스</th><th>설명</th></tr></thead><tbody><tr><td>요구사항 개발</td><td>요구사항 추출</td><td>요구사항 식별, 분류 및 문서화</td></tr><tr><td></td><td>요구사항 분석</td><td>요구사항 파악 및 도출 단계</td></tr><tr><td></td><td>요구사항 명세</td><td>요구사항 명세서 작성 및 식별(기능/비기능)</td></tr><tr><td></td><td>요구사항 검증</td><td>명세서의 정확성 및 구현 가능성 검토</td></tr><tr><td>요구사항 관리</td><td>요구사항 협상</td><td>구현 가능한 기능 협상</td></tr><tr><td></td><td>요구사항 기준선</td><td>공식 검토된 요구사항 명세서 (Baseline)</td></tr><tr><td></td><td>요구사항 변경관리</td><td>기준선 기반의 변경 통제</td></tr><tr><td></td><td>요구사항 확인 및 검증</td><td>시스템이 요구사항에 부합하는지 확인</td></tr></tbody></table>
<h2 class="anchor anchorWithStickyNavbar_OSIK" id="요구사항-명세서-개념-및-기술-항목">요구사항 명세서 개념 및 기술 항목<a href="https://gracefullight.dev/pe/sw/requirements-engineering/#%EC%9A%94%EA%B5%AC%EC%82%AC%ED%95%AD-%EB%AA%85%EC%84%B8%EC%84%9C-%EA%B0%9C%EB%85%90-%EB%B0%8F-%EA%B8%B0%EC%88%A0-%ED%95%AD%EB%AA%A9" class="hash-link" aria-label="요구사항 명세서 개념 및 기술 항목에 대한 직접 링크" title="요구사항 명세서 개념 및 기술 항목에 대한 직접 링크">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_OSIK" id="요구사항-명세서-개념">요구사항 명세서 개념<a href="https://gracefullight.dev/pe/sw/requirements-engineering/#%EC%9A%94%EA%B5%AC%EC%82%AC%ED%95%AD-%EB%AA%85%EC%84%B8%EC%84%9C-%EA%B0%9C%EB%85%90" class="hash-link" aria-label="요구사항 명세서 개념에 대한 직접 링크" title="요구사항 명세서 개념에 대한 직접 링크">​</a></h3>
<ul>
<li>SW를 분석, 설계, 구현, 유지하는 단계에서 검토, 평가, 승인의 기준이 되는 문서</li>
<li>SW 요구사항 명세를 결정하기 위해 위해 ISO 21948, IEEE 830 표준 참조/반영</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_OSIK" id="요구사항-명세서-기술-항목">요구사항 명세서 기술 항목<a href="https://gracefullight.dev/pe/sw/requirements-engineering/#%EC%9A%94%EA%B5%AC%EC%82%AC%ED%95%AD-%EB%AA%85%EC%84%B8%EC%84%9C-%EA%B8%B0%EC%88%A0-%ED%95%AD%EB%AA%A9" class="hash-link" aria-label="요구사항 명세서 기술 항목에 대한 직접 링크" title="요구사항 명세서 기술 항목에 대한 직접 링크">​</a></h3>
<table><thead><tr><th>구분</th><th>항목</th><th>설명</th></tr></thead><tbody><tr><td>개요</td><td>범위</td><td>명세서가 다루는 시스템의 요구사항에 대한 범위를 기술</td></tr><tr><td></td><td>목적</td><td>명세서의 작성 목적을 기술</td></tr><tr><td></td><td>시스템 개요</td><td>시스템 전반적인 내용을 요약하여 기술</td></tr><tr><td></td><td>일반 제약사항</td><td>다른 표준이나 하드웨어의 제한으로 인해 적용되는 제한사항에 대하여 기술</td></tr><tr><td>기능적 요구사항</td><td>기능요구사항</td><td>소프트웨어의 입력 처리와 출력을 생성하는 처리 과정에서 발생할 수 있는 기본적인 동작에 대하여 기술</td></tr><tr><td></td><td>외부 인터페이스 요구사항</td><td>모든 소프트웨어 시스템으로의 입력과 출력에 대한 요구사항을 상세히 기술</td></tr><tr><td>기타 요구 및 제약 사항</td><td>성능 요구사항</td><td>소프트웨어 전체적으로 사람과의 상호작용 혹은 소프트웨어에서 확인할 수 있는 정적인 동작인 수치적 요구사항을 기술</td></tr><tr><td></td><td>HW 요구 사항</td><td>기억 장치 규모, 통신 수요 등과 같은 HW 요구 사항 기술</td></tr><tr><td></td><td>논리적 DB 요구사항</td><td>데이터베이스에서 사용될 정보를 위한 논리적 요구사항에 대하여 기술</td></tr><tr><td></td><td>소프트웨어 시스템 속성</td><td>신뢰도, 사용가능성, 보안, 유지보수성, 이식성 등을 기술</td></tr><tr><td>인수 조건</td><td>기능 및 성능 테스트</td><td>최종 개발 산출물에 대해 수용 확인을 위한 테스트 항목</td></tr></tbody></table>]]></content>
        <author>
            <name>Eunkwang Shin</name>
            <uri>https://github.com/gracefullight</uri>
        </author>
        <category label="professional-engineer" term="professional-engineer"/>
        <category label="pe/software-engineering" term="pe/software-engineering"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[오픈소스 라이센스]]></title>
        <id>https://gracefullight.dev/pe/sw/opensource-license/</id>
        <link href="https://gracefullight.dev/pe/sw/opensource-license/"/>
        <updated>2025-01-26T05:08:43.390Z</updated>
        <summary type="html"><![CDATA[Opensource License]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_OSIK" id="오픈소스-라이센스-정책변경-개요">오픈소스 라이센스 정책변경 개요<a href="https://gracefullight.dev/pe/sw/opensource-license/#%EC%98%A4%ED%94%88%EC%86%8C%EC%8A%A4-%EB%9D%BC%EC%9D%B4%EC%84%BC%EC%8A%A4-%EC%A0%95%EC%B1%85%EB%B3%80%EA%B2%BD-%EA%B0%9C%EC%9A%94" class="hash-link" aria-label="오픈소스 라이센스 정책변경 개요에 대한 직접 링크" title="오픈소스 라이센스 정책변경 개요에 대한 직접 링크">​</a></h2>
<!-- -->
<ul>
<li>개방형 S/W 라이선스는 사용자가 자유롭게 SW 를 사용, 수정, 배포 가능하여 제약이 적은 오픈소스 라이선스</li>
<li>페쇄형 S/W 라이선스는 SW 사용, 수정, 배포가 엄격히 제한되어 저작권자 저작물 독점권리 보장가능 라이선스</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_OSIK" id="오픈소스-라이센스-정책변경-배경">오픈소스 라이센스 정책변경 배경<a href="https://gracefullight.dev/pe/sw/opensource-license/#%EC%98%A4%ED%94%88%EC%86%8C%EC%8A%A4-%EB%9D%BC%EC%9D%B4%EC%84%BC%EC%8A%A4-%EC%A0%95%EC%B1%85%EB%B3%80%EA%B2%BD-%EB%B0%B0%EA%B2%BD" class="hash-link" aria-label="오픈소스 라이센스 정책변경 배경에 대한 직접 링크" title="오픈소스 라이센스 정책변경 배경에 대한 직접 링크">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_OSIK" id="환경-및-경제-측면">환경 및 경제 측면<a href="https://gracefullight.dev/pe/sw/opensource-license/#%ED%99%98%EA%B2%BD-%EB%B0%8F-%EA%B2%BD%EC%A0%9C-%EC%B8%A1%EB%A9%B4" class="hash-link" aria-label="환경 및 경제 측면에 대한 직접 링크" title="환경 및 경제 측면에 대한 직접 링크">​</a></h3>
<table><thead><tr><th>구분</th><th>배경</th><th>설명</th></tr></thead><tbody><tr><td>환경적 측면</td><td>클라우드 환경확산</td><td>클라우드 컴퓨팅 대중화로 CSP가 오픈소스를 상업적으로 이용<br>오픈소스 개발자들은 대형 CSP 업체에 의한 상업적 도구 전략</td></tr><tr><td></td><td>기술의 진보와 SW 복잡성 증가</td><td>현재 SW의 복잡성 증가는 단순한 자유로운 사용 장려 제한<br>복잡한 SW 유저비용 관리로 폐쇄형으로 지속적 유지보수</td></tr><tr><td>경제적 측면</td><td>수익 창출모델 변화</td><td>오픈소스 SW 기반 비즈니스 모델 확산<br>폐쇄형 라이선스를 통한 라이선스 비용부과로 수익창출 가능</td></tr><tr><td></td><td>대기업의 SW 독점 방지</td><td>대형 IT 기업의 오픈소스 SW로 제품개발/이익독점 방지<br>중소 IT 기업의 공정한 경쟁 환경 조성 가능</td></tr></tbody></table>
<h3 class="anchor anchorWithStickyNavbar_OSIK" id="기술-및-운영-측면">기술 및 운영 측면<a href="https://gracefullight.dev/pe/sw/opensource-license/#%EA%B8%B0%EC%88%A0-%EB%B0%8F-%EC%9A%B4%EC%98%81-%EC%B8%A1%EB%A9%B4" class="hash-link" aria-label="기술 및 운영 측면에 대한 직접 링크" title="기술 및 운영 측면에 대한 직접 링크">​</a></h3>
<table><thead><tr><th>구분</th><th>배경</th><th>설명</th></tr></thead><tbody><tr><td>기술적 측면</td><td>보안 및 품질 유지</td><td>개방형 라이선스는 누구나 사용 가능하나 보안 및 품질 이슈<br>폐쇄형으로 개발자 코드 품질 유지 및 보안 허점 감소 가능</td></tr><tr><td></td><td>특정 플랫폼 종속성 방지</td><td>오픈소스가 과도하게 사용돼 해당 기업에 종속 우려<br>라이선스의 제한으로 지나친 기술적 종속 방지 가능</td></tr><tr><td>운영적 측면</td><td>SW 유지관리 비용 확보 가능</td><td>대규모 오픈소스 프로젝트는 지속적 유지관리 필요<br>폐쇄형 라이선스를 통해 유지관리 비용 충당 가능</td></tr><tr><td></td><td>사용 조건 관리</td><td>오픈소스 SW 상업적 제품을 개발조건 관리 곤란<br>폐쇄형 통해 사용제한 및 통제가 가능</td></tr></tbody></table>
<h2 class="anchor anchorWithStickyNavbar_OSIK" id="폐쇄형-라이센스로의-전환-영향">폐쇄형 라이센스로의 전환 영향<a href="https://gracefullight.dev/pe/sw/opensource-license/#%ED%8F%90%EC%87%84%ED%98%95-%EB%9D%BC%EC%9D%B4%EC%84%BC%EC%8A%A4%EB%A1%9C%EC%9D%98-%EC%A0%84%ED%99%98-%EC%98%81%ED%96%A5" class="hash-link" aria-label="폐쇄형 라이센스로의 전환 영향에 대한 직접 링크" title="폐쇄형 라이센스로의 전환 영향에 대한 직접 링크">​</a></h2>
<table><thead><tr><th>구분</th><th>사례</th><th>영향</th></tr></thead><tbody><tr><td>오픈소스 커뮤니티 분열</td><td>Redis의 라이선스 변경</td><td>Redis 일부 멤버들은 새로운 라이선스가 오픈소스 정신을 위배한다고 비판, 포크된 Redis를 배포하는 커뮤니티 활동 증가<br>KeyDB로 포크 프로젝트 진행</td></tr><tr><td></td><td>ElasticSearch 라이선스 변경</td><td>AWS 등 클라우드 서비스 업체가 ElasticSearch 라이선스를 변경하며 관련 서비스에서 오픈소스 독점화 우려<br>Open Search로 포크 프로젝트 진행</td></tr><tr><td>기업의 오픈소스 활용 정책 변화</td><td>Oracle의 MySQL 인수 후 라이선스 변경</td><td>MySQL의 오픈소스 라이선스 활용에 제한이 발생하며, 기업형 라이선스 비용이 증가<br>MariaDB의 활용 증가</td></tr><tr><td></td><td>MongoDB 라이선스 변경</td><td>클라우드 네이티브 환경에서 MongoDB 사용이 제한되며, 관련 서비스를 제한적으로 사용하도록 정책 변경<br>FerretDB로 포크 프로젝트 진행</td></tr></tbody></table>]]></content>
        <author>
            <name>Eunkwang Shin</name>
            <uri>https://github.com/gracefullight</uri>
        </author>
        <category label="professional-engineer" term="professional-engineer"/>
        <category label="pe/software-engineering" term="pe/software-engineering"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[소프트웨어 테스트]]></title>
        <id>https://gracefullight.dev/pe/sw/software-test/</id>
        <link href="https://gracefullight.dev/pe/sw/software-test/"/>
        <updated>2025-01-26T04:34:16.103Z</updated>
        <summary type="html"><![CDATA[Software Test]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_OSIK" id="소프트웨어-테스트-개념-및-원칙">소프트웨어 테스트 개념 및 원칙<a href="https://gracefullight.dev/pe/sw/software-test/#%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EA%B0%9C%EB%85%90-%EB%B0%8F-%EC%9B%90%EC%B9%99" class="hash-link" aria-label="소프트웨어 테스트 개념 및 원칙에 대한 직접 링크" title="소프트웨어 테스트 개념 및 원칙에 대한 직접 링크">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_OSIK" id="소프트웨어-테스트-개념">소프트웨어 테스트 개념<a href="https://gracefullight.dev/pe/sw/software-test/#%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EA%B0%9C%EB%85%90" class="hash-link" aria-label="소프트웨어 테스트 개념에 대한 직접 링크" title="소프트웨어 테스트 개념에 대한 직접 링크">​</a></h3>
<!-- -->
<ul>
<li>소프트웨어가 요구사항을 충족하고 프로덕트의 신뢰성 향상을 위해 결함 없이 안정적으로 동작하는지 검증하는 과정</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_OSIK" id="소프트웨어-테스트-7원칙">소프트웨어 테스트 7원칙<a href="https://gracefullight.dev/pe/sw/software-test/#%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4-%ED%85%8C%EC%8A%A4%ED%8A%B8-7%EC%9B%90%EC%B9%99" class="hash-link" aria-label="소프트웨어 테스트 7원칙에 대한 직접 링크" title="소프트웨어 테스트 7원칙에 대한 직접 링크">​</a></h3>
<table><thead><tr><th>원칙</th><th>내용</th><th>비고</th></tr></thead><tbody><tr><td>결함 발견</td><td>결함이 있음을 입증하는 활동, SW는 시간이 지나면 언제든 결함 발생 가능성이 있음</td><td>테스트의 역할</td></tr><tr><td>완벽한 테스트 불가</td><td>모든 가능한 조합을 테스트하는 것은 현실적 불가능</td><td>자원의 한계</td></tr><tr><td>초기에 테스트 시작</td><td>개발 초기에 결함발견 중요, 파레토 법칙 적용</td><td>품질비용 감소</td></tr><tr><td>결함 집중</td><td>동일 테스트케이스 반복 시 신규 결함발견 능력 감소</td><td>TC 정기적 개선</td></tr><tr><td>정황 의존성</td><td>테스트 방법/접근은 소프트웨어 성격에 따라 차별화 적용</td><td>외부요소 반영</td></tr><tr><td>오류 부재 궤변</td><td>결함이 없더라도 요구사항 미충족시 실패</td><td>요구사항 충족</td></tr></tbody></table>
<h2 class="anchor anchorWithStickyNavbar_OSIK" id="명세기반-테스트-구조기반-테스트-경험기반-테스트">명세기반 테스트, 구조기반 테스트, 경험기반 테스트<a href="https://gracefullight.dev/pe/sw/software-test/#%EB%AA%85%EC%84%B8%EA%B8%B0%EB%B0%98-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EA%B5%AC%EC%A1%B0%EA%B8%B0%EB%B0%98-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EA%B2%BD%ED%97%98%EA%B8%B0%EB%B0%98-%ED%85%8C%EC%8A%A4%ED%8A%B8" class="hash-link" aria-label="명세기반 테스트, 구조기반 테스트, 경험기반 테스트에 대한 직접 링크" title="명세기반 테스트, 구조기반 테스트, 경험기반 테스트에 대한 직접 링크">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_OSIK" id="명세기반-테스트">명세기반 테스트<a href="https://gracefullight.dev/pe/sw/software-test/#%EB%AA%85%EC%84%B8%EA%B8%B0%EB%B0%98-%ED%85%8C%EC%8A%A4%ED%8A%B8" class="hash-link" aria-label="명세기반 테스트에 대한 직접 링크" title="명세기반 테스트에 대한 직접 링크">​</a></h3>
<table><thead><tr><th>기법</th><th>개념도</th><th>설명</th></tr></thead><tbody><tr><td>동등 클래스 분할</td><td></td><td>데이터 구간별 대표 값을 도출하여 테스트하는 방법<br>다양한 입력 조건을 갖춘 테스트 케이스의 유형들을 분할</td></tr><tr><td>경계값분석</td><td></td><td>경계값 주변에서 결함이 많은 원리 이용<br>유효, 비유효 경계값 고려한 TC 설계<br>경험적, 결함발견율 높음</td></tr><tr><td>의사결정 테이블</td><td></td><td>조건에 따른 Y/N 조합으로 TC 작성<br>조건과 상황 기반</td></tr><tr><td>상태전이</td><td></td><td>상태전이 다이어그램 구성하여 상태 변화요소들을 조합하여 TC 작성<br>임베디드 시스템에서 주로 활용</td></tr><tr><td>유스케이스</td><td></td><td>유스케이스 명세서를 활용한 비지니스 시나리오 테스트<br>컴포넌트 레벨, 시스템 레벨 유스케이스 테스팅</td></tr><tr><td>분류 트리</td><td></td><td>SW 일부/전체를 트리구조로 분석/표현하여 TC 설계<br>테스트 가시화로 중복/누락 회피</td></tr><tr><td>페어와이즈 조합</td><td></td><td>대부분 결함이 2개 이상 요소의 조합으로 이뤄져있기에 상호작용조합으로 TC 작성<br>경험적 의미 조합</td></tr><tr><td>오류예측기법</td><td></td><td>각 테스트 기법이 놓치기 쉬운 오류들을 경험적으로 찾아 검증<br>Ad-hoc 테스팅</td></tr></tbody></table>
<h3 class="anchor anchorWithStickyNavbar_OSIK" id="구조기반-테스트">구조기반 테스트<a href="https://gracefullight.dev/pe/sw/software-test/#%EA%B5%AC%EC%A1%B0%EA%B8%B0%EB%B0%98-%ED%85%8C%EC%8A%A4%ED%8A%B8" class="hash-link" aria-label="구조기반 테스트에 대한 직접 링크" title="구조기반 테스트에 대한 직접 링크">​</a></h3>
<table><thead><tr><th>기법</th><th>설명</th><th>비고</th></tr></thead><tbody><tr><td>제어구조</td><td>프로그램 논리 복잡도 기반 TC 설계 기법</td><td>논리 복잡도, 흐름 제어</td></tr><tr><td>루프 테스트</td><td>루프 구조에 한하여 실시하는 기법, 초기화, 인덱싱, 루프 경계선 결함 발견 목적</td><td>루프 구조, 초기화, 경계값</td></tr><tr><td>구문 커버리지</td><td>모든 문장이 최소 한 번은 실행될 수 있는 입력 데이터를 테스트 데이터로 선정<br>프로그램 내 모든 구문 보장</td><td>모든 구문, 실행 여부</td></tr><tr><td>결정 커버리지</td><td>전체 결정문이 적어도 한 번은 참/거짓을 반환하도록 수행</td><td>결정문, 조건 참/거짓</td></tr><tr><td>조건 커버리지</td><td>결정 명령문 내 각 조건이 적어도 한 번은 참/거짓을 반환하도록 수행</td><td>개별 조건, 참/거짓</td></tr><tr><td>조건/결정 커버리지</td><td>전체 조건식뿐 아니라 개별 조건식도 참/거짓을 한 번 수행</td><td>전체 조건식, 개별 조건식</td></tr><tr><td>변경조건/결정 커버리지</td><td>각 개별 조건식이 다른 개별 조건식에 영향받지 않고 전체 조건식에 독립적으로 영향을 주게 수행</td><td>독립 조건, 조건 영향</td></tr><tr><td>다중조건/결정 커버리지</td><td>결정 포인트 내 있는 모든 개별 조건의 모든 조합을 고려</td><td>모든 조건 조합</td></tr></tbody></table>
<h3 class="anchor anchorWithStickyNavbar_OSIK" id="경험기반-테스트">경험기반 테스트<a href="https://gracefullight.dev/pe/sw/software-test/#%EA%B2%BD%ED%97%98%EA%B8%B0%EB%B0%98-%ED%85%8C%EC%8A%A4%ED%8A%B8" class="hash-link" aria-label="경험기반 테스트에 대한 직접 링크" title="경험기반 테스트에 대한 직접 링크">​</a></h3>
<table><thead><tr><th>기법</th><th>개념도</th><th>특징</th></tr></thead><tbody><tr><td>오류 추정</td><td></td><td>가능한 결함을 나열하고 결함이나 오류를 추정에 의해 검출/수정</td></tr><tr><td>탐색적 기법</td><td></td><td>학습과 테스트 디자인, 테스트 수행을 동시에하는 휴리스틱 테스트 기법</td></tr><tr><td>체크리스트</td><td></td><td>테스트/평가해야할 내용고 ㅏ경험을 분류하여 나열해 놓은 체크리스트 기반 테스트 수행</td></tr><tr><td>분류 트리</td><td></td><td>흐름을 트리구조로 시각화하여 테스트 케이스 설계</td></tr></tbody></table>]]></content>
        <author>
            <name>Eunkwang Shin</name>
            <uri>https://github.com/gracefullight</uri>
        </author>
        <category label="professional-engineer" term="professional-engineer"/>
        <category label="pe/software-engineering" term="pe/software-engineering"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[배포 전략, 테스트 전략]]></title>
        <id>https://gracefullight.dev/pe/sw/deployment-and-testing-strategies/</id>
        <link href="https://gracefullight.dev/pe/sw/deployment-and-testing-strategies/"/>
        <updated>2025-01-26T02:54:03.929Z</updated>
        <summary type="html"><![CDATA[Deployment and Testing Strategies]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_OSIK" id="성공적인-릴리즈를-위한-체크포인트">성공적인 릴리즈를 위한 체크포인트<a href="https://gracefullight.dev/pe/sw/deployment-and-testing-strategies/#%EC%84%B1%EA%B3%B5%EC%A0%81%EC%9D%B8-%EB%A6%B4%EB%A6%AC%EC%A6%88%EB%A5%BC-%EC%9C%84%ED%95%9C-%EC%B2%B4%ED%81%AC%ED%8F%AC%EC%9D%B8%ED%8A%B8" class="hash-link" aria-label="성공적인 릴리즈를 위한 체크포인트에 대한 직접 링크" title="성공적인 릴리즈를 위한 체크포인트에 대한 직접 링크">​</a></h2>
<!-- -->
<h2 class="anchor anchorWithStickyNavbar_OSIK" id="배포전략-및-테스트전략-유형">배포전략 및 테스트전략 유형<a href="https://gracefullight.dev/pe/sw/deployment-and-testing-strategies/#%EB%B0%B0%ED%8F%AC%EC%A0%84%EB%9E%B5-%EB%B0%8F-%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%A0%84%EB%9E%B5-%EC%9C%A0%ED%98%95" class="hash-link" aria-label="배포전략 및 테스트전략 유형에 대한 직접 링크" title="배포전략 및 테스트전략 유형에 대한 직접 링크">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_OSIK" id="배포전략">배포전략<a href="https://gracefullight.dev/pe/sw/deployment-and-testing-strategies/#%EB%B0%B0%ED%8F%AC%EC%A0%84%EB%9E%B5" class="hash-link" aria-label="배포전략에 대한 직접 링크" title="배포전략에 대한 직접 링크">​</a></h3>
<table><thead><tr><th>구분</th><th>개념도</th><th>설명</th></tr></thead><tbody><tr><td>롤링업데이트</td><td></td><td>서버/파드 1개씩 교체하여 배포<br>관리 및 롤백 용이<br>서버 처리용량 고려 필요</td></tr><tr><td>블루그린배포</td><td></td><td>구버전 블루, 신버전 그린, 신버전을 모두 배포 후 모든 트래픽을 스위칭<br>운영 환경에 영향 없음, 실서비스 환경으로 신버전 테스트<br>시스템 자원 두 배 필요</td></tr><tr><td>카나리배포</td><td></td><td>트래픽 제어를 통해 일부 사용자만 신규 서버로 접속, 모니터링 디버깅수행 후 전체 스위칭<br>리스크 감지 용이, A/B테스트 활용<br>네트워크 트래픽 제어 부담</td></tr></tbody></table>
<h3 class="anchor anchorWithStickyNavbar_OSIK" id="테스트전략">테스트전략<a href="https://gracefullight.dev/pe/sw/deployment-and-testing-strategies/#%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%A0%84%EB%9E%B5" class="hash-link" aria-label="�테스트전략에 대한 직접 링크" title="테스트전략에 대한 직접 링크">​</a></h3>
<table><thead><tr><th>구분</th><th>개념도</th><th>설명</th></tr></thead><tbody><tr><td>카나리테스트</td><td></td><td>변경사항을 부분적으로 출시 후 기존과 비교하여 평가<br>실시간 프로덕션 트래픽 테스트, 리전별 테스트<br>느린 릴리즈, 모니터링 복잡성, 이전버전 호환성 고려</td></tr><tr><td>A/B테스트</td><td></td><td>일부 사용자를 새 기능으로 라우팅<br>애플리케이션 기능 효과 측정 용이<br>복잡한 설정, 편향된 샘플링</td></tr><tr><td>쉐도우테스트</td><td></td><td>트래픽을 미러링하여 신버전으로 전달하여 함께 실행<br>제로 프로덕션 영향, 배포 위험 감소<br>비용 및 운영 오버헤드</td></tr></tbody></table>
<h2 class="anchor anchorWithStickyNavbar_OSIK" id="배포-및-테스트-위험을-줄이기-위한-고려사항">배포 및 테스트 위험을 줄이기 위한 고려사항<a href="https://gracefullight.dev/pe/sw/deployment-and-testing-strategies/#%EB%B0%B0%ED%8F%AC-%EB%B0%8F-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%9C%84%ED%97%98%EC%9D%84-%EC%A4%84%EC%9D%B4%EA%B8%B0-%EC%9C%84%ED%95%9C-%EA%B3%A0%EB%A0%A4%EC%82%AC%ED%95%AD" class="hash-link" aria-label="배포 및 테스트 위험을 줄이기 위한 고려사항에 대한 직접 링크" title="배포 및 테스트 위험을 줄이기 위한 고려사항에 대한 직접 링크">​</a></h2>
<ul>
<li>이전 버전과의 호환성</li>
<li>배포 전, 중, 후 모든 단계에서의 지속적 테스트(CT)</li>
<li>IaC를 통한 자동화된 인프라 관리</li>
</ul>]]></content>
        <author>
            <name>Eunkwang Shin</name>
            <uri>https://github.com/gracefullight</uri>
        </author>
        <category label="professional-engineer" term="professional-engineer"/>
        <category label="pe/software-engineering" term="pe/software-engineering"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[정보은닉]]></title>
        <id>https://gracefullight.dev/pe/sw/information-hiding/</id>
        <link href="https://gracefullight.dev/pe/sw/information-hiding/"/>
        <updated>2025-01-26T02:35:58.683Z</updated>
        <summary type="html"><![CDATA[information hiding]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_OSIK" id="정보은닉-개념">정보은닉 개념<a href="https://gracefullight.dev/pe/sw/information-hiding/#%EC%A0%95%EB%B3%B4%EC%9D%80%EB%8B%89-%EA%B0%9C%EB%85%90" class="hash-link" aria-label="정보은닉 개념에 대한 직접 링크" title="정보은닉 개념에 대한 직접 링크">​</a></h2>
<ul>
<li>코드 내부 데이터와 메서드를 숨기고 공개 인터페이스를 통해서만 접근이 가능하도록 하는 객체지향 프로그래밍의 특성</li>
<li>외/내부 구현을 나눠 복잡성 제거, 외부로부터의 데이터 보호</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_OSIK" id="정보은닉-개념도-접근제어자-유형-예시">정보은닉 개념도, 접근제어자 유형, 예시<a href="https://gracefullight.dev/pe/sw/information-hiding/#%EC%A0%95%EB%B3%B4%EC%9D%80%EB%8B%89-%EA%B0%9C%EB%85%90%EB%8F%84-%EC%A0%91%EA%B7%BC%EC%A0%9C%EC%96%B4%EC%9E%90-%EC%9C%A0%ED%98%95-%EC%98%88%EC%8B%9C" class="hash-link" aria-label="정보은닉 개념도, 접근제어자 유형, 예시에 대한 직접 링크" title="정보은닉 개념도, 접근제어자 유형, 예시에 대한 직접 링크">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_OSIK" id="정보은닉-개념도">정보은닉 개념도<a href="https://gracefullight.dev/pe/sw/information-hiding/#%EC%A0%95%EB%B3%B4%EC%9D%80%EB%8B%89-%EA%B0%9C%EB%85%90%EB%8F%84" class="hash-link" aria-label="정보은닉 개념도에 대한 직접 링크" title="정보은닉 개념도에 대한 직접 링크">​</a></h3>
<!-- -->
<ul>
<li>접근제어자를 사용하여 외부객체로부터 데이터 접근 수준 제어</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_OSIK" id="접근제어자-유형">접근제어자 유형<a href="https://gracefullight.dev/pe/sw/information-hiding/#%EC%A0%91%EA%B7%BC%EC%A0%9C%EC%96%B4%EC%9E%90-%EC%9C%A0%ED%98%95" class="hash-link" aria-label="접근제어자 유형에 대한 직접 링크" title="접근제어자 유형에 대한 직접 링크">​</a></h3>
<table><thead><tr><th>구분</th><th>유형</th><th>상세설명</th></tr></thead><tbody><tr><td>클래스</td><td>default</td><td>동일 패키지 내 클래스에게 접근 허용</td></tr><tr><td></td><td>public</td><td>모든 클래스에서 접근 허용</td></tr><tr><td>속성/메소드</td><td>private</td><td>비공개, 클래스 내 멤버만 접근 허용</td></tr><tr><td></td><td>default</td><td>동일 패키지 내 클래스일 경우 접근 허용</td></tr><tr><td></td><td>protected</td><td>동일 패키지 또는 상속받은 자식 클래스의 경우 접근 허용</td></tr><tr><td></td><td>public</td><td>공개, 모든 클래스에서 접근 허용</td></tr></tbody></table>]]></content>
        <author>
            <name>Eunkwang Shin</name>
            <uri>https://github.com/gracefullight</uri>
        </author>
        <category label="professional-engineer" term="professional-engineer"/>
        <category label="pe/software-engineering" term="pe/software-engineering"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[형상관리, 기준선]]></title>
        <id>https://gracefullight.dev/pe/sw/configuration-baselines/</id>
        <link href="https://gracefullight.dev/pe/sw/configuration-baselines/"/>
        <updated>2025-01-26T01:54:59.550Z</updated>
        <summary type="html"><![CDATA[Configuration Baselines]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_OSIK" id="형상관리의-개념">형상관리의 개념<a href="https://gracefullight.dev/pe/sw/configuration-baselines/#%ED%98%95%EC%83%81%EA%B4%80%EB%A6%AC%EC%9D%98-%EA%B0%9C%EB%85%90" class="hash-link" aria-label="형상관리의 개념에 대한 직접 링크" title="형상관리의 개념에 대한 직접 링크">​</a></h2>
<!-- -->
<ul>
<li>형상 항목을 식별하고 문서화, 변경 제어, 변경 처리 상태를 기록하고 명시된 요구사항에 부합하는지 검증하는 기술적이고 관리적인 감독, 감시 활동</li>
<li>소프트웨어 생명주기 단계별로 기능적, 분배적, 설계 등 베이스라인이 구분되어 관리</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_OSIK" id="형상관리-기준선-개념-구성요소">형상관리 기준선 개념, 구성요소<a href="https://gracefullight.dev/pe/sw/configuration-baselines/#%ED%98%95%EC%83%81%EA%B4%80%EB%A6%AC-%EA%B8%B0%EC%A4%80%EC%84%A0-%EA%B0%9C%EB%85%90-%EA%B5%AC%EC%84%B1%EC%9A%94%EC%86%8C" class="hash-link" aria-label="형상관리 기준선 개념, 구성요소에 대한 직접 링크" title="형상관리 기준선 개념, 구성요소에 대한 직접 링크">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_OSIK" id="형상관리-기준선-개념">형상관리 기준선 개념<a href="https://gracefullight.dev/pe/sw/configuration-baselines/#%ED%98%95%EC%83%81%EA%B4%80%EB%A6%AC-%EA%B8%B0%EC%A4%80%EC%84%A0-%EA%B0%9C%EB%85%90" class="hash-link" aria-label="형상관리 기준선 개념에 대한 직접 링크" title="형상관리 기준선 개념에 대한 직접 링크">​</a></h3>
<!-- -->
<ul>
<li>대상 시스템/제품에 대한 기술적인 통제를 하게 되는 시점 또는 그 시점의 기준문서로 형상관리 프로세스의 기준으로 활용</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_OSIK" id="형상관리-기준선-구성요소">형상관리 기준선 구성요소<a href="https://gracefullight.dev/pe/sw/configuration-baselines/#%ED%98%95%EC%83%81%EA%B4%80%EB%A6%AC-%EA%B8%B0%EC%A4%80%EC%84%A0-%EA%B5%AC%EC%84%B1%EC%9A%94%EC%86%8C" class="hash-link" aria-label="형상관리 기준선 구성요소에 대한 직접 링크" title="형상관리 기준선 구성요소에 대한 직접 링크">​</a></h3>
<table><thead><tr><th>기준선</th><th>시점</th><th>형상관리 항목</th></tr></thead><tbody><tr><td>기능적 기준선</td><td>사용자 요구 기능이 정의되는 시점 분배적 기준선</td><td>개발 계획서</td></tr><tr><td>분배적 기준선</td><td>요구 기능이 서브시스템으로 분할되는 시점</td><td>요구사항 정의서</td></tr><tr><td>설계 기준선</td><td>설계 사양이 완성되는 시점 시험 기준선</td><td>ERD, UML</td></tr><tr><td>테스트 기준선</td><td>테스트를 위한 준비 시점</td><td>실행 코드</td></tr><tr><td>제품 기준선</td><td>통합, 기능, 성능 등 시험 완료 시점 운용 기준선</td><td>테스트 결과서</td></tr><tr><td>운용 기준선</td><td>개발 완료 후 운영 이관 시점 형상 관리 항목</td><td>사용자/운영자 매뉴얼</td></tr></tbody></table>]]></content>
        <author>
            <name>Eunkwang Shin</name>
            <uri>https://github.com/gracefullight</uri>
        </author>
        <category label="professional-engineer" term="professional-engineer"/>
        <category label="pe/software-engineering" term="pe/software-engineering"/>
    </entry>
</feed>