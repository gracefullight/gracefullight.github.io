"use strict";(self.webpackChunkgracefullight_github_io=self.webpackChunkgracefullight_github_io||[]).push([[25464],{49613:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>h});var n=r(59496);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},s="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),s=p(r),m=a,h=s["".concat(c,".").concat(m)]||s[m]||f[m]||i;return r?n.createElement(h,o(o({ref:t},u),{},{components:r})):n.createElement(h,o({ref:t},u))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[s]="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},90528:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>f,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var n=r(31966),a=(r(59496),r(49613));const i={title:"RecursiveDirectoryIterator \uc0ac\uc6a9\ud558\uae30",authors:"me",tags:["php"],date:new Date("2019-04-12T19:42:34.000Z")},o="\uc55e\uc11c",l={permalink:"/2019/04/12/RecursiveDirectoryIterator-\uc0ac\uc6a9\ud558\uae30",source:"@site/blog/2019/04/12/RecursiveDirectoryIterator-\uc0ac\uc6a9\ud558\uae30.md",title:"RecursiveDirectoryIterator \uc0ac\uc6a9\ud558\uae30",description:"\ubcf4\ud1b5 \ub514\ub809\ud1a0\ub9ac \uc21c\ud68c\ub97c \ud55c\ub2e4\uace0\ud558\uba74 \ubb34\uc2a8 \uba54\uc18c\ub4dc\ub97c \uc4f8\uae4c?",date:"2019-04-12T19:42:34.000Z",formattedDate:"2019\ub144 4\uc6d4 12\uc77c",tags:[{label:"php",permalink:"/tags/php"}],readingTime:1.985,hasTruncateMarker:!1,authors:[{name:"Gracefullight",title:"Owner",url:"https://github.com/gracefullight",imageURL:"https://avatars.githubusercontent.com/u/11773683?v=4",key:"me"}],frontMatter:{title:"RecursiveDirectoryIterator \uc0ac\uc6a9\ud558\uae30",authors:"me",tags:["php"],date:"2019-04-12T19:42:34.000Z"},prevItem:{title:"Pi-hole\uacfc \ub77c\uc988\ubca0\ub9ac\ud30c\uc774\ub85c \ubaa8\ub4e0 \uad11\uace0 \ucc28\ub2e8\ud558\uae30",permalink:"/2019/04/17/Install-Pi-Hole-on-Raspberry-Pi-3-b"},nextItem:{title:"Mac\uc5d0\uc11c Kubernetes is starting\uc774 \uc9c0\uc18d\ub418\ub294 \ud604\uc0c1",permalink:"/2019/04/12/Mac\uc5d0\uc11c-Kubernetes-is-starting\uc774-\uc9c0\uc18d\ub418\ub294-\ud604\uc0c1"}},c={authorsImageUrls:[void 0]},p=[{value:"RecursiveDirectoryIterator",id:"recursivedirectoryiterator",level:2},{value:"RecursiveFilterIterator",id:"recursivefilteriterator",level:2},{value:"RecursiveCallbackFilterIterator",id:"recursivecallbackfilteriterator",level:2}],u={toc:p},s="wrapper";function f(e){let{components:t,...r}=e;return(0,a.kt)(s,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"\ubcf4\ud1b5 \ub514\ub809\ud1a0\ub9ac \uc21c\ud68c\ub97c \ud55c\ub2e4\uace0\ud558\uba74 \ubb34\uc2a8 \uba54\uc18c\ub4dc\ub97c \uc4f8\uae4c?"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"<?php\n// \uc258\uc2e4\ud589\ud558\uace0?\nexec('find dir');\n\n// \uc544\ub2c8\uba74 for\ubb38\uacfc scandir?\nscandir('dir');\n")),(0,a.kt)("p",null,"\uc704 \ubc29\ubc95\uc740 \uac04\ub2e8\ud558\uc9c0\ub9cc ",(0,a.kt)("inlineCode",{parentName:"p"},"/home/gracefullight/tmp/**/*.bak")," \uc640 \uac19\uc740 \uc911\ucca9\ub41c \ub514\ub809\ud1a0\ub9ac \ud30c\uc77c\uc758 \ub370\uc774\ud130\ub97c \uac00\uc838\uc624\ub824\uba74 \uc5c4\uccad\ub09c ",(0,a.kt)("inlineCode",{parentName:"p"},"if/else")," \ucc98\ub9ac\uac00 \ub4e4\uc5b4\uac08 \uac83\uc774\ub2e4."),(0,a.kt)("h1",{id:"recursiveiterator"},"RecursiveIterator"),(0,a.kt)("h2",{id:"recursivedirectoryiterator"},"RecursiveDirectoryIterator"),(0,a.kt)("p",null,"\uc624\ud1a0\ub85c\ub529\uc744 \ud558\uae30 \uc704\ud574 \ud544\uc218\ub85c \ub4e4\uc5b4\uac00\uc788\ub294 ",(0,a.kt)("a",{parentName:"p",href:"https://www.php.net/manual/en/book.spl.php"},"Standard PHP Library"),"\uc5d4 \ud30c\uc77c \uc21c\ud68c\uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uc774\ud130\ub808\uc774\ud130 \ud074\ub798\uc2a4\uac00 \ub4e4\uc5b4\uac00 \uc788\ub2e4."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"<?php\n// $path \ud558\uc704\ub97c \uac00\uc838\uc624\uace0 .. \uc640 . \ub294 \uc81c\uc678\ud55c\ub2e4.\n$directory = new RecursiveDirectoryIterator($path, RecursiveDirectoryIterator::SKIP_DOTS);\n$iterator = new RecursiveIteratorIterator($directory);\n\nforeach ($iterator as $file) {\n    $file->getPathname();\n    $file->getMTime();\n}\n?>\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"$file"),"\uc740 ",(0,a.kt)("a",{parentName:"p",href:"https://www.php.net/manual/en/class.splfileinfo.php"},"SplFileInfo")," \uc774\ub2e4."),(0,a.kt)("h2",{id:"recursivefilteriterator"},"RecursiveFilterIterator"),(0,a.kt)("p",null,"\uc704\uc758 ",(0,a.kt)("inlineCode",{parentName:"p"},"foreach")," \ubb38 \uc548\uc5d0\uc11c \uc870\uac74\uc744 \uc918\uc11c \ud544\ud130\ub9c1\ud560 \uc218 \uc788\uc9c0\ub9cc \ub2e4\ub978 \uae54\ub054\ud55c \ubc29\ubc95\uc774 \uc788\ub2e4."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"<?php\nclass TextFilterIterator extends RecursiveFilterIterator\n{\n    public static $FILTERS = [\n        'txt'\n    ];\n\n    public function accept() {\n        // \uc21c\ud68c\ud558\uae30\uc704\ud574 \uc790\uc2dd \ud2b8\ub9ac\uac00 \uc788\uc744 \uacbd\uc6b0 true\n        if ($this->hasChildren()) {\n            return true;\n        }\n\n        $current = $this->current();\n        if (!$current->isFile()) {\n            return false;\n        }\n\n        // \ud655\uc7a5\uc790\uac00 txt \uc778 \ud30c\uc77c\ub9cc \ud544\ud130\ub9c1\n        return in_array($current->getExtension(), self::$FILTERS);\n    }\n}\n\n// \uac10\uc2f8\uc8fc\uba74 \ub05d\ub09c\ub2e4.\n$iterator = new RecursiveIteratorIterator(\n    new TextFilterIterator($directory),\n    // \uc774 \uc635\uc158\uc740 \ud558\uc704 \ud3f4\ub354\ub9cc \uc21c\ud68c\ud558\uac8c \ud574\uc900\ub2e4.\n    RecursiveIteratorIterator::LEAVES_ONLY,\n    // \uc774 \uc635\uc158\uc740 Read \uc5d0 \uc2e4\ud328\ud560 \uacbd\uc6b0 \uc624\ub958\ub97c \uc2a4\ud0b5\ud55c\ub2e4.\n    RecursiveIteratorIterator::CATCH_GET_CHILD\n);\n")),(0,a.kt)("h2",{id:"recursivecallbackfilteriterator"},"RecursiveCallbackFilterIterator"),(0,a.kt)("p",null,"\ucf5c\ubc31\uc73c\ub85c \ub9cc\ub4e4\uc5b4 \ub354 \uc608\uc058\uac8c \uc9e4 \uc218 \uc788\ub2e4."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"<?php\n$FILTERS = ['txt'];\n\n$textFilterIterator = new RecursiveCallbackFilterIterator(\n    $directory,\n    function ($current, $key, $iterator) use ($FILTERS) {\n        if ($iterator->hasChildren()) {\n            return true;\n        }\n\n        if (!$current->isFile()) {\n            return false;\n        }\n\n        return in_array($current->getExtension(), $FILTERS);\n    }\n);\n\n$iterator = new RecursiveIteratorIterator($textFilterIterator);\n")),(0,a.kt)("h1",{id:"\uc5ec\ub2f4"},"\uc5ec\ub2f4"),(0,a.kt)("p",null,"\uc4f8 \uc218 \uc788\ub2e4\uba74 ",(0,a.kt)("a",{parentName:"p",href:"https://packagist.org/packages/symfony/finder"},"symfony/finder")," \uc4f0\uc790."))}f.isMDXComponent=!0}}]);