"use strict";(self.webpackChunkgracefullight_github_io=self.webpackChunkgracefullight_github_io||[]).push([["95127"],{3786:function(e,t,n){n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>r,default:()=>m,frontMatter:()=>a,metadata:()=>l,toc:()=>d});var l=n(20099),s=n(69979),i=n(59338);let a={title:"Fundamentals of software development @007",date:new Date("2025-09-08T00:05:07.256Z"),description:"Fundamentals of software development @007",authors:"me",tags:["fsd"]},r=void 0,o={authorsImageUrls:[void 0]},d=[{value:"Collection",id:"collection",level:2},{value:"Python List",id:"python-list",level:3},{value:"Python Set",id:"python-set",level:3},{value:"Python Tuple",id:"python-tuple",level:3},{value:"Python Dictionary",id:"python-dictionary",level:3}];function c(e){let t={blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"collection",children:"Collection"}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsx)(t.p,{children:"a data sturcucture that groups multiple elemtns togehter logically."}),"\n"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"referenced by the collection name, and its elements are accessed using indexing or look up methods."}),"\n",(0,s.jsx)(t.li,{children:"some collections allow dynamic sizing, expanding and shrinking with the data, others have a fixed size."}),"\n",(0,s.jsxs)(t.li,{children:["can store mixed data types.","\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Java collections are typically type-safe using generics."}),"\n",(0,s.jsx)(t.li,{children:"Python uses dynamic typing."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"python-list",children:"Python List"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-py",children:'mylist = ["Tom", 30, 112.5]\nlen(mylist)\nmylist[index]\nmylist.append(item)\nmylist.insert(index, item)\n# returns a slice of a list from first to last-1\nmylist[first:last]\nmylist.index(item)\n\n# replaces items from first to last-1 with a list\nmylist[first:last] = [list-values] \n# adds list 2 at the end of list 1\nmylist = list1 + list2\n# adds list 2 at the end of list 1\nlist1.extend(list2)\n\nmylist.remove(item)\nmylist.pop(index)\nmylist.pop()\ndel mylist[index]\ndel mylist\nmylist.clear()\n\n# Sorts the list alphanumerically, ascending\nmylist.sort()\nmylist.sort(reverse =True)\nmylist.reverse()\nmylist.count()\n'})}),"\n",(0,s.jsx)(t.h3,{id:"python-set",children:"Python Set"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"unordered, not indexed."}),"\n",(0,s.jsx)(t.li,{children:"mutable, unique."}),"\n"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-py",children:"myset = { 'hello', 5, True, 3.5 }\n\nfor x in myset:\n  print(x)\n\nmyset.add(item)\n# Merges myset iwth the otherset, rtaining unique values\nmyset.update(otherset)\n# Adds other set items to a set (only unique items are retained)\nmynewset = myset.union(otherset)\n# Retain only the items that exists into set1 and set2\nmyset = set1.intersection(set2)\n\n# report error if item not found\nmyset.remove(item)\nmyset.discard(item)\n\nmyset.pop()\nmyset.clear()\ndel myset\n"})}),"\n",(0,s.jsx)(t.h3,{id:"python-tuple",children:"Python Tuple"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"a cllection of items of any type"}),"\n",(0,s.jsx)(t.li,{children:"ordered, indexed"}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"unchangable"}),", once a tuple is created the elemets are fixed"]}),"\n"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-py",children:'mytuple = ("Tom", 30, 112.5)\nlen(mytuple)\nmytuple[index]\nmytuple[first:last]\nmytuple = tuple + tuple2\n'})}),"\n",(0,s.jsx)(t.h3,{id:"python-dictionary",children:"Python Dictionary"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"a collection of items represented as key-value pairs"}),"\n",(0,s.jsx)(t.li,{children:"unordered, indexed by uniaue keys"}),"\n",(0,s.jsx)(t.li,{children:"itmes are mutable"}),"\n",(0,s.jsx)(t.li,{children:"allow duplicate values but not duplicate keys"}),"\n"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-py",children:'mydata = {\n  "name": "Tom",\n  "age": 30,\n  "role": "admin"\n}\n\nmydata.keys()\nlen(mydata)\nmydata[key]\nmydata[key] = new-value\ndel mydata[key]\ndel mydata\n\n# Deletes an entry associated with key\nval = mydata.pop(key)\n# Updates/Inserts { k: v } entry into the dictionary\nmydata.update({ k: v })\n'})})]})}function m(e={}){let{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},59338:function(e,t,n){n.d(t,{Z:()=>r,a:()=>a});var l=n(52136);let s={},i=l.createContext(s);function a(e){let t=l.useContext(i);return l.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),l.createElement(i.Provider,{value:t},e.children)}},20099:function(e){e.exports=JSON.parse('{"permalink":"/2025/09/08/fundamentals-of-software-development-007","source":"@site/blog/2025/09/08/fundamentals-of-software-development-007.md","title":"Fundamentals of software development @007","description":"Fundamentals of software development @007","date":"2025-09-08T00:05:07.256Z","tags":[{"inline":true,"label":"fsd","permalink":"/tags/fsd"}],"readingTime":1.64,"hasTruncateMarker":false,"authors":[{"name":"Eunkwang Shin","title":"Owner","url":"https://github.com/gracefullight","socials":{"linkedin":"https://www.linkedin.com/in/gracefullight/","github":"https://github.com/gracefullight"},"description":"Full Stack JavaScript Developer | Half-time Open Sourcerer.","page":{"permalink":"/authors/me"},"imageURL":"https://avatars.githubusercontent.com/u/11773683?v=4","key":"me"}],"frontMatter":{"title":"Fundamentals of software development @007","date":"2025-09-08T00:05:07.256Z","description":"Fundamentals of software development @007","authors":"me","tags":["fsd"]},"unlisted":false,"nextItem":{"title":"Sentence structures","permalink":"/2025/09/04/sentence-structures"}}')}}]);