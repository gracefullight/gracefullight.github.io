"use strict";(self.webpackChunkgracefullight_github_io=self.webpackChunkgracefullight_github_io||[]).push([[255],{59754:(t,e,n)=>{n.d(e,{Zo:()=>u,kt:()=>m});var r=n(76687);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function l(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},o=Object.keys(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var c=r.createContext({}),s=function(t){var e=r.useContext(c),n=e;return t&&(n="function"==typeof t?t(e):l(l({},e),t)),n},u=function(t){var e=s(t.components);return r.createElement(c.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},f=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,o=t.originalType,c=t.parentName,u=i(t,["components","mdxType","originalType","parentName"]),f=s(n),m=a,$=f["".concat(c,".").concat(m)]||f[m]||p[m]||o;return n?r.createElement($,l(l({ref:e},u),{},{components:n})):r.createElement($,l({ref:e},u))}));function m(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var o=n.length,l=new Array(o);l[0]=f;var i={};for(var c in e)hasOwnProperty.call(e,c)&&(i[c]=e[c]);i.originalType=t,i.mdxType="string"==typeof t?t:a,l[1]=i;for(var s=2;s<o;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},70597:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var r=n(96428),a=(n(76687),n(59754));const o={title:"imageTTFtext \ud55c\uae00 \uae68\uc9d0 \ud574\uacb0",authors:"me",tags:["php"],date:new Date("2017-01-13T13:46:17.000Z")},l=void 0,i={permalink:"/2017/01/13/imageTTFtext-\ud55c\uae00-\uae68\uc9d0-\ud574\uacb0",source:"@site/blog/2017/01/13/imageTTFtext-\ud55c\uae00-\uae68\uc9d0-\ud574\uacb0.md",title:"imageTTFtext \ud55c\uae00 \uae68\uc9d0 \ud574\uacb0",description:"\ud14d\uc2a4\ud2b8\ub97c \uc774\ubbf8\uc9c0\ub85c \ub9cc\ub4dc\ub294 \uacbd\uc6b0\uc5d0 \uc0ac\uc6a9\ud558\ub294 imageTTFtext \ud568\uc218\ub294 \ud55c\uae00\uc774 \uae68\uc9c0\ub294 \ubb38\uc81c\uac00 \uc788\ub2e4.",date:"2017-01-13T13:46:17.000Z",formattedDate:"January 13, 2017",tags:[{label:"php",permalink:"/tags/php"}],readingTime:1.775,hasTruncateMarker:!1,authors:[{name:"Gracefullight",title:"Owner",url:"https://github.com/gracefullight",imageURL:"https://avatars.githubusercontent.com/u/11773683?v=4",key:"me"}],frontMatter:{title:"imageTTFtext \ud55c\uae00 \uae68\uc9d0 \ud574\uacb0",authors:"me",tags:["php"],date:"2017-01-13T13:46:17.000Z"},prevItem:{title:"PHP - Request\uc640 Session\uc744 Javascript\uc5d0\uc11c \uc0ac\uc6a9",permalink:"/2017/01/13/PHP-Request\uc640-Session\uc744-Javascript\uc5d0\uc11c-\uc0ac\uc6a9"},nextItem:{title:"\uce74\uce74\uc624 og tag \uce90\uc2dc \uc81c\uac70",permalink:"/2017/01/13/\uce74\uce74\uc624-og-tag-\uce90\uc2dc-\uc81c\uac70"}},c={authorsImageUrls:[void 0]},s=[],u={toc:s};function p(t){let{components:e,...n}=t;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"\ud14d\uc2a4\ud2b8\ub97c \uc774\ubbf8\uc9c0\ub85c \ub9cc\ub4dc\ub294 \uacbd\uc6b0\uc5d0 \uc0ac\uc6a9\ud558\ub294 imageTTFtext \ud568\uc218\ub294 \ud55c\uae00\uc774 \uae68\uc9c0\ub294 \ubb38\uc81c\uac00 \uc788\ub2e4."),(0,a.kt)("h1",{id:"\ud574\uacb0"},"\ud574\uacb0"),(0,a.kt)("p",null,"imageTTFtext \uc804\uc5d0 \uc544\ub798 \ud568\uc218\ub85c \ud55c\uae00\uc744 \ucee8\ubc84\ud305\ud574\uc900\ub2e4."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"<?php\n/**\n* @author http://php.net/manual/en/function.imagettftext.php#57416\n*/\nfunction foxy_utf8_to_nce($utf = '') {\n  if (empty($utf)) {\n    return($utf);\n  }\n\n  $max_count = 5; // flag-bits in $max_mark ( 1111 1000 == 5 times 1)\n  $max_mark = 248; // marker for a (theoretical ;-)) 5-byte-char and mask for a 4-byte-char;\n\n  $html = \"\";\n  for ($str_pos = 0; $str_pos < strlen($utf); $str_pos++) {\n    $old_chr = $utf{$str_pos};\n    $old_val = ord( $utf{$str_pos} );\n    $new_val = 0;\n\n    $utf8_marker = 0;\n\n    // skip non-utf-8-chars\n    if ( $old_val > 127 ) {\n      $mark = $max_mark;\n      for($byte_ctr = $max_count; $byte_ctr > 2; $byte_ctr--) {\n        // actual byte is utf-8-marker?\n        if( ( $old_val &; $mark  ) == ( ($mark << 1) &; 255 ) ) {\n          $utf8_marker = $byte_ctr - 1;\n          break;\n        }\n        $mark = ($mark << 1) & 255;\n      }\n    }\n\n    // marker found: collect following bytes\n    if ($utf8_marker > 1 && isset( $utf{$str_pos + 1} ) ) {\n      $str_off = 0;\n      $new_val = $old_val &; (127 >> $utf8_marker);\n      for($byte_ctr = $utf8_marker; $byte_ctr > 1; $byte_ctr--) {\n\n        // check if following chars are UTF8 additional data blocks\n        // UTF8 and ord() > 127\n        if( (ord($utf{$str_pos + 1}) & 192) == 128 ) {\n          $new_val = $new_val << 6;\n          $str_off++;\n          // no need for Addition, bitwise OR is sufficient\n          // 63: more UTF8-bytes; 0011 1111\n          $new_val = $new_val | ( ord( $utf{$str_pos + $str_off} ) & 63 );\n        }\n        // no UTF8, but ord() > 127\n        // nevertheless convert first char to NCE\n        else {\n          $new_val = $old_val;\n        }\n      }\n      // build NCE-Code\n      $html .= '&#'.$new_val.';';\n      // Skip additional UTF-8-Bytes\n      $str_pos = $str_pos + $str_off;\n    } else {\n      $html .= chr($old_val);\n      $new_val = $old_val;\n    }\n  }\n  return($html);\n}\n")),(0,a.kt)("h1",{id:"\uc5ec\ub2f4"},"\uc5ec\ub2f4"),(0,a.kt)("p",null,"\uc6d0\uc791\uc790\ub97c \ubabb \ucc3e\uaca0\ub2e4.. \uc774\uac78 \ub9cc\ub4e0 \uc0ac\ub78c\uc740 binary \ub85c \ub9d0\uc744 \ud560 \uac83 \uac19\ub2e4."))}p.isMDXComponent=!0}}]);