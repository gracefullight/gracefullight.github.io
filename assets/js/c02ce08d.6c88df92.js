"use strict";(self.webpackChunkgracefullight_github_io=self.webpackChunkgracefullight_github_io||[]).push([["34715"],{52123:function(t,e,n){n.r(e),n.d(e,{assets:()=>s,contentTitle:()=>l,default:()=>f,frontMatter:()=>i,metadata:()=>r,toc:()=>c});var r=n(39695),a=n(69979),o=n(56774);let i={title:"imageTTFtext \uD55C\uAE00 \uAE68\uC9D0 \uD574\uACB0",authors:"me",tags:["php"],date:new Date("2017-01-13T13:46:17.000Z")},l=void 0,s={authorsImageUrls:[void 0]},c=[{value:"\uD574\uACB0",id:"\uD574\uACB0",level:2},{value:"\uC5EC\uB2F4",id:"\uC5EC\uB2F4",level:2}];function u(t){let e={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.a)(),...t.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.p,{children:"\uD14D\uC2A4\uD2B8\uB97C \uC774\uBBF8\uC9C0\uB85C \uB9CC\uB4DC\uB294 \uACBD\uC6B0\uC5D0 \uC0AC\uC6A9\uD558\uB294 imageTTFtext \uD568\uC218\uB294 \uD55C\uAE00\uC774 \uAE68\uC9C0\uB294 \uBB38\uC81C\uAC00 \uC788\uB2E4."}),"\n",(0,a.jsx)(e.h2,{id:"\uD574\uACB0",children:"\uD574\uACB0"}),"\n",(0,a.jsx)(e.p,{children:"imageTTFtext \uC804\uC5D0 \uC544\uB798 \uD568\uC218\uB85C \uD55C\uAE00\uC744 \uCEE8\uBC84\uD305\uD574\uC900\uB2E4."}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-php",children:"<?php\n/**\n* @author http://php.net/manual/en/function.imagettftext.php#57416\n*/\nfunction foxy_utf8_to_nce($utf = '') {\n  if (empty($utf)) {\n    return($utf);\n  }\n\n  $max_count = 5; // flag-bits in $max_mark ( 1111 1000 == 5 times 1)\n  $max_mark = 248; // marker for a (theoretical ;-)) 5-byte-char and mask for a 4-byte-char;\n\n  $html = \"\";\n  for ($str_pos = 0; $str_pos < strlen($utf); $str_pos++) {\n    $old_chr = $utf{$str_pos};\n    $old_val = ord( $utf{$str_pos} );\n    $new_val = 0;\n\n    $utf8_marker = 0;\n\n    // skip non-utf-8-chars\n    if ( $old_val > 127 ) {\n      $mark = $max_mark;\n      for($byte_ctr = $max_count; $byte_ctr > 2; $byte_ctr--) {\n        // actual byte is utf-8-marker?\n        if( ( $old_val &; $mark  ) == ( ($mark << 1) &; 255 ) ) {\n          $utf8_marker = $byte_ctr - 1;\n          break;\n        }\n        $mark = ($mark << 1) & 255;\n      }\n    }\n\n    // marker found: collect following bytes\n    if ($utf8_marker > 1 && isset( $utf{$str_pos + 1} ) ) {\n      $str_off = 0;\n      $new_val = $old_val &; (127 >> $utf8_marker);\n      for($byte_ctr = $utf8_marker; $byte_ctr > 1; $byte_ctr--) {\n\n        // check if following chars are UTF8 additional data blocks\n        // UTF8 and ord() > 127\n        if( (ord($utf{$str_pos + 1}) & 192) == 128 ) {\n          $new_val = $new_val << 6;\n          $str_off++;\n          // no need for Addition, bitwise OR is sufficient\n          // 63: more UTF8-bytes; 0011 1111\n          $new_val = $new_val | ( ord( $utf{$str_pos + $str_off} ) & 63 );\n        }\n        // no UTF8, but ord() > 127\n        // nevertheless convert first char to NCE\n        else {\n          $new_val = $old_val;\n        }\n      }\n      // build NCE-Code\n      $html .= '&#'.$new_val.';';\n      // Skip additional UTF-8-Bytes\n      $str_pos = $str_pos + $str_off;\n    } else {\n      $html .= chr($old_val);\n      $new_val = $old_val;\n    }\n  }\n  return($html);\n}\n"})}),"\n",(0,a.jsx)(e.h2,{id:"\uC5EC\uB2F4",children:"\uC5EC\uB2F4"}),"\n",(0,a.jsx)(e.p,{children:"\uC6D0\uC791\uC790\uB97C \uBABB \uCC3E\uACA0\uB2E4.. \uC774\uAC78 \uB9CC\uB4E0 \uC0AC\uB78C\uC740 binary \uB85C \uB9D0\uC744 \uD560 \uAC83 \uAC19\uB2E4."})]})}function f(t={}){let{wrapper:e}={...(0,o.a)(),...t.components};return e?(0,a.jsx)(e,{...t,children:(0,a.jsx)(u,{...t})}):u(t)}},56774:function(t,e,n){n.d(e,{Z:()=>l,a:()=>i});var r=n(52136);let a={},o=r.createContext(a);function i(t){let e=r.useContext(o);return r.useMemo(function(){return"function"==typeof t?t(e):{...e,...t}},[e,t])}function l(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(a):t.components||a:i(t.components),r.createElement(o.Provider,{value:e},t.children)}},39695:function(t){t.exports=JSON.parse('{"permalink":"/2017/01/13/imageTTFtext-\uD55C\uAE00-\uAE68\uC9D0-\uD574\uACB0","source":"@site/blog/2017/01/13/imageTTFtext-\uD55C\uAE00-\uAE68\uC9D0-\uD574\uACB0.md","title":"imageTTFtext \uD55C\uAE00 \uAE68\uC9D0 \uD574\uACB0","description":"\uD14D\uC2A4\uD2B8\uB97C \uC774\uBBF8\uC9C0\uB85C \uB9CC\uB4DC\uB294 \uACBD\uC6B0\uC5D0 \uC0AC\uC6A9\uD558\uB294 imageTTFtext \uD568\uC218\uB294 \uD55C\uAE00\uC774 \uAE68\uC9C0\uB294 \uBB38\uC81C\uAC00 \uC788\uB2E4.","date":"2017-01-13T13:46:17.000Z","tags":[{"inline":true,"label":"php","permalink":"/tags/php"}],"readingTime":1.17,"hasTruncateMarker":false,"authors":[{"name":"Eunkwang Shin","title":"Owner","url":"https://github.com/gracefullight","socials":{"linkedin":"https://www.linkedin.com/in/gracefullight/","github":"https://github.com/gracefullight"},"description":"Full Stack JavaScript Developer | Half-time Open Sourcerer.","page":{"permalink":"/authors/me"},"imageURL":"https://avatars.githubusercontent.com/u/11773683?v=4","key":"me"}],"frontMatter":{"title":"imageTTFtext \uD55C\uAE00 \uAE68\uC9D0 \uD574\uACB0","authors":"me","tags":["php"],"date":"2017-01-13T13:46:17.000Z"},"unlisted":false,"prevItem":{"title":"PHP - Request\uC640 Session\uC744 Javascript\uC5D0\uC11C \uC0AC\uC6A9","permalink":"/2017/01/13/PHP-Request\uC640-Session\uC744-Javascript\uC5D0\uC11C-\uC0AC\uC6A9"},"nextItem":{"title":"\uCE74\uCE74\uC624 og tag \uCE90\uC2DC \uC81C\uAC70","permalink":"/2017/01/13/\uCE74\uCE74\uC624-og-tag-\uCE90\uC2DC-\uC81C\uAC70"}}')}}]);