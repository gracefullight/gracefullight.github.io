"use strict";(self.webpackChunkgracefullight_github_io=self.webpackChunkgracefullight_github_io||[]).push([["1354"],{71955:function(s,e,n){n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>l,metadata:()=>a,toc:()=>h});var a=n(39151),i=n(69979),t=n(56774);let l={title:"Introduction to AI @002",date:new Date("2025-08-09T08:31:59.650Z"),description:"Introduction to ai @002",authors:"me",tags:["iai"]},r=void 0,c={authorsImageUrls:[void 0]},h=[{value:"Environment",id:"environment",level:2},{value:"Agent",id:"agent",level:3},{value:"Characteristics of the environment",id:"characteristics-of-the-environment",level:2},{value:"Search problem",id:"search-problem",level:2},{value:"Frontier",id:"frontier",level:2},{value:"Search Algorithm",id:"search-algorithm",level:2},{value:"Tree Search vs Graph Search",id:"tree-search-vs-graph-search",level:3},{value:"Performance measures",id:"performance-measures",level:3},{value:"BFS",id:"bfs",level:3},{value:"BFS Tree",id:"bfs-tree",level:4},{value:"DFS",id:"dfs",level:3},{value:"UCS",id:"ucs",level:3},{value:"Greedy Best First Search",id:"greedy-best-first-search",level:3},{value:"A* Search",id:"a-search",level:3},{value:"Admissibility",id:"admissibility",level:3},{value:"Consistency",id:"consistency",level:3},{value:"Admissible vs Consistent",id:"admissible-vs-consistent",level:3},{value:"Summary",id:"summary",level:2}];function m(s){let e={annotation:"annotation",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",math:"math",mermaid:"mermaid",mi:"mi",mn:"mn",mo:"mo",mrow:"mrow",msub:"msub",msup:"msup",p:"p",pre:"pre",semantics:"semantics",span:"span",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.a)(),...s.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h2,{id:"environment",children:"Environment"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"All possible state and information about how the states are related."}),"\n",(0,i.jsx)(e.li,{children:"The costs from one state to each of its adjacent states are also given."}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"agent",children:"Agent"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Simulated intelligence knows which state it is in."}),"\n",(0,i.jsx)(e.li,{children:"If it takes an action at a given state, it knows the next state and the corresponding cost."}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"characteristics-of-the-environment",children:"Characteristics of the environment"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Fully Observable: The agent always knows the current state of the environment at each point in time."}),"\n",(0,i.jsx)(e.li,{children:"Deterministic: The next state of the environment is completely determined by the current state and the action taken by the agent."}),"\n",(0,i.jsx)(e.li,{children:"Static: The environment is unchanged."}),"\n",(0,i.jsx)(e.li,{children:"Discrete: A limited number of distinct, clearly defined actions."}),"\n",(0,i.jsx)(e.li,{children:"Single agent: An agent operating by itself in an environment."}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"search-problem",children:"Search problem"}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.p,{children:"Finding a path from a starting point to a goal point in a space."}),"\n"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.strong,{children:"The initial state"})}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"State space"}),": The environment or area where the search takes place"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"A set of actions"}),": The possible actions that the agent can take in each state.","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:"ACTION (s)"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"A transition model"}),":","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"takes in a state and an action."}),"\n",(0,i.jsxs)(e.li,{children:["returns the successor state, which is any state reachable from doing action ",(0,i.jsx)(e.code,{children:"a"})," in state ",(0,i.jsx)(e.code,{children:"s"}),"."]}),"\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:"RESULT(s, a)"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"A goal state"}),":","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"The target location or position that needs to be reached."}),"\n",(0,i.jsx)(e.li,{children:"represented by a goal test function"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"A path cost function"}),":","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"The cost associated with a particular path taken through the state space."}),"\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:"c(s1, a, s2)"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"frontier",children:"Frontier"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"A set of nodes that are under consideration to be expanded."}),"\n",(0,i.jsx)(e.li,{children:"A set of leaf nodes in the search spanning tree are available for expansion at any given step."}),"\n",(0,i.jsx)(e.li,{children:"A search algorithm determines how to choose a node in the Frontier to grow the search spanning tree."}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"search-algorithm",children:"Search Algorithm"}),"\n",(0,i.jsx)(e.mermaid,{value:'graph LR;\n  ClassicSearchAlgorithm["Classic Search Algorithm"]\n  ClassicSearchAlgorithm --\x3e UniformedSearch["Uniformed Search"]\n  ClassicSearchAlgorithm --\x3e InformedSearch["Informed Search"]\n\n  UniformedSearch --\x3e BlindSearch["Blind Search"]\n    BlindSearch --\x3e BreadthFirstSearch["Breadth First Search"]\n    BlindSearch --\x3e DepthFirstSearch["Depth First Search"]\n  UniformedSearch --\x3e UniformCostSearch["Uniform Cost Search"]\n\n  InformedSearch --\x3e GreedyBestFirstSearch["Greedy Best-First Search"]\n  InformedSearch --\x3e AStarSearch["A* Search"]'}),"\n",(0,i.jsx)(e.h3,{id:"tree-search-vs-graph-search",children:"Tree Search vs Graph Search"}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.p,{children:"Explored Set"}),"\n"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"The frontier in graph search separates the search-space graph into two regions, the explored region and the unexplored region, so that Every path from the initial state to an unexplored state has to pass through a state in the frontier."}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"performance-measures",children:"Performance measures"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Completeness"}),"\n",(0,i.jsx)(e.li,{children:"Cost Optimality"}),"\n",(0,i.jsx)(e.li,{children:"Time complexity"}),"\n",(0,i.jsx)(e.li,{children:"Space complexity"}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"bfs",children:"BFS"}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.p,{children:"Queue"}),"\n"]}),"\n",(0,i.jsx)(e.h4,{id:"bfs-tree",children:"BFS Tree"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-py",children:'from collections import deque\n\ndef bfs_tree(start, goal_test, successors):\n    """\n    start: \uC2DC\uC791 \uC0C1\uD0DC\n    goal_test(s): \uBAA9\uD45C \uAC80\uC0AC \uD568\uC218 -> bool\n    successors(s): \uC0C1\uD0DC s\uC5D0\uC11C \uAC08 \uC218 \uC788\uB294 \uB2E4\uC74C \uC0C1\uD0DC\uB4E4\uC758 \uB9AC\uC2A4\uD2B8 \uBC18\uD658\n\n    \uBC18\uD658: \uBAA9\uD45C\uC5D0 \uB3C4\uB2EC\uD558\uB294 \uACBD\uB85C(list) \uB610\uB294 None\n    (Tree-search: explored/\uC911\uBCF5 \uCCB4\uD06C \uC548 \uD568)\n    """\n    if goal_test(start):\n        return [start]\n\n    # \uB178\uB4DC = (state, parent_index)\n    nodes = [(start, None)]\n    frontier = deque([0])  # nodes\uC758 \uC778\uB371\uC2A4\uB97C \uD050\uC5D0 \uC800\uC7A5\n\n    while frontier:\n        parent_idx = frontier.popleft()\n        parent_state, _ = nodes[parent_idx]\n\n        for nxt in successors(parent_state):\n            nodes.append((nxt, parent_idx))\n            child_idx = len(nodes) - 1\n\n            if goal_test(nxt):\n                # \uACBD\uB85C \uBCF5\uC6D0\n                path, i = [], child_idx\n                while i is not None:\n                    path.append(nodes[i][0])\n                    i = nodes[i][1]\n                return list(reversed(path))\n\n            frontier.append(child_idx)\n\n    return None\n'})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-py",children:'from collections import deque\n\ndef bfs_graph(start, goal_test, successors):\n    """\n    start: \uC2DC\uC791 \uC0C1\uD0DC (\uC608: \'Arad\')\n    goal_test(s): s\uAC00 \uBAA9\uD45C\uBA74 True\n    successors(s): \uC0C1\uD0DC s\uC5D0\uC11C (\uB2E4\uC74C\uC0C1\uD0DC, \uBE44\uC6A9) \uD639\uC740 \uADF8\uB0E5 \uB2E4\uC74C\uC0C1\uD0DC \uB9AC\uC2A4\uD2B8 \uBC18\uD658\n                   \uC544\uB798\uC5D0\uC11C\uB294 \uB2E4\uC74C\uC0C1\uD0DC \uB9AC\uC2A4\uD2B8\uB77C\uACE0 \uAC00\uC815\n    \uBC18\uD658: start -> ... -> goal \uACBD\uB85C \uB9AC\uC2A4\uD2B8, \uC5C6\uC73C\uBA74 None\n    """\n    # \uB178\uB4DC = (state, parent_index)\n    frontier = deque([(start, None)])   # FIFO \uD050\n    frontier_states = {start}           # frontier\uC5D0 \uC788\uB294 \uC0C1\uD0DC \uC9D1\uD569 (\uC911\uBCF5 \uBC29\uC9C0)\n    explored = set()                    # \uC774\uBBF8 \uD655\uC7A5\uD55C \uC0C1\uD0DC(Closed)\n\n    # \uACBD\uB85C \uBCF5\uC6D0\uC744 \uC704\uD574 \uBAA8\uB4E0 \uB178\uB4DC\uB97C \uBC30\uC5F4\uC5D0 \uB530\uB85C \uC800\uC7A5\n    nodes = [(start, None)]             # nodes[i] = (state, parent_index)\n    index_in_queue = deque([0])         # frontier\uC5D0\uC11C\uC758 \uC778\uB371\uC2A4(=nodes\uC758 \uC778\uB371\uC2A4)\n\n    if goal_test(start):\n        return [start]\n\n    while frontier:\n        state, parent = frontier.popleft()\n        node_idx = index_in_queue.popleft()\n        frontier_states.discard(state)\n        explored.add(state)\n\n        for nxt in successors(state):\n            if (nxt not in explored) and (nxt not in frontier_states):\n                # child \uB178\uB4DC \uC800\uC7A5\n                nodes.append((nxt, node_idx))\n                child_idx = len(nodes) - 1\n\n                if goal_test(nxt):\n                    # \uACBD\uB85C \uBCF5\uC6D0\n                    path = []\n                    i = child_idx\n                    while i is not None:\n                        path.append(nodes[i][0])\n                        i = nodes[i][1]\n                    return list(reversed(path))\n\n                # frontier\uC5D0 \uC0BD\uC785\n                frontier.append((nxt, node_idx))\n                index_in_queue.append(child_idx)\n                frontier_states.add(nxt)\n\n    return None\n'})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-py",children:'graph = {\n    "Arad": ["Sibiu", "Timisoara", "Zerind"],\n    "Sibiu": ["Arad", "Fagaras"],\n    "Timisoara": ["Arad", "Lugoj"],\n    "Zerind": ["Arad"],\n    "Fagaras": [],\n    "Lugoj": []\n}\n\npath = bfs(\n    start="Arad",\n    goal_test=lambda s: s == "Lugoj",\n    successors=lambda s: graph.get(s, [])\n)\nprint(path) \n'})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Has the shallowest path to every node on the frontier"}),"\n",(0,i.jsx)(e.li,{children:"memory-intensive as it stores all nodes."}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"dfs",children:"DFS"}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.p,{children:"Stack"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-py",children:'def depth_first_search(initial_state, goal_test, actions):\n    """\n    initial_state: \uC2DC\uC791 \uC0C1\uD0DC\n    goal_test(s): \uC0C1\uD0DC s\uAC00 \uBAA9\uD45C\uBA74 True\n    actions(s): \uC0C1\uD0DC s\uC5D0\uC11C \uC774\uB3D9 \uAC00\uB2A5\uD55C \uB2E4\uC74C \uC0C1\uD0DC\uB4E4\uC758 \uB9AC\uC2A4\uD2B8 \uBC18\uD658\n    \uBC18\uD658: start \u2192 goal \uACBD\uB85C(list) \uB610\uB294 None\n    """\n\n    # \uBAA8\uB4E0 \uB178\uB4DC \uC800\uC7A5: nodes[i] = (state, parent_index)\n    nodes = [(initial_state, None)]\n\n    # frontier \u2190 FILO \uC2A4\uD0DD (\uC5EC\uAE30\uC11C\uB294 \uB178\uB4DC \uC778\uB371\uC2A4\uB9CC \uC800\uC7A5)\n    frontier = [0]\n\n    # frontier\uC5D0 \uC788\uB294 \uC0C1\uD0DC\uB4E4\uC758 \uC9D1\uD569 (\uC911\uBCF5 \uC0BD\uC785 \uBC29\uC9C0\uC6A9)\n    stacked_states = {initial_state}\n\n    # explored \u2190 \uC774\uBBF8 \uD655\uC7A5(\uC790\uC2DD \uC0DD\uC131)\uD55C \uC0C1\uD0DC\uB4E4\uC758 \uC9D1\uD569\n    explored = set()\n\n    # \uC2DC\uC791 \uC0C1\uD0DC\uAC00 \uBAA9\uD45C\uB77C\uBA74 \uBC14\uB85C \uBC18\uD658\n    if goal_test(initial_state):\n        return [initial_state]\n\n    # DFS \uB8E8\uD504 \uC2DC\uC791\n    while True:\n        # frontier\uAC00 \uBE44\uBA74 \uC2E4\uD328\n        if not frontier:\n            return None\n\n        # \uC2A4\uD0DD\uC5D0\uC11C \uB9E8 \uC704 \uB178\uB4DC \uAEBC\uB0B4\uAE30\n        node_idx = frontier.pop()\n        state, parent_idx = nodes[node_idx]\n\n        # \uC2A4\uD0DD \uC0C1\uD0DC \uC9D1\uD569\uC5D0\uC11C \uC81C\uAC70 (\uC774\uC81C \uD655\uC7A5\uD560 \uCC28\uB840)\n        stacked_states.discard(state)\n\n        # \uD604\uC7AC \uC0C1\uD0DC\uC5D0\uC11C \uAC00\uB2A5\uD55C \uBAA8\uB4E0 \uC790\uC2DD \uC0C1\uD0DC \uD655\uC778\n        for child_state in actions(state):\n            # \uC790\uC2DD \uC0C1\uD0DC\uAC00 explored\uB098 frontier\uC5D0 \uC5C6\uC744 \uB54C\uB9CC \uCC98\uB9AC\n            if (child_state not in explored) and (child_state not in stacked_states):\n                # \uC0C8 \uB178\uB4DC \uC800\uC7A5 (\uBD80\uBAA8\uB294 \uD604\uC7AC \uB178\uB4DC)\n                nodes.append((child_state, node_idx))\n                child_idx = len(nodes) - 1\n\n                # \uBAA9\uD45C \uC0C1\uD0DC\uBA74 \uACBD\uB85C \uBCF5\uC6D0\uD574\uC11C \uBC18\uD658\n                if goal_test(child_state):\n                    path, i = [], child_idx\n                    while i is not None:\n                        path.append(nodes[i][0])\n                        i = nodes[i][1]\n                    return list(reversed(path))\n\n                # \uBAA9\uD45C\uAC00 \uC544\uB2C8\uBA74 \uC2A4\uD0DD\uC5D0 push\n                frontier.append(child_idx)\n                stacked_states.add(child_state)\n\n        # \uBAA8\uB4E0 \uC790\uC2DD \uCC98\uB9AC\uAC00 \uB05D\uB098\uBA74 explored\uC5D0 \uCD94\uAC00\n        explored.add(state)\n'})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Low memory usage"}),"\n",(0,i.jsx)(e.li,{children:"Can get stuck in deep or infinite branches (Not cost-optimal)"}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"ucs",children:"UCS"}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.p,{children:"Priority Queue"}),"\n"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["lowest path cost ",(0,i.jsx)(e.code,{children:"f(n) = g(n)"})]}),"\n",(0,i.jsx)(e.li,{children:"Best-first search with the evaluation function"}),"\n",(0,i.jsx)(e.li,{children:"Uniform-cost search is complete and cost optimal"}),"\n",(0,i.jsx)(e.li,{children:"Dijkstra's algorithm finds the shortest path from the root node to every other node in a graph with non-negative edge weights."}),"\n",(0,i.jsx)(e.li,{children:"A special case of Dijkstra's algorithm in which the"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-py",children:'import heapq\n\ndef uniform_cost_search(initial_state, goal_test, actions, step_cost):\n    """\n    initial_state: \uC2DC\uC791 \uC0C1\uD0DC\n    goal_test(s): \uC0C1\uD0DC s\uAC00 \uBAA9\uD45C\uBA74 True\n    actions(s): \uC0C1\uD0DC s\uC5D0\uC11C \uAC00\uB2A5\uD55C \uB2E4\uC74C \uC0C1\uD0DC \uB9AC\uC2A4\uD2B8\n    step_cost(s, s_next): s -> s_next \uC774\uB3D9 \uBE44\uC6A9 (\uC591\uC218 \uAC00\uC815)\n\n    \uBC18\uD658: start \u2192 goal \uACBD\uB85C(list) \uB610\uB294 None\n    """\n\n    # \uBAA8\uB4E0 \uB178\uB4DC \uC800\uC7A5: nodes[i] = (state, parent_idx, path_cost)\n    nodes = [(initial_state, None, 0.0)]\n\n    # frontier \u2190 PATH-COST \uAE30\uC900 \uCD5C\uC18C \uD799 (\uC6D0\uC18C: (cost, node_idx))\n    frontier = [(0.0, 0)]\n    heapq.heapify(frontier)\n\n    # frontier\uC5D0 \uC788\uB294 \uC0C1\uD0DC\uC758 \uD604\uC7AC \uCD5C\uC800 \uBE44\uC6A9(\uBA64\uBC84\uC2ED/\uBE44\uC6A9 \uBE44\uAD50\uC6A9)\n    frontier_costs = {initial_state: 0.0}\n\n    # explored \u2190 \uC774\uBBF8 \uD655\uC7A5 \uC644\uB8CC\uD55C \uC0C1\uD0DC \uC9D1\uD569\n    explored = set()\n\n    # \uC2DC\uC791\uC774 \uACE7 \uBAA9\uD45C\uBA74 \uBC14\uB85C \uBC18\uD658\n    if goal_test(initial_state):\n        return [initial_state]\n\n    # loop do\n    while frontier:\n        # node \u2190 POP(frontier)  /* \uCD5C\uC18C \uBE44\uC6A9 \uB178\uB4DC */\n        cost, node_idx = heapq.heappop(frontier)\n        state, parent_idx, path_cost = nodes[node_idx]\n\n        # \uD799\uC5D0 \uB0A8\uC544 \uC788\uB294 \uAD6C\uBC84\uC804(\uB354 \uBE44\uC2FC \uBC84\uC804)\uC774\uBA74 \uAC74\uB108\uB6F4\uB2E4\n        if state in frontier_costs and cost != frontier_costs[state]:\n            continue\n\n        # goal test (\uC288\uB3C4\uCF54\uB4DC: pop \uC9C1\uD6C4 \uAC80\uC0AC)\n        if goal_test(state):\n            # SOLUTION(node) \u2192 \uACBD\uB85C \uBCF5\uC6D0\n            path = []\n            i = node_idx\n            while i is not None:\n                path.append(nodes[i][0])\n                i = nodes[i][1]\n            return list(reversed(path))\n\n        # add node.STATE to explored\n        explored.add(state)\n        # frontier \uBAA9\uB85D\uC5D0\uC11C \uC774 \uC0C1\uD0DC \uC81C\uAC70(\uB354 \uC774\uC0C1 frontier\uC5D0 \uC5C6\uC74C)\n        frontier_costs.pop(state, None)\n\n        # for each action in ACTIONS(node.STATE) do\n        for nxt in actions(state):\n            new_cost = path_cost + step_cost(state, nxt)\n\n            # child.STATE not in explored or frontier ?\n            in_explored = (nxt in explored)\n            in_frontier = (nxt in frontier_costs)\n\n            # (1) explored/ fronter \uC5B4\uB514\uC5D0\uB3C4 \uC5C6\uC73C\uBA74 \uC0C8\uB85C \uC0BD\uC785\n            if not in_explored and not in_frontier:\n                nodes.append((nxt, node_idx, new_cost))\n                child_idx = len(nodes) - 1\n                heapq.heappush(frontier, (new_cost, child_idx))\n                frontier_costs[nxt] = new_cost\n\n            # (2) frontier\uC5D0 \uC788\uB294\uB370, \uB354 \uC2FC \uACBD\uB85C\uB97C \uCC3E\uC558\uB2E4\uBA74 "\uAD50\uCCB4"\n            elif in_frontier and new_cost < frontier_costs[nxt]:\n                nodes.append((nxt, node_idx, new_cost))\n                child_idx = len(nodes) - 1\n                heapq.heappush(frontier, (new_cost, child_idx))\n                # \uD604\uC7AC \uCD5C\uC800\uBE44\uC6A9\uC744 \uAC31\uC2E0 \u2192 \uC774\uC804 \uD799 \uD56D\uBAA9\uC740 \uB098\uC911\uC5D0 \uD31D\uB420 \uB54C \uBE44\uC6A9\uBD88\uC77C\uCE58\uB85C \uC790\uB3D9 \uBB34\uC2DC\n                frontier_costs[nxt] = new_cost\n\n    # if EMPTY?(frontier) then failure\n    return None\n'})}),"\n",(0,i.jsx)(e.h3,{id:"greedy-best-first-search",children:"Greedy Best First Search"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:"f(n) = h(n)"})}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"h"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"("}),(0,i.jsx)(e.mi,{children:"n"}),(0,i.jsx)(e.mo,{stretchy:"false",children:")"}),(0,i.jsx)(e.mo,{children:"="}),(0,i.jsxs)(e.msub,{children:[(0,i.jsx)(e.mi,{children:"h"}),(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"S"}),(0,i.jsx)(e.mi,{children:"L"}),(0,i.jsx)(e.mi,{children:"D"})]})]})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"h(n) = h_{SLD}"})]})})}),(0,i.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"h"}),(0,i.jsx)(e.span,{className:"mopen",children:"("}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"n"}),(0,i.jsx)(e.span,{className:"mclose",children:")"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(e.span,{className:"mrel",children:"="}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"0.8444em",verticalAlign:"-0.15em"}}),(0,i.jsxs)(e.span,{className:"mord",children:[(0,i.jsx)(e.span,{className:"mord mathnormal",children:"h"}),(0,i.jsx)(e.span,{className:"msupsub",children:(0,i.jsxs)(e.span,{className:"vlist-t vlist-t2",children:[(0,i.jsxs)(e.span,{className:"vlist-r",children:[(0,i.jsx)(e.span,{className:"vlist",style:{height:"0.3283em"},children:(0,i.jsxs)(e.span,{style:{top:"-2.55em",marginLeft:"0em",marginRight:"0.05em"},children:[(0,i.jsx)(e.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(e.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsxs)(e.span,{className:"mord mtight",children:[(0,i.jsx)(e.span,{className:"mord mathnormal mtight",style:{marginRight:"0.05764em"},children:"S"}),(0,i.jsx)(e.span,{className:"mord mathnormal mtight",children:"L"}),(0,i.jsx)(e.span,{className:"mord mathnormal mtight",style:{marginRight:"0.02778em"},children:"D"})]})})]})}),(0,i.jsx)(e.span,{className:"vlist-s",children:"\u200B"})]}),(0,i.jsx)(e.span,{className:"vlist-r",children:(0,i.jsx)(e.span,{className:"vlist",style:{height:"0.15em"},children:(0,i.jsx)(e.span,{})})})]})})]})]})]})]}),", where ",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"S"}),(0,i.jsx)(e.mi,{children:"L"}),(0,i.jsx)(e.mi,{children:"D"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"SLD"})]})})}),(0,i.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"0.6833em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.05764em"},children:"S"}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"L"}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"D"})]})})]})," for the ",(0,i.jsx)(e.strong,{children:"Straight-Line Distance"})]}),"\n",(0,i.jsxs)(e.li,{children:["It expands the node with the lowest ",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"h"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"("}),(0,i.jsx)(e.mi,{children:"n"}),(0,i.jsx)(e.mo,{stretchy:"false",children:")"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"h(n)"})]})})}),(0,i.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"h"}),(0,i.jsx)(e.span,{className:"mopen",children:"("}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"n"}),(0,i.jsx)(e.span,{className:"mclose",children:")"})]})})]})," value at each step"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-py",children:'from heapq import heappush, heappop\n\ndef gbfs_path(G, start, goal, heuristic):\n    """\n    Greedy Best-First Search (GBFS)\n    G: \uC778\uC811 \uB9AC\uC2A4\uD2B8 dict, G[u] = \uC774\uC6C3\uB4E4\uC758 \uB9AC\uC2A4\uD2B8/\uC774\uD130\uB7EC\uBE14\n    heuristic(x, goal): \uCD94\uC815\uAC70\uB9AC h(x)\n    \uBC18\uD658: start -> ... -> goal \uACBD\uB85C(list) \uB610\uB294 None\n    """\n\n    # \uC6B0\uC120\uC21C\uC704 \uD050 \uC6D0\uC18C: (h(state), state, path)\n    pq = []\n    heappush(pq, (heuristic(start, goal), start, [start]))\n\n    visited = set()          # \uC774\uBBF8 \uAEBC\uB0B4\uC11C \uD655\uC7A5\uD55C \uB178\uB4DC(\uC7AC\uBC29\uBB38 \uBC29\uC9C0)\n    in_frontier = {start}    # \uD050\uC5D0 \uB4E4\uC5B4\uAC04 \uB178\uB4DC(\uC911\uBCF5 \uC0BD\uC785 \uBC29\uC9C0)\n\n    while pq:\n        # \uD734\uB9AC\uC2A4\uD2F1\uC774 \uAC00\uC7A5 \uC791\uC740 \uB178\uB4DC\uB97C \uAEBC\uB0C4\n        _, vertex, path = heappop(pq)\n        in_frontier.discard(vertex)\n\n        # \uC774\uBBF8 \uD655\uC7A5\uD588\uB2E4\uBA74 \uC2A4\uD0B5\n        if vertex in visited:\n            continue\n        visited.add(vertex)\n\n        # \uBAA9\uD45C\uBA74 \uACBD\uB85C \uBC18\uD658\n        if vertex == goal:\n            return path\n\n        # \uC774\uC6C3\uC744 \uD734\uB9AC\uC2A4\uD2F1 \uC21C\uC73C\uB85C \uD050\uC5D0 \uCD94\uAC00\n        for neighbor in G.get(vertex, []):\n            if neighbor in visited or neighbor in in_frontier:\n                continue\n            heappush(pq, (heuristic(neighbor, goal), neighbor, path + [neighbor]))\n            in_frontier.add(neighbor)\n\n    return None\n'})}),"\n",(0,i.jsx)(e.h3,{id:"a-search",children:"A* Search"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:"f(n) = g(n) + h(n)"})}),"\n",(0,i.jsx)(e.li,{children:"The most common informed search algorithm."}),"\n",(0,i.jsxs)(e.li,{children:["The tree-search version of A* is optimal if ",(0,i.jsx)(e.code,{children:"h(n)"})," is an admissible heuristic."]}),"\n",(0,i.jsxs)(e.li,{children:["The graph-search version is optimal if ",(0,i.jsx)(e.code,{children:"h(n)"})," is consistent."]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-py",children:'def astar_path(G, start, goal):\n    """\n    Find a path from start to goal using A* Search.\n    G: NetworkX Graph\n    start: \uC2DC\uC791 \uB178\uB4DC\n    goal: \uBAA9\uD45C \uB178\uB4DC\n    """\n    pq = PriorityQueue()\n    # \uC2DC\uC791 \uB178\uB4DC\uB97C \uACBD\uB85C \uB9AC\uC2A4\uD2B8\uC640 \uD568\uAED8 \uD050\uC5D0 \uCD94\uAC00, f = 0\n    pq.push((start, [start]), 0)\n    visited = set()\n\n    while pq:\n        (vertex, path) = pq.pop()\n\n        # \uC774\uBBF8 \uBC29\uBB38\uD588\uB2E4\uBA74 \uC2A4\uD0B5\n        if vertex in visited:\n            continue\n        visited.add(vertex)\n\n        # \uBAA9\uD45C \uB3C4\uCC29 \uC2DC \uACBD\uB85C \uBC18\uD658\n        if vertex == goal:\n            return path\n\n        # \uC778\uC811 \uB178\uB4DC \uD0D0\uC0C9\n        for neighbor in G[vertex]:\n            if neighbor in visited:\n                continue\n            # g(n) = \uD604\uC7AC \uACBD\uB85C\uAE4C\uC9C0\uC758 \uC2E4\uC81C \uBE44\uC6A9\n            g_cost = nx.path_weight(G, path + [neighbor], \'weight\')\n            # h(n) = \uD734\uB9AC\uC2A4\uD2F1(\uBAA9\uD45C\uAE4C\uC9C0\uC758 \uCD94\uC815 \uBE44\uC6A9)\n            h_cost = heuristic(cities[neighbor], cities[goal])\n            f_cost = g_cost + h_cost\n\n            pq.push((neighbor, path + [neighbor]), f_cost)\n\n    return None\n'})}),"\n",(0,i.jsx)(e.h3,{id:"admissibility",children:"Admissibility"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"h"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"("}),(0,i.jsx)(e.mi,{children:"n"}),(0,i.jsx)(e.mo,{stretchy:"false",children:")"}),(0,i.jsx)(e.mo,{children:"\u2264"}),(0,i.jsxs)(e.msup,{children:[(0,i.jsx)(e.mi,{children:"h"}),(0,i.jsx)(e.mo,{children:"\u2217"})]}),(0,i.jsx)(e.mo,{stretchy:"false",children:"("}),(0,i.jsx)(e.mi,{children:"n"}),(0,i.jsx)(e.mo,{stretchy:"false",children:")"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"h(n) \\leq h^*(n)"})]})})}),(0,i.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"h"}),(0,i.jsx)(e.span,{className:"mopen",children:"("}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"n"}),(0,i.jsx)(e.span,{className:"mclose",children:")"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(e.span,{className:"mrel",children:"\u2264"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsxs)(e.span,{className:"mord",children:[(0,i.jsx)(e.span,{className:"mord mathnormal",children:"h"}),(0,i.jsx)(e.span,{className:"msupsub",children:(0,i.jsx)(e.span,{className:"vlist-t",children:(0,i.jsx)(e.span,{className:"vlist-r",children:(0,i.jsx)(e.span,{className:"vlist",style:{height:"0.6887em"},children:(0,i.jsxs)(e.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,i.jsx)(e.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(e.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsx)(e.span,{className:"mbin mtight",children:"\u2217"})})]})})})})})]}),(0,i.jsx)(e.span,{className:"mopen",children:"("}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"n"}),(0,i.jsx)(e.span,{className:"mclose",children:")"})]})]})]})}),"\n",(0,i.jsx)(e.li,{children:"Never overestimate the cost to reach the goal"}),"\n",(0,i.jsx)(e.li,{children:"A straight line distance between a node and the goal node is an admissible heuristic as it is always shorter than the actual distance between this node to the goal node."}),"\n",(0,i.jsx)(e.li,{children:"With an admissible heuristic, A* is cost-optimal."}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"consistency",children:"Consistency"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"h"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"("}),(0,i.jsx)(e.mi,{children:"n"}),(0,i.jsx)(e.mo,{stretchy:"false",children:")"}),(0,i.jsx)(e.mo,{children:"\u2264"}),(0,i.jsx)(e.mi,{children:"c"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"("}),(0,i.jsx)(e.mi,{children:"n"}),(0,i.jsx)(e.mo,{separator:"true",children:","}),(0,i.jsx)(e.mi,{children:"a"}),(0,i.jsx)(e.mo,{separator:"true",children:","}),(0,i.jsxs)(e.msup,{children:[(0,i.jsx)(e.mi,{children:"n"}),(0,i.jsx)(e.mo,{mathvariant:"normal",lspace:"0em",rspace:"0em",children:"\u2032"})]}),(0,i.jsx)(e.mo,{stretchy:"false",children:")"}),(0,i.jsx)(e.mo,{children:"+"}),(0,i.jsx)(e.mi,{children:"h"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"("}),(0,i.jsxs)(e.msup,{children:[(0,i.jsx)(e.mi,{children:"n"}),(0,i.jsx)(e.mo,{mathvariant:"normal",lspace:"0em",rspace:"0em",children:"\u2032"})]}),(0,i.jsx)(e.mo,{stretchy:"false",children:")"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"h(n) \\leq c(n, a, n') + h(n')"})]})})}),(0,i.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"h"}),(0,i.jsx)(e.span,{className:"mopen",children:"("}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"n"}),(0,i.jsx)(e.span,{className:"mclose",children:")"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(e.span,{className:"mrel",children:"\u2264"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1.0019em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"c"}),(0,i.jsx)(e.span,{className:"mopen",children:"("}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"n"}),(0,i.jsx)(e.span,{className:"mpunct",children:","}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"a"}),(0,i.jsx)(e.span,{className:"mpunct",children:","}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,i.jsxs)(e.span,{className:"mord",children:[(0,i.jsx)(e.span,{className:"mord mathnormal",children:"n"}),(0,i.jsx)(e.span,{className:"msupsub",children:(0,i.jsx)(e.span,{className:"vlist-t",children:(0,i.jsx)(e.span,{className:"vlist-r",children:(0,i.jsx)(e.span,{className:"vlist",style:{height:"0.7519em"},children:(0,i.jsxs)(e.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,i.jsx)(e.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(e.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsx)(e.span,{className:"mord mtight",children:(0,i.jsx)(e.span,{className:"mord mtight",children:"\u2032"})})})]})})})})})]}),(0,i.jsx)(e.span,{className:"mclose",children:")"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(e.span,{className:"mbin",children:"+"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1.0019em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"h"}),(0,i.jsx)(e.span,{className:"mopen",children:"("}),(0,i.jsxs)(e.span,{className:"mord",children:[(0,i.jsx)(e.span,{className:"mord mathnormal",children:"n"}),(0,i.jsx)(e.span,{className:"msupsub",children:(0,i.jsx)(e.span,{className:"vlist-t",children:(0,i.jsx)(e.span,{className:"vlist-r",children:(0,i.jsx)(e.span,{className:"vlist",style:{height:"0.7519em"},children:(0,i.jsxs)(e.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,i.jsx)(e.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(e.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsx)(e.span,{className:"mord mtight",children:(0,i.jsx)(e.span,{className:"mord mtight",children:"\u2032"})})})]})})})})})]}),(0,i.jsx)(e.span,{className:"mclose",children:")"})]})]})]})}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"h(n)"})," is consistent if the estimated cost is always less than or equal to the actual cost."]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"admissible-vs-consistent",children:"Admissible vs Consistent"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Consistent \u21D2 Admissible (\uBAA8\uB4E0 consistent \uD734\uB9AC\uC2A4\uD2F1\uC740 admissible)"}),"\n",(0,i.jsx)(e.li,{children:"Admissible \u21CF Consistent (\uAC70\uAFB8\uB85C\uB294 \uC131\uB9BD \uC548 \uD568)"}),"\n",(0,i.jsx)(e.li,{children:"The tree search version of A* is optimal if h(n) is admissible"}),"\n",(0,i.jsx)(e.li,{children:"The graph search version of A* is optimal if h(n) is consistent"}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"summary",children:"Summary"}),"\n",(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"Measure / Criteria"}),(0,i.jsx)(e.th,{children:"BFS"}),(0,i.jsx)(e.th,{children:"DFS"}),(0,i.jsx)(e.th,{children:"Uniform Cost"}),(0,i.jsx)(e.th,{children:"A*"})]})}),(0,i.jsxs)(e.tbody,{children:[(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"Complete?"})}),(0,i.jsx)(e.td,{children:"Yes"}),(0,i.jsx)(e.td,{children:"No"}),(0,i.jsx)(e.td,{children:"Yes"}),(0,i.jsx)(e.td,{children:"Yes"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"Time complexity"})}),(0,i.jsx)(e.td,{children:(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"O"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"("}),(0,i.jsxs)(e.msup,{children:[(0,i.jsx)(e.mi,{children:"b"}),(0,i.jsx)(e.mi,{children:"d"})]}),(0,i.jsx)(e.mo,{stretchy:"false",children:")"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"O(b^d)"})]})})}),(0,i.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1.0991em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,i.jsx)(e.span,{className:"mopen",children:"("}),(0,i.jsxs)(e.span,{className:"mord",children:[(0,i.jsx)(e.span,{className:"mord mathnormal",children:"b"}),(0,i.jsx)(e.span,{className:"msupsub",children:(0,i.jsx)(e.span,{className:"vlist-t",children:(0,i.jsx)(e.span,{className:"vlist-r",children:(0,i.jsx)(e.span,{className:"vlist",style:{height:"0.8491em"},children:(0,i.jsxs)(e.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,i.jsx)(e.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(e.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsx)(e.span,{className:"mord mathnormal mtight",children:"d"})})]})})})})})]}),(0,i.jsx)(e.span,{className:"mclose",children:")"})]})})]})}),(0,i.jsx)(e.td,{children:(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"O"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"("}),(0,i.jsxs)(e.msup,{children:[(0,i.jsx)(e.mi,{children:"b"}),(0,i.jsx)(e.mi,{children:"m"})]}),(0,i.jsx)(e.mo,{stretchy:"false",children:")"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"O(b^m)"})]})})}),(0,i.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,i.jsx)(e.span,{className:"mopen",children:"("}),(0,i.jsxs)(e.span,{className:"mord",children:[(0,i.jsx)(e.span,{className:"mord mathnormal",children:"b"}),(0,i.jsx)(e.span,{className:"msupsub",children:(0,i.jsx)(e.span,{className:"vlist-t",children:(0,i.jsx)(e.span,{className:"vlist-r",children:(0,i.jsx)(e.span,{className:"vlist",style:{height:"0.6644em"},children:(0,i.jsxs)(e.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,i.jsx)(e.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(e.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsx)(e.span,{className:"mord mathnormal mtight",children:"m"})})]})})})})})]}),(0,i.jsx)(e.span,{className:"mclose",children:")"})]})})]})}),(0,i.jsx)(e.td,{children:(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"O"}),(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mo,{fence:"true",children:"("}),(0,i.jsxs)(e.msup,{children:[(0,i.jsx)(e.mi,{children:"b"}),(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mn,{children:"1"}),(0,i.jsx)(e.mo,{children:"+"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"\u230A"}),(0,i.jsxs)(e.msup,{children:[(0,i.jsx)(e.mi,{children:"C"}),(0,i.jsx)(e.mo,{children:"\u2217"})]}),(0,i.jsx)(e.mi,{mathvariant:"normal",children:"/"}),(0,i.jsx)(e.mi,{children:"\u03F5"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"\u230B"})]})]}),(0,i.jsx)(e.mo,{fence:"true",children:")"})]})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"O\\left(b^{1 + \\lfloor C^* / \\epsilon \\rfloor}\\right)"})]})})}),(0,i.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1.2473em",verticalAlign:"-0.35em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,i.jsxs)(e.span,{className:"minner",children:[(0,i.jsx)(e.span,{className:"mopen delimcenter",style:{top:"0em"},children:(0,i.jsx)(e.span,{className:"delimsizing size1",children:"("})}),(0,i.jsxs)(e.span,{className:"mord",children:[(0,i.jsx)(e.span,{className:"mord mathnormal",children:"b"}),(0,i.jsx)(e.span,{className:"msupsub",children:(0,i.jsx)(e.span,{className:"vlist-t",children:(0,i.jsx)(e.span,{className:"vlist-r",children:(0,i.jsx)(e.span,{className:"vlist",style:{height:"0.8973em"},children:(0,i.jsxs)(e.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,i.jsx)(e.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(e.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsxs)(e.span,{className:"mord mtight",children:[(0,i.jsx)(e.span,{className:"mord mtight",children:"1"}),(0,i.jsx)(e.span,{className:"mbin mtight",children:"+"}),(0,i.jsx)(e.span,{className:"mopen mtight",children:"\u230A"}),(0,i.jsxs)(e.span,{className:"mord mtight",children:[(0,i.jsx)(e.span,{className:"mord mathnormal mtight",style:{marginRight:"0.07153em"},children:"C"}),(0,i.jsx)(e.span,{className:"msupsub",children:(0,i.jsx)(e.span,{className:"vlist-t",children:(0,i.jsx)(e.span,{className:"vlist-r",children:(0,i.jsx)(e.span,{className:"vlist",style:{height:"0.7633em"},children:(0,i.jsxs)(e.span,{style:{top:"-2.931em",marginRight:"0.0714em"},children:[(0,i.jsx)(e.span,{className:"pstrut",style:{height:"2.5em"}}),(0,i.jsx)(e.span,{className:"sizing reset-size3 size1 mtight",children:(0,i.jsx)(e.span,{className:"mbin mtight",children:"\u2217"})})]})})})})})]}),(0,i.jsx)(e.span,{className:"mord mtight",children:"/"}),(0,i.jsx)(e.span,{className:"mord mathnormal mtight",children:"\u03F5"}),(0,i.jsx)(e.span,{className:"mclose mtight",children:"\u230B"})]})})]})})})})})]}),(0,i.jsx)(e.span,{className:"mclose delimcenter",style:{top:"0em"},children:(0,i.jsx)(e.span,{className:"delimsizing size1",children:")"})})]})]})})]})}),(0,i.jsx)(e.td,{children:(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"O"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"("}),(0,i.jsxs)(e.msup,{children:[(0,i.jsx)(e.mi,{children:"b"}),(0,i.jsx)(e.mi,{children:"d"})]}),(0,i.jsx)(e.mo,{stretchy:"false",children:")"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"O(b^d)"})]})})}),(0,i.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1.0991em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,i.jsx)(e.span,{className:"mopen",children:"("}),(0,i.jsxs)(e.span,{className:"mord",children:[(0,i.jsx)(e.span,{className:"mord mathnormal",children:"b"}),(0,i.jsx)(e.span,{className:"msupsub",children:(0,i.jsx)(e.span,{className:"vlist-t",children:(0,i.jsx)(e.span,{className:"vlist-r",children:(0,i.jsx)(e.span,{className:"vlist",style:{height:"0.8491em"},children:(0,i.jsxs)(e.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,i.jsx)(e.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(e.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsx)(e.span,{className:"mord mathnormal mtight",children:"d"})})]})})})})})]}),(0,i.jsx)(e.span,{className:"mclose",children:")"})]})})]})})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"Space complexity"})}),(0,i.jsx)(e.td,{children:(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"O"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"("}),(0,i.jsxs)(e.msup,{children:[(0,i.jsx)(e.mi,{children:"b"}),(0,i.jsx)(e.mi,{children:"d"})]}),(0,i.jsx)(e.mo,{stretchy:"false",children:")"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"O(b^d)"})]})})}),(0,i.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1.0991em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,i.jsx)(e.span,{className:"mopen",children:"("}),(0,i.jsxs)(e.span,{className:"mord",children:[(0,i.jsx)(e.span,{className:"mord mathnormal",children:"b"}),(0,i.jsx)(e.span,{className:"msupsub",children:(0,i.jsx)(e.span,{className:"vlist-t",children:(0,i.jsx)(e.span,{className:"vlist-r",children:(0,i.jsx)(e.span,{className:"vlist",style:{height:"0.8491em"},children:(0,i.jsxs)(e.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,i.jsx)(e.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(e.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsx)(e.span,{className:"mord mathnormal mtight",children:"d"})})]})})})})})]}),(0,i.jsx)(e.span,{className:"mclose",children:")"})]})})]})}),(0,i.jsx)(e.td,{children:(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"O"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"("}),(0,i.jsx)(e.mi,{children:"b"}),(0,i.jsx)(e.mi,{children:"m"}),(0,i.jsx)(e.mo,{stretchy:"false",children:")"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"O(bm)"})]})})}),(0,i.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,i.jsx)(e.span,{className:"mopen",children:"("}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"bm"}),(0,i.jsx)(e.span,{className:"mclose",children:")"})]})})]})}),(0,i.jsx)(e.td,{children:(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"O"}),(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mo,{fence:"true",children:"("}),(0,i.jsxs)(e.msup,{children:[(0,i.jsx)(e.mi,{children:"b"}),(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mn,{children:"1"}),(0,i.jsx)(e.mo,{children:"+"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"\u230A"}),(0,i.jsxs)(e.msup,{children:[(0,i.jsx)(e.mi,{children:"C"}),(0,i.jsx)(e.mo,{children:"\u2217"})]}),(0,i.jsx)(e.mi,{mathvariant:"normal",children:"/"}),(0,i.jsx)(e.mi,{children:"\u03F5"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"\u230B"})]})]}),(0,i.jsx)(e.mo,{fence:"true",children:")"})]})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"O\\left(b^{1 + \\lfloor C^* / \\epsilon \\rfloor}\\right)"})]})})}),(0,i.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1.2473em",verticalAlign:"-0.35em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,i.jsxs)(e.span,{className:"minner",children:[(0,i.jsx)(e.span,{className:"mopen delimcenter",style:{top:"0em"},children:(0,i.jsx)(e.span,{className:"delimsizing size1",children:"("})}),(0,i.jsxs)(e.span,{className:"mord",children:[(0,i.jsx)(e.span,{className:"mord mathnormal",children:"b"}),(0,i.jsx)(e.span,{className:"msupsub",children:(0,i.jsx)(e.span,{className:"vlist-t",children:(0,i.jsx)(e.span,{className:"vlist-r",children:(0,i.jsx)(e.span,{className:"vlist",style:{height:"0.8973em"},children:(0,i.jsxs)(e.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,i.jsx)(e.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(e.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsxs)(e.span,{className:"mord mtight",children:[(0,i.jsx)(e.span,{className:"mord mtight",children:"1"}),(0,i.jsx)(e.span,{className:"mbin mtight",children:"+"}),(0,i.jsx)(e.span,{className:"mopen mtight",children:"\u230A"}),(0,i.jsxs)(e.span,{className:"mord mtight",children:[(0,i.jsx)(e.span,{className:"mord mathnormal mtight",style:{marginRight:"0.07153em"},children:"C"}),(0,i.jsx)(e.span,{className:"msupsub",children:(0,i.jsx)(e.span,{className:"vlist-t",children:(0,i.jsx)(e.span,{className:"vlist-r",children:(0,i.jsx)(e.span,{className:"vlist",style:{height:"0.7633em"},children:(0,i.jsxs)(e.span,{style:{top:"-2.931em",marginRight:"0.0714em"},children:[(0,i.jsx)(e.span,{className:"pstrut",style:{height:"2.5em"}}),(0,i.jsx)(e.span,{className:"sizing reset-size3 size1 mtight",children:(0,i.jsx)(e.span,{className:"mbin mtight",children:"\u2217"})})]})})})})})]}),(0,i.jsx)(e.span,{className:"mord mtight",children:"/"}),(0,i.jsx)(e.span,{className:"mord mathnormal mtight",children:"\u03F5"}),(0,i.jsx)(e.span,{className:"mclose mtight",children:"\u230B"})]})})]})})})})})]}),(0,i.jsx)(e.span,{className:"mclose delimcenter",style:{top:"0em"},children:(0,i.jsx)(e.span,{className:"delimsizing size1",children:")"})})]})]})})]})}),(0,i.jsx)(e.td,{children:(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"O"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"("}),(0,i.jsxs)(e.msup,{children:[(0,i.jsx)(e.mi,{children:"b"}),(0,i.jsx)(e.mi,{children:"d"})]}),(0,i.jsx)(e.mo,{stretchy:"false",children:")"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"O(b^d)"})]})})}),(0,i.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1.0991em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,i.jsx)(e.span,{className:"mopen",children:"("}),(0,i.jsxs)(e.span,{className:"mord",children:[(0,i.jsx)(e.span,{className:"mord mathnormal",children:"b"}),(0,i.jsx)(e.span,{className:"msupsub",children:(0,i.jsx)(e.span,{className:"vlist-t",children:(0,i.jsx)(e.span,{className:"vlist-r",children:(0,i.jsx)(e.span,{className:"vlist",style:{height:"0.8491em"},children:(0,i.jsxs)(e.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,i.jsx)(e.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(e.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsx)(e.span,{className:"mord mathnormal mtight",children:"d"})})]})})})})})]}),(0,i.jsx)(e.span,{className:"mclose",children:")"})]})})]})})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"Cost optimal?"})}),(0,i.jsx)(e.td,{children:"Yes"}),(0,i.jsx)(e.td,{children:"No"}),(0,i.jsx)(e.td,{children:"Yes"}),(0,i.jsx)(e.td,{children:"Yes"})]})]})]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsx)(e.mrow,{children:(0,i.jsx)(e.mi,{children:"\u03F5"})}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"\\epsilon"})]})})}),(0,i.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"0.4306em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"\u03F5"})]})})]})," is the smallest positive cost of any single step (edge) in the search problem."]}),"\n"]})]})}function d(s={}){let{wrapper:e}={...(0,t.a)(),...s.components};return e?(0,i.jsx)(e,{...s,children:(0,i.jsx)(m,{...s})}):m(s)}},56774:function(s,e,n){n.d(e,{Z:()=>r,a:()=>l});var a=n(52136);let i={},t=a.createContext(i);function l(s){let e=a.useContext(t);return a.useMemo(function(){return"function"==typeof s?s(e):{...e,...s}},[e,s])}function r(s){let e;return e=s.disableParentContext?"function"==typeof s.components?s.components(i):s.components||i:l(s.components),a.createElement(t.Provider,{value:e},s.children)}},39151:function(s){s.exports=JSON.parse('{"permalink":"/2025/08/09/introduction-to-ai-002","source":"@site/blog/2025/08/09/introduction-to-ai-002.md","title":"Introduction to AI @002","description":"Introduction to ai @002","date":"2025-08-09T08:31:59.650Z","tags":[{"inline":true,"label":"iai","permalink":"/tags/iai"}],"readingTime":9.05,"hasTruncateMarker":false,"authors":[{"name":"Eunkwang Shin","title":"Owner","url":"https://github.com/gracefullight","socials":{"linkedin":"https://www.linkedin.com/in/gracefullight/","github":"https://github.com/gracefullight"},"description":"Full Stack JavaScript Developer | Half-time Open Sourcerer.","page":{"permalink":"/authors/me"},"imageURL":"https://avatars.githubusercontent.com/u/11773683?v=4","key":"me"}],"frontMatter":{"title":"Introduction to AI @002","date":"2025-08-09T08:31:59.650Z","description":"Introduction to ai @002","authors":"me","tags":["iai"]},"unlisted":false,"prevItem":{"title":"Fundamentals of software development @003","permalink":"/2025/08/11/fundamentals-of-software-development-003"},"nextItem":{"title":"Fundamentals of Data Analytics @002","permalink":"/2025/08/06/fundamentals-of-data-analytics-002"}}')}}]);