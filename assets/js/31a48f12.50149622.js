"use strict";(self.webpackChunkgracefullight_github_io=self.webpackChunkgracefullight_github_io||[]).push([["58580"],{32649:function(e,n,r){r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>o,frontMatter:()=>d,metadata:()=>t,toc:()=>a});var t=r(88764),s=r(65813),i=r(661);let d={title:"FSD +003",date:new Date("2025-08-11T05:27:23.544Z"),description:"Fundamentals of software development +003",authors:"me",tags:["fsd"]},l,c={authorsImageUrls:[void 0]},a=[{value:"Terminology",id:"terminology",level:2},{value:"Software development",id:"software-development",level:2},{value:"OOP",id:"oop",level:2},{value:"Java vs Python",id:"java-vs-python",level:3},{value:"Data types",id:"data-types",level:2},{value:"Non-Primitive Data Types",id:"non-primitive-data-types",level:3},{value:"Variables",id:"variables",level:2},{value:"Operators",id:"operators",level:2},{value:"Standard Input",id:"standard-input",level:2},{value:"String",id:"string",level:2},{value:"String (java)",id:"string-java",level:3},{value:"String Format (Python)",id:"string-format-python",level:3},{value:"Array",id:"array",level:2},{value:"Array (java)",id:"array-java",level:3}];function h(e){let n={blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",li:"li",mermaid:"mermaid",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"terminology",children:"Terminology"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Software: A set of statements written in a programming language to perform tasks"}),"\n",(0,s.jsx)(n.li,{children:"Statement: A single instruction in a program that performs an action when executed."}),"\n",(0,s.jsx)(n.li,{children:"Snippet: A block of statements."}),"\n",(0,s.jsx)(n.li,{children:"Software Development: The process of creating a software program."}),"\n",(0,s.jsx)(n.li,{children:"OOP: Program composed of interconnected objects at runtime."}),"\n",(0,s.jsx)(n.li,{children:"Expression: An entity-code component of a statement that can be evaluated to produce a value."}),"\n",(0,s.jsx)(n.li,{children:"Assign: The process of storing the result (a value) of one or more expressions."}),"\n",(0,s.jsx)(n.li,{children:"Value: A data item (literal or computed) that is stored in a variable."}),"\n",(0,s.jsxs)(n.li,{children:["Compiler: A special program that translates a programming language's source code into machine code.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Compilers complete the conversion process all at once after changes are made to the code and before the code is executed"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Interpreter: A computer program that directly executes code without requiring it to be previously compiled into machine language.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Interpreters complete the conversion process one step at a time while the code is being executed."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"software-development",children:"Software development"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Software development process is an iterative approach."}),"\n"]}),"\n",(0,s.jsx)(n.mermaid,{value:'graph TD\n  subgraph DevelopDebug["Develop and Debug"]\n    RunYourProgram["Run Your Program"]\n    RunYourProgram --\x3e FindTheLineOfCode["Find the line of code<br/>that doesn\'t work"]\n    FindTheLineOfCode --\x3e FixTheProblem["Fix the problem"]\n    FixTheProblem --\x3e RepeatContinueWorking["Repeat and Continue Working"]\n    RepeatContinueWorking --\x3e RunYourProgram\n  end'}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["java","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"javac Welcome.java"}),": Compiles the Java source file ",(0,s.jsx)(n.code,{children:"Welcome.java"})," into class binary file."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"java Welcome"}),": Executes the Java program ",(0,s.jsx)(n.code,{children:"Welcome"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["python","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"python welcome.py"}),": Executes the Python script ",(0,s.jsx)(n.code,{children:"welcome.py"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"oop",children:"OOP"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Object: An object is a thing, tangible and intangible. An object has fields that contain the data and methods to access and modify the data."}),"\n",(0,s.jsx)(n.li,{children:"Class: A class is an abstract definition of objects. A class is a template of a blueprint that defines what data and methods are included in objects."}),"\n",(0,s.jsxs)(n.li,{children:["Method: A block of code grouped together to perform an operation. A method has a ",(0,s.jsx)(n.strong,{children:"name"}),", ",(0,s.jsx)(n.strong,{children:"parameters"}),", and a ",(0,s.jsx)(n.strong,{children:"return type"}),"."]}),"\n",(0,s.jsx)(n.li,{children:"Field: A field is a data attribute of an object. A field value is exposed using object methods."}),"\n",(0,s.jsx)(n.li,{children:"Organizing code into classes improves modularity, reusability, extendability, and scalability."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"java-vs-python",children:"Java vs Python"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Identifier type"}),(0,s.jsx)(n.th,{children:"Java"}),(0,s.jsx)(n.th,{children:"Python"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Class"}),(0,s.jsx)(n.td,{children:"Use CamelCase for multi-word classes"}),(0,s.jsx)(n.td,{children:"Use snake_case for multi-word classes"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Function"}),(0,s.jsx)(n.td,{children:"use verbs or verb phrases"}),(0,s.jsx)(n.td,{children:"use lowercase_with_underscores"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Procedure"}),(0,s.jsx)(n.td,{children:"use verbs or verb phrases"}),(0,s.jsx)(n.td,{children:"use lowercase_with_underscores"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Variable"}),(0,s.jsx)(n.td,{children:"camelCase"}),(0,s.jsx)(n.td,{children:"lowercase_with_underscores"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Constant"}),(0,s.jsx)(n.td,{children:"All uppercase words separated by underscores"}),(0,s.jsx)(n.td,{children:"All uppercase words separated by underscores"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Package"}),(0,s.jsx)(n.td,{children:"Lowercase words separated by dots"}),(0,s.jsx)(n.td,{children:"Lowercase words separated by underscores"})]})]})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Java uses the ",(0,s.jsx)(n.code,{children:"toString()"})," function to return objects' information."]}),"\n",(0,s.jsxs)(n.li,{children:["Python can refer to attributes directly or use the ",(0,s.jsx)(n.code,{children:"__str()__"})," function to return objects' information"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"data-types",children:"Data types"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Data Type"}),(0,s.jsx)(n.th,{children:"Size"}),(0,s.jsx)(n.th,{children:"Default value"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"byte"}),(0,s.jsx)(n.td,{children:"1 byte"}),(0,s.jsx)(n.td,{children:"0"}),(0,s.jsx)(n.td,{children:"8-bit signed integer"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"short"}),(0,s.jsx)(n.td,{children:"2 bytes"}),(0,s.jsx)(n.td,{children:"0"}),(0,s.jsx)(n.td,{children:"16-bit signed integer"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"int"}),(0,s.jsx)(n.td,{children:"4 bytes"}),(0,s.jsx)(n.td,{children:"0"}),(0,s.jsx)(n.td,{children:"32-bit signed integer"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"long"}),(0,s.jsx)(n.td,{children:"8 bytes"}),(0,s.jsx)(n.td,{children:"0"}),(0,s.jsx)(n.td,{children:"64-bit signed integer"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"float"}),(0,s.jsx)(n.td,{children:"4 bytes"}),(0,s.jsx)(n.td,{children:"0.0f"}),(0,s.jsx)(n.td,{children:"32-bit floating point"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"double"}),(0,s.jsx)(n.td,{children:"8 bytes"}),(0,s.jsx)(n.td,{children:"0.0d"}),(0,s.jsx)(n.td,{children:"64-bit floating point"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"boolean"}),(0,s.jsx)(n.td,{children:"1 bit"}),(0,s.jsx)(n.td,{children:"false"}),(0,s.jsx)(n.td,{children:"true or false"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"char"}),(0,s.jsx)(n.td,{children:"2 bytes"}),(0,s.jsx)(n.td,{children:"'\\u0000'"}),(0,s.jsx)(n.td,{children:"16-bit Unicode character"})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"non-primitive-data-types",children:"Non-Primitive Data Types"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Non-primitive: Arrays, Classes, Interfaces, and Strings."}),"\n",(0,s.jsxs)(n.li,{children:["Non-primitive data types are by default set to ",(0,s.jsx)(n.strong,{children:"null"})," in Java, ",(0,s.jsx)(n.strong,{children:"None"})," in Python."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"variables",children:"Variables"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Static"}),": enables the variable to be used without creating an object of its defining class."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Final"}),": makes the variable unchangeable."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"operators",children:"Operators"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Operator Category"}),(0,s.jsx)(n.th,{children:"Java"}),(0,s.jsx)(n.th,{children:"Python"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Unary"}),(0,s.jsx)(n.td,{children:"expr++ expr--"}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"++expr --expr +expr -expr"}),(0,s.jsx)(n.td,{children:"+expr -expr"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Arithmetic"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"* / &"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"* / &"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"+ -"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"+ -"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Relational"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"< > <= >="})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"< > <= >="})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"==  !="})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"==  !="})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Logical"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"! &&"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"not and"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"||"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"or"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Ternary"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"(expr1) ? <expr2> : <expr3>"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"(expr1) if <expr2> then <expr3>"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Assignment"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"= += -= *= /= %="})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"= += -= *= /= %= **="})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Identity/Membership"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"is  is not  in  not in"})})]})]})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Java: ",(0,s.jsx)(n.code,{children:"boolean q = (5 % 2 != 2) ? true : false"})]}),"\n",(0,s.jsxs)(n.li,{children:["Python: ",(0,s.jsx)(n.code,{children:"q = True if (5 % 2 != 2) else False"})]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"standard-input",children:"Standard Input"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'import java.util.Scanner;\n\npublic class Inputs {\n  static Scanner in = new Scanner(System.in);\n\n  public static void main(String[] args) {\n    System.out.print("X = ");\n    int x = in.nextInt();\n    System.out.println("x squared = " + Math.pow(x, 2));\n  }\n}\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-py",children:'import sys\n\nx = int(input("x = "))\n\nprint("x squared = ", pow(x, 2))\n'})}),"\n",(0,s.jsx)(n.h2,{id:"string",children:"String"}),"\n",(0,s.jsx)(n.h3,{id:"string-java",children:"String (java)"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"Immutable"}),"\n"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:'String s1 = "Hello";'}),": initialize using literal syntax"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:'String s2 = new String("Hello");'}),": initialize using a constructor"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"s1 == s1 // false\ns1.equals(s2) // true\n"})}),"\n",(0,s.jsx)(n.mermaid,{value:'graph LR\n  s1((s1))\n  s2((s2))\n  subgraph RAM\n    Hello1["Hello"]\n    Hello2["Hello"]\n  end\n\n  s1 --\x3e Hello1\n  s2 --\x3e Hello2'}),"\n",(0,s.jsx)(n.h3,{id:"string-format-python",children:"String Format (Python)"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Symbol"}),(0,s.jsx)(n.th,{children:"Meaning"}),(0,s.jsx)(n.th,{children:"Example code"}),(0,s.jsx)(n.th,{children:"Output"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"<"})}),(0,s.jsx)(n.td,{children:"Left align"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"f'[{42:<5}]'"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"[42   ]"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:">"})}),(0,s.jsx)(n.td,{children:"Right align"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"f'[{42:>5}]'"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"[   42]"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"^"})}),(0,s.jsx)(n.td,{children:"Center align"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"f'[{42:^5}]'"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"[ 42  ]"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"<"})," with fill char"]}),(0,s.jsx)(n.td,{children:"Left align with custom fill"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"f'[{42:-<5}]'"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"[42---]"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:">"})," with fill char"]}),(0,s.jsx)(n.td,{children:"Right align with custom fill"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"f'[{42:->5}]'"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"[---42]"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"^"})," with fill char"]}),(0,s.jsx)(n.td,{children:"Center align with custom fill"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"f'[{42:->5}]'"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"[-42--]"})})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"array",children:"Array"}),"\n",(0,s.jsx)(n.h3,{id:"array-java",children:"Array (java)"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"int[] x = {2, 4, -1, 11, 3};"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Declaration: ",(0,s.jsx)(n.code,{children:"int[] x"})]}),"\n",(0,s.jsxs)(n.li,{children:["Instantiation: ",(0,s.jsx)(n.code,{children:"x = new int[5];"})]}),"\n",(0,s.jsxs)(n.li,{children:["Initialization: ",(0,s.jsx)(n.code,{children:"x[0] = 2; x[1] = 4; x[2] = -1;"})]}),"\n"]})]})}function o(e={}){let{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},661:function(e,n,r){r.d(n,{R:()=>d,x:()=>l});var t=r(59729);let s={},i=t.createContext(s);function d(e){let n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),t.createElement(i.Provider,{value:n},e.children)}},88764:function(e){e.exports=JSON.parse('{"permalink":"/2025/08/11/fundamentals-of-software-development-003","source":"@site/blog/2025/08/11/fundamentals-of-software-development-003.md","title":"FSD +003","description":"Fundamentals of software development +003","date":"2025-08-11T05:27:23.544Z","tags":[{"inline":true,"label":"fsd","permalink":"/tags/fsd"}],"readingTime":3.9,"hasTruncateMarker":false,"authors":[{"name":"Eunkwang Shin","title":"Owner","url":"https://github.com/gracefullight","socials":{"linkedin":"https://www.linkedin.com/in/gracefullight/","github":"https://github.com/gracefullight","email":"mailto:gracefullight.dev@gmail.com"},"description":"Full Stack JavaScript Developer | Half-time Open Sourcerer.","page":{"permalink":"/authors/me"},"imageURL":"https://avatars.githubusercontent.com/u/11773683?v=4","key":"me"}],"frontMatter":{"title":"FSD +003","date":"2025-08-11T05:27:23.544Z","description":"Fundamentals of software development +003","authors":"me","tags":["fsd"]},"unlisted":false,"prevItem":{"title":"Vocabulary for AI +004","permalink":"/vocab/vocab-ai-004"},"nextItem":{"title":"IAI +002","permalink":"/2025/08/09/introduction-to-ai-002"}}')}}]);