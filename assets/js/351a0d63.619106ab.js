"use strict";(self.webpackChunkgracefullight_github_io=self.webpackChunkgracefullight_github_io||[]).push([[23035],{59754:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var r=n(76687);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=c(n),h=a,g=m["".concat(s,".").concat(h)]||m[h]||p[h]||l;return n?r.createElement(g,i(i({ref:t},u),{},{components:n})):r.createElement(g,i({ref:t},u))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var c=2;c<l;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},37591:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var r=n(96428),a=(n(76687),n(59754));const l={title:"\ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub9ac\ub205\uc2a4 \ucee4\ub110 \ud29c\ub2dd\ud558\uae30",authors:"me",tags:["k8s","docker","linux"],date:new Date("2020-01-24T23:43:55.000Z")},i="\ubcc0\uacbd\uac00\ub2a5\ud55c \ucee4\ub110 \uc124\uc815",o={permalink:"/2020/01/24/k8s-linux-kernel-tuning",source:"@site/blog/2020/01/24/k8s-linux-kernel-tuning.md",title:"\ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub9ac\ub205\uc2a4 \ucee4\ub110 \ud29c\ub2dd\ud558\uae30",description:"\ub178\ub4dc \ub808\ubca8\uc758 sysctl\uacfc \ub124\uc784\uc2a4\ud398\uc774\uc2a4 sysctl\uacfc \uac19\uc740 \ucee4\ub110 \ud30c\ub77c\ubbf8\ud130\ub97c sysctl \uc778\ud130\ud398\uc774\uc2a4\ub85c \ubcc0\uacbd\ud560 \uc218 \uc788\ub2e4.",date:"2020-01-24T23:43:55.000Z",formattedDate:"January 24, 2020",tags:[{label:"k8s",permalink:"/tags/k-8-s"},{label:"docker",permalink:"/tags/docker"},{label:"linux",permalink:"/tags/linux"}],readingTime:2.38,hasTruncateMarker:!1,authors:[{name:"Gracefullight",title:"Owner",url:"https://github.com/gracefullight",imageURL:"https://avatars.githubusercontent.com/u/11773683?v=4",key:"me"}],frontMatter:{title:"\ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub9ac\ub205\uc2a4 \ucee4\ub110 \ud29c\ub2dd\ud558\uae30",authors:"me",tags:["k8s","docker","linux"],date:"2020-01-24T23:43:55.000Z"},prevItem:{title:"Pythonic - \ud578\ub4e4\ub9c1",permalink:"/2020/01/27/Pythonic-handling"},nextItem:{title:"\uc11c\ube44\uc2a4\uc6cc\ucee4\ub85c POST Request \uce90\uc2f1\ud558\uae30",permalink:"/2020/01/16/Serviceworker-cache-POST-requests"}},s={authorsImageUrls:[void 0]},c=[{value:"ARP \uce90\uc2dc",id:"arp-\uce90\uc2dc",level:2}],u={toc:c};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"\ub178\ub4dc \ub808\ubca8\uc758 sysctl\uacfc \ub124\uc784\uc2a4\ud398\uc774\uc2a4 sysctl\uacfc \uac19\uc740 \ucee4\ub110 \ud30c\ub77c\ubbf8\ud130\ub97c sysctl \uc778\ud130\ud398\uc774\uc2a4\ub85c \ubcc0\uacbd\ud560 \uc218 \uc788\ub2e4.\n\ubcc0\uacbd \uac00\ub2a5\ud55c \ud30c\ub77c\ubbf8\ud130\ub294 \ub2e4\uc74c\uacfc \uac19\ub2e4."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"abi"),": \uc2e4\ud589 \ub3c4\uba54\uc778 \ud2b9\uc131"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"fs"),": \ud2b9\uc815 \ud30c\uc77c \uc2dc\uc2a4\ud15c, \ud30c\uc77c \ud578\ub4e4\ub9c1, inode, dentry, \ucffc\ud130 \uc870\uc815"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"kernel"),": \uc804\uc5ed \ucee4\ub110 \uc124\uc815 \ubcc0\uacbd"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"net"),": \ub124\ud2b8\uc6cc\ud0b9"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"sunrpc"),": SUN rpc \ud638\ucd9c"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"vm"),": \uba54\ubaa8\ub9ac \uc870\uc815, \ubc84\ud37c \ubc0f \uce90\uc2dc \uad00\ub9ac"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"user"),": \uc0ac\uc6a9\uc790\ubcc4 \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \uc81c\ud55c")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"taint, toleration")," \uc744 \uac19\uc774 \uc0ac\uc6a9\ud574 \uc0ac\uc774\ub4dc\uc774\ud399\uc744 \ubc29\uc9c0\ud558\ub77c\uace0 \uad8c\ud558\uace0 \uc788\ub2e4."),(0,a.kt)("h2",{id:"arp-\uce90\uc2dc"},"ARP \uce90\uc2dc"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"neighbour: arp_cache: neighbor table overflow!")),(0,a.kt)("p",null,"\ucfe0\ubc84\ub124\ud2f0\uc2a4\uac00 \ub300\ub7c9\uc758 IP\ub97c \uc18c\ube44\ud558\uba74\uc11c ARP \uce90\uc2dc \uacf5\uac04\uc744 \ubaa8\ub450 \uc0ac\uc6a9\ud560 \uacbd\uc6b0 ARP \uce90\uc2dc \uad00\ub828 \ubcc0\uc218 \uc870\uc808\uc774 \uac00\ub2a5\ud558\ub2e4.\n\ub300\uaddc\ubaa8 HPC \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c\ub294 \ud754\ud55c \uc77c\uc774\uba70 \ucfe0\ubc84\ub124\ud2f0\uc2a4\uc758 \uc8fc\uc18c \uc18c\uc9c4\uc744 \ubc29\uc9c0\ud560 \uc218 \uc788\ub2e4.\n\uc774 \uc624\ub958\ub294 ",(0,a.kt)("inlineCode",{parentName:"p"},"nodes with 40+ cores")," && ",(0,a.kt)("inlineCode",{parentName:"p"},"more than 16 segments in each node")," \uc815\ub3c4\uc5d0\uc11c \ubc1c\uc0dd\ud558\ub294 \ub4ef \ud558\ub2e4."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"net.ipv4.neigh.default.gc_thresh1"),": gc_thresh1 represents the minimum number of entries that may be in the ARP cache. Garbage collection will not be triggered if the number of entries is below this setting."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"net.ipv4.neigh.default.gc_thresh2"),": gc_thresh2 represents the soft maximum number of entries that may be in the ARP cache. This setting is arguably the most important, as ARP garbage collection will be triggered ~5s after reaching this soft maximum."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"net.ipv4.neigh.default.gc_thresh3"),": gc_thresh3 represents the hard maximum number of entries in the ARP cache.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"net.ipv4.neigh.default.gc_thresh1 = 80000\nnet.ipv4.neigh.default.gc_thresh2 = 90000\nnet.ipv4.neigh.default.gc_thresh3 = 100000\n")),(0,a.kt)("h1",{id:"\uc608\uc2dc"},"\uc608\uc2dc"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: v1\nkind: Pod\nmetadata:\n  name: sysctl-example\nspec:\n  securityContext:\n    sysctls:\n      - name: kernel.shm_rmid_forced\n        value: "0"\n      - name: net.core.somaxconn\n        value: "10000"\n      - name: kernel.msgmax\n        value: "65536"\n      - name: fs.file-max\n        value: "2097152"\n      - name: net.ipv4.ip_local_port_range\n        value: "1024 65536"\n')),(0,a.kt)("h1",{id:"\uc5ec\ub2f4"},"\uc5ec\ub2f4"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\ud30c\uba74 \ud314\uc218\ub85d \ub9ac\ub205\uc2a4\ubd80\ud130 \ub2e4\uc2dc \uc815\ub9ac\ud574\uc57c\ub418\uaca0\ub2e4\ub294 \ub290\ub08c\uc774 \ub4e0\ub2e4.")),(0,a.kt)("h1",{id:"\ucc38\uc870"},"\ucc38\uc870"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/"},"Using sysctls in a Kubernetes Cluster")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://meetup.toast.com/posts/54"},"\ub9ac\ub205\uc2a4 \uc11c\ubc84\uc758 TCP \ub124\ud2b8\uc6cc\ud06c \uc131\ub2a5\uc744 \uacb0\uc815\uc9d3\ub294 \ucee4\ub110 \ud30c\ub77c\ubbf8\ud130 \uc774\uc57c\uae30 - 2\ud3b8")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://success.docker.com/article/how-to-increase-the-arp-cache-collection-threshold"},"How to increase the ARP cache garbage collection threshold")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://openai.com/blog/scaling-kubernetes-to-2500-nodes/"},"Scaling Kubernetes to 2,500 nodes"))))}p.isMDXComponent=!0}}]);